{"id":"node_modules/mongodb-core/lib/connection/pool.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1538017614234},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538419449751},{"name":"util","loc":{"line":10,"column":18},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/util/util.js"},{"name":"events","loc":{"line":4,"column":29},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/events/events.js"},{"name":"./connection","loc":{"line":5,"column":27},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/connection.js"},{"name":"../error","loc":{"line":8,"column":39},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/error.js"},{"name":"./logger","loc":{"line":9,"column":23},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/logger.js"},{"name":"./commands","loc":{"line":11,"column":22},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/commands.js"},{"name":"./command_result","loc":{"line":12,"column":30},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/command_result.js"},{"name":"../wireprotocol/shared","loc":{"line":14,"column":24},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/shared.js"},{"name":"../wireprotocol/compression","loc":{"line":17,"column":39},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/compression.js"},{"name":"../topologies/shared","loc":{"line":18,"column":35},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/topologies/shared.js"},{"name":"./apm","loc":{"line":19,"column":20},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/apm.js"},{"name":"../auth/defaultAuthProviders","loc":{"line":20,"column":37},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/auth/defaultAuthProviders.js"},{"name":"safe-buffer","loc":{"line":21,"column":23},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/safe-buffer/index.js"},{"name":"process","parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/pool.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/process/browser.js"}],"generated":{"js":"\nvar process = require(\"process\");\n'use strict';\n\nconst inherits = require('util').inherits;\nconst EventEmitter = require('events').EventEmitter;\nconst Connection = require('./connection');\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoWriteConcernError = require('../error').MongoWriteConcernError;\nconst Logger = require('./logger');\nconst f = require('util').format;\nconst Query = require('./commands').Query;\nconst CommandResult = require('./command_result');\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst opcodes = require('../wireprotocol/shared').opcodes;\nconst compress = require('../wireprotocol/compression').compress;\nconst compressorIDs = require('../wireprotocol/compression').compressorIDs;\nconst uncompressibleCommands = require('../wireprotocol/compression').uncompressibleCommands;\nconst resolveClusterTime = require('../topologies/shared').resolveClusterTime;\nconst apm = require('./apm');\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\nconst Buffer = require('safe-buffer').Buffer;\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYING = 'destroying';\nvar DESTROYED = 'destroyed';\n\nvar _id = 0;\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Max server connection pool size\n * @param {number} [options.minSize=0] Minimum server connection pool size\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passPhrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @fires Pool#connect\n * @fires Pool#close\n * @fires Pool#error\n * @fires Pool#timeout\n * @fires Pool#parseError\n * @return {Pool} A cursor instance\n */\nvar Pool = function(topology, options) {\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Store topology for later use\n  this.topology = topology;\n\n  // Add the options\n  this.options = Object.assign(\n    {\n      // Host and port settings\n      host: 'localhost',\n      port: 27017,\n      // Pool default max size\n      size: 5,\n      // Pool default min size\n      minSize: 0,\n      // socket settings\n      connectionTimeout: 30000,\n      socketTimeout: 360000,\n      keepAlive: true,\n      keepAliveInitialDelay: 300000,\n      noDelay: true,\n      // SSL Settings\n      ssl: false,\n      checkServerIdentity: true,\n      ca: null,\n      crl: null,\n      cert: null,\n      key: null,\n      passPhrase: null,\n      rejectUnauthorized: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      // Reconnection options\n      reconnect: true,\n      reconnectInterval: 1000,\n      reconnectTries: 30,\n      // Enable domains\n      domainsEnabled: false\n    },\n    options\n  );\n\n  // Identification information\n  this.id = _id++;\n  // Current reconnect retries\n  this.retriesLeft = this.options.reconnectTries;\n  this.reconnectId = null;\n  // No bson parser passed in\n  if (\n    !options.bson ||\n    (options.bson &&\n      (typeof options.bson.serialize !== 'function' ||\n        typeof options.bson.deserialize !== 'function'))\n  ) {\n    throw new Error('must pass in valid bson parser');\n  }\n\n  // Logger instance\n  this.logger = Logger('Pool', options);\n  // Pool state\n  this.state = DISCONNECTED;\n  // Connections\n  this.availableConnections = [];\n  this.inUseConnections = [];\n  this.connectingConnections = [];\n  // Currently executing\n  this.executing = false;\n  // Operation work queue\n  this.queue = [];\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(options.bson);\n\n  // Contains the reconnect connection\n  this.reconnectConnection = null;\n\n  // Are we currently authenticating\n  this.authenticating = false;\n  this.loggingout = false;\n  this.nonAuthenticatedConnections = [];\n  this.authenticatingTimestamp = null;\n  // Number of consecutive timeouts caught\n  this.numberOfConsecutiveTimeouts = 0;\n  // Current pool Index\n  this.connectionIndex = 0;\n};\n\ninherits(Pool, EventEmitter);\n\nObject.defineProperty(Pool.prototype, 'size', {\n  enumerable: true,\n  get: function() {\n    return this.options.size;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'minSize', {\n  enumerable: true,\n  get: function() {\n    return this.options.minSize;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'connectionTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.connectionTimeout;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'socketTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.socketTimeout;\n  }\n});\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYING, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYING, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYING],\n    destroying: [DESTROYING, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.emit('stateChanged', self.state, newState);\n    self.state = newState;\n  } else {\n    self.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\nfunction authenticate(pool, auth, connection, cb) {\n  if (auth[0] === undefined) return cb(null);\n  // We need to authenticate the server\n  var mechanism = auth[0];\n  var db = auth[1];\n  // Validate if the mechanism exists\n  if (!pool.authProviders[mechanism]) {\n    throw new MongoError(f('authMechanism %s not supported', mechanism));\n  }\n\n  // Get the provider\n  var provider = pool.authProviders[mechanism];\n\n  // Authenticate using the provided mechanism\n  provider.auth.apply(provider, [write(pool), [connection], db].concat(auth.slice(2)).concat([cb]));\n}\n\n// The write function used by the authentication mechanism (bypasses external)\nfunction write(self) {\n  return function(connection, command, callback) {\n    // Get the raw buffer\n    // Ensure we stop auth if pool was destroyed\n    if (self.state === DESTROYED || self.state === DESTROYING) {\n      return callback(new MongoError('pool destroyed'));\n    }\n\n    // Set the connection workItem callback\n    connection.workItems.push({\n      cb: callback,\n      command: true,\n      requestId: command.requestId\n    });\n\n    // Write the buffer out to the connection\n    connection.write(command.toBin());\n  };\n}\n\nfunction reauthenticate(pool, connection, cb) {\n  // Authenticate\n  function authenticateAgainstProvider(pool, connection, providers, cb) {\n    // Finished re-authenticating against providers\n    if (providers.length === 0) return cb();\n    // Get the provider name\n    var provider = pool.authProviders[providers.pop()];\n\n    // Auth provider\n    provider.reauthenticate(write(pool), [connection], function(err) {\n      // We got an error return immediately\n      if (err) return cb(err);\n      // Continue authenticating the connection\n      authenticateAgainstProvider(pool, connection, providers, cb);\n    });\n  }\n\n  // Start re-authenticating process\n  authenticateAgainstProvider(pool, connection, Object.keys(pool.authProviders), cb);\n}\n\nfunction connectionFailureHandler(self, event) {\n  return function(err) {\n    if (this._connectionFailHandled) return;\n    this._connectionFailHandled = true;\n    // Destroy the connection\n    this.destroy();\n\n    // Remove the connection\n    removeConnection(self, this);\n\n    // Flush all work Items on this connection\n    while (this.workItems.length > 0) {\n      var workItem = this.workItems.shift();\n      if (workItem.cb) workItem.cb(err);\n    }\n\n    // Did we catch a timeout, increment the numberOfConsecutiveTimeouts\n    if (event === 'timeout') {\n      self.numberOfConsecutiveTimeouts = self.numberOfConsecutiveTimeouts + 1;\n\n      // Have we timed out more than reconnectTries in a row ?\n      // Force close the pool as we are trying to connect to tcp sink hole\n      if (self.numberOfConsecutiveTimeouts > self.options.reconnectTries) {\n        self.numberOfConsecutiveTimeouts = 0;\n        // Destroy all connections and pool\n        self.destroy(true);\n        // Emit close event\n        return self.emit('close', self);\n      }\n    }\n\n    // No more socket available propegate the event\n    if (self.socketCount() === 0) {\n      if (self.state !== DESTROYED && self.state !== DESTROYING) {\n        stateTransition(self, DISCONNECTED);\n      }\n\n      // Do not emit error events, they are always close events\n      // do not trigger the low level error handler in node\n      event = event === 'error' ? 'close' : event;\n      self.emit(event, err);\n    }\n\n    // Start reconnection attempts\n    if (!self.reconnectId && self.options.reconnect) {\n      self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n    }\n\n    // Do we need to do anything to maintain the minimum pool size\n    const totalConnections =\n      self.availableConnections.length +\n      self.connectingConnections.length +\n      self.inUseConnections.length;\n\n    if (totalConnections < self.minSize) {\n      _createConnection(self);\n    }\n  };\n}\n\nfunction attemptReconnect(self) {\n  return function() {\n    self.emit('attemptReconnect', self);\n    if (self.state === DESTROYED || self.state === DESTROYING) return;\n\n    // We are connected do not try again\n    if (self.isConnected()) {\n      self.reconnectId = null;\n      return;\n    }\n\n    // If we have failure schedule a retry\n    function _connectionFailureHandler(self) {\n      return function() {\n        if (this._connectionFailHandled) return;\n        this._connectionFailHandled = true;\n        // Destroy the connection\n        this.destroy();\n        // Count down the number of reconnects\n        self.retriesLeft = self.retriesLeft - 1;\n        // How many retries are left\n        if (self.retriesLeft <= 0) {\n          // Destroy the instance\n          self.destroy();\n          // Emit close event\n          self.emit(\n            'reconnectFailed',\n            new MongoNetworkError(\n              f(\n                'failed to reconnect after %s attempts with interval %s ms',\n                self.options.reconnectTries,\n                self.options.reconnectInterval\n              )\n            )\n          );\n        } else {\n          self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n        }\n      };\n    }\n\n    // Got a connect handler\n    function _connectHandler(self) {\n      return function() {\n        // Assign\n        var connection = this;\n\n        // Pool destroyed stop the connection\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return connection.destroy();\n        }\n\n        // Clear out all handlers\n        handlers.forEach(function(event) {\n          connection.removeAllListeners(event);\n        });\n\n        // Reset reconnect id\n        self.reconnectId = null;\n\n        // Apply pool connection handlers\n        connection.on('error', connectionFailureHandler(self, 'error'));\n        connection.on('close', connectionFailureHandler(self, 'close'));\n        connection.on('timeout', connectionFailureHandler(self, 'timeout'));\n        connection.on('parseError', connectionFailureHandler(self, 'parseError'));\n\n        // Apply any auth to the connection\n        reauthenticate(self, this, function() {\n          // Reset retries\n          self.retriesLeft = self.options.reconnectTries;\n          // Push to available connections\n          self.availableConnections.push(connection);\n          // Set the reconnectConnection to null\n          self.reconnectConnection = null;\n          // Emit reconnect event\n          self.emit('reconnect', self);\n          // Trigger execute to start everything up again\n          _execute(self)();\n        });\n      };\n    }\n\n    // Create a connection\n    self.reconnectConnection = new Connection(messageHandler(self), self.options);\n    // Add handlers\n    self.reconnectConnection.on('close', _connectionFailureHandler(self, 'close'));\n    self.reconnectConnection.on('error', _connectionFailureHandler(self, 'error'));\n    self.reconnectConnection.on('timeout', _connectionFailureHandler(self, 'timeout'));\n    self.reconnectConnection.on('parseError', _connectionFailureHandler(self, 'parseError'));\n    // On connection\n    self.reconnectConnection.on('connect', _connectHandler(self));\n    // Attempt connection\n    self.reconnectConnection.connect();\n  };\n}\n\nfunction moveConnectionBetween(connection, from, to) {\n  var index = from.indexOf(connection);\n  // Move the connection from connecting to available\n  if (index !== -1) {\n    from.splice(index, 1);\n    to.push(connection);\n  }\n}\n\nfunction messageHandler(self) {\n  return function(message, connection) {\n    // workItem to execute\n    var workItem = null;\n\n    // Locate the workItem\n    for (var i = 0; i < connection.workItems.length; i++) {\n      if (connection.workItems[i].requestId === message.responseTo) {\n        // Get the callback\n        workItem = connection.workItems[i];\n        // Remove from list of workItems\n        connection.workItems.splice(i, 1);\n      }\n    }\n\n    // Reset timeout counter\n    self.numberOfConsecutiveTimeouts = 0;\n\n    // Reset the connection timeout if we modified it for\n    // this operation\n    if (workItem && workItem.socketTimeout) {\n      connection.resetSocketTimeout();\n    }\n\n    // Log if debug enabled\n    if (self.logger.isDebug()) {\n      self.logger.debug(\n        f(\n          'message [%s] received from %s:%s',\n          message.raw.toString('hex'),\n          self.options.host,\n          self.options.port\n        )\n      );\n    }\n\n    // Authenticate any straggler connections\n    function authenticateStragglers(self, connection, callback) {\n      // Get any non authenticated connections\n      var connections = self.nonAuthenticatedConnections.slice(0);\n      var nonAuthenticatedConnections = self.nonAuthenticatedConnections;\n      self.nonAuthenticatedConnections = [];\n\n      // Establish if the connection need to be authenticated\n      // Add to authentication list if\n      // 1. we were in an authentication process when the operation was executed\n      // 2. our current authentication timestamp is from the workItem one, meaning an auth has happened\n      if (\n        connection.workItems.length === 1 &&\n        (connection.workItems[0].authenticating === true ||\n          (typeof connection.workItems[0].authenticatingTimestamp === 'number' &&\n            connection.workItems[0].authenticatingTimestamp !== self.authenticatingTimestamp))\n      ) {\n        // Add connection to the list\n        connections.push(connection);\n      }\n\n      // No connections need to be re-authenticated\n      if (connections.length === 0) {\n        // Release the connection back to the pool\n        moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n        // Finish\n        return callback();\n      }\n\n      // Apply re-authentication to all connections before releasing back to pool\n      var connectionCount = connections.length;\n      // Authenticate all connections\n      for (var i = 0; i < connectionCount; i++) {\n        reauthenticate(self, connections[i], function() {\n          connectionCount = connectionCount - 1;\n\n          if (connectionCount === 0) {\n            // Put non authenticated connections in available connections\n            self.availableConnections = self.availableConnections.concat(\n              nonAuthenticatedConnections\n            );\n            // Release the connection back to the pool\n            moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n            // Return\n            callback();\n          }\n        });\n      }\n    }\n\n    function handleOperationCallback(self, cb, err, result) {\n      // No domain enabled\n      if (!self.options.domainsEnabled) {\n        return process.nextTick(function() {\n          return cb(err, result);\n        });\n      }\n\n      // Domain enabled just call the callback\n      cb(err, result);\n    }\n\n    authenticateStragglers(self, connection, function() {\n      // Keep executing, ensure current message handler does not stop execution\n      if (!self.executing) {\n        process.nextTick(function() {\n          _execute(self)();\n        });\n      }\n\n      // Time to dispatch the message if we have a callback\n      if (workItem && !workItem.immediateRelease) {\n        try {\n          // Parse the message according to the provided options\n          message.parse(workItem);\n        } catch (err) {\n          return handleOperationCallback(self, workItem.cb, new MongoError(err));\n        }\n\n        // Look for clusterTime, and operationTime and update them if necessary\n        if (message.documents[0]) {\n          if (message.documents[0].$clusterTime) {\n            const $clusterTime = message.documents[0].$clusterTime;\n            self.topology.clusterTime = $clusterTime;\n\n            if (workItem.session != null) {\n              resolveClusterTime(workItem.session, $clusterTime);\n            }\n          }\n\n          if (\n            message.documents[0].operationTime &&\n            workItem.session &&\n            workItem.session.supports.causalConsistency\n          ) {\n            workItem.session.advanceOperationTime(message.documents[0].operationTime);\n          }\n        }\n\n        // Establish if we have an error\n        if (workItem.command && message.documents[0]) {\n          const responseDoc = message.documents[0];\n          if (responseDoc.ok === 0 || responseDoc.$err || responseDoc.errmsg || responseDoc.code) {\n            return handleOperationCallback(self, workItem.cb, new MongoError(responseDoc));\n          }\n\n          if (responseDoc.writeConcernError) {\n            const err =\n              responseDoc.ok === 1\n                ? new MongoWriteConcernError(responseDoc.writeConcernError, responseDoc)\n                : new MongoWriteConcernError(responseDoc.writeConcernError);\n            return handleOperationCallback(self, workItem.cb, err);\n          }\n        }\n\n        // Add the connection details\n        message.hashedName = connection.hashedName;\n\n        // Return the documents\n        handleOperationCallback(\n          self,\n          workItem.cb,\n          null,\n          new CommandResult(\n            workItem.fullResult ? message : message.documents[0],\n            connection,\n            message\n          )\n        );\n      }\n    });\n  };\n}\n\n/**\n * Return the total socket count in the pool.\n * @method\n * @return {Number} The number of socket available.\n */\nPool.prototype.socketCount = function() {\n  return this.availableConnections.length + this.inUseConnections.length;\n  // + this.connectingConnections.length;\n};\n\n/**\n * Return all pool connections\n * @method\n * @return {Connection[]} The pool connections\n */\nPool.prototype.allConnections = function() {\n  return this.availableConnections.concat(this.inUseConnections).concat(this.connectingConnections);\n};\n\n/**\n * Get a pool connection (round-robin)\n * @method\n * @return {Connection}\n */\nPool.prototype.get = function() {\n  return this.allConnections()[0];\n};\n\n/**\n * Is the pool connected\n * @method\n * @return {boolean}\n */\nPool.prototype.isConnected = function() {\n  // We are in a destroyed state\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    return false;\n  }\n\n  // Get connections\n  var connections = this.availableConnections.concat(this.inUseConnections);\n\n  // Check if we have any connected connections\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i].isConnected()) return true;\n  }\n\n  // Might be authenticating, but we are still connected\n  if (connections.length === 0 && this.authenticating) {\n    return true;\n  }\n\n  // Not connected\n  return false;\n};\n\n/**\n * Was the pool destroyed\n * @method\n * @return {boolean}\n */\nPool.prototype.isDestroyed = function() {\n  return this.state === DESTROYED || this.state === DESTROYING;\n};\n\n/**\n * Is the pool in a disconnected state\n * @method\n * @return {boolean}\n */\nPool.prototype.isDisconnected = function() {\n  return this.state === DISCONNECTED;\n};\n\n/**\n * Connect pool\n * @method\n */\nPool.prototype.connect = function() {\n  if (this.state !== DISCONNECTED) {\n    throw new MongoError('connection in unlawful state ' + this.state);\n  }\n\n  var self = this;\n  // Transition to connecting state\n  stateTransition(this, CONNECTING);\n  // Create an array of the arguments\n  var args = Array.prototype.slice.call(arguments, 0);\n  // Create a connection\n  var connection = new Connection(messageHandler(self), this.options);\n  // Add to list of connections\n  this.connectingConnections.push(connection);\n  // Add listeners to the connection\n  connection.once('connect', function(connection) {\n    if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n    // If we are in a topology, delegate the auth to it\n    // This is to avoid issues where we would auth against an\n    // arbiter\n    if (self.options.inTopology) {\n      // Set connected mode\n      stateTransition(self, CONNECTED);\n\n      // Move the active connection\n      moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n      // Emit the connect event\n      return self.emit('connect', self);\n    }\n\n    // Apply any store credentials\n    reauthenticate(self, connection, function(err) {\n      if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n      // We have an error emit it\n      if (err) {\n        // Destroy the pool\n        self.destroy();\n        // Emit the error\n        return self.emit('error', err);\n      }\n\n      // Authenticate\n      authenticate(self, args, connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n        // We have an error emit it\n        if (err) {\n          // Destroy the pool\n          self.destroy();\n          // Emit the error\n          return self.emit('error', err);\n        }\n        // Set connected mode\n        stateTransition(self, CONNECTED);\n\n        // Move the active connection\n        moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n        // if we have a minPoolSize, create a connection\n        if (self.minSize) {\n          for (let i = 0; i < self.minSize; i++) _createConnection(self);\n        }\n\n        // Emit the connect event\n        self.emit('connect', self);\n      });\n    });\n  });\n\n  // Add error handlers\n  connection.once('error', connectionFailureHandler(this, 'error'));\n  connection.once('close', connectionFailureHandler(this, 'close'));\n  connection.once('timeout', connectionFailureHandler(this, 'timeout'));\n  connection.once('parseError', connectionFailureHandler(this, 'parseError'));\n\n  try {\n    connection.connect();\n  } catch (err) {\n    // SSL or something threw on connect\n    process.nextTick(function() {\n      self.emit('error', err);\n    });\n  }\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.auth = function(mechanism) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if (self.authProviders[mechanism] == null && mechanism !== 'default') {\n    throw new MongoError(f('auth provider %s does not exist', mechanism));\n  }\n\n  // Signal that we are authenticating a new set of credentials\n  this.authenticating = true;\n  this.authenticatingTimestamp = new Date().getTime();\n\n  // Authenticate all live connections\n  function authenticateLiveConnections(self, args, cb) {\n    // Get the current viable connections\n    var connections = self.allConnections();\n    // Allow nothing else to use the connections while we authenticate them\n    self.availableConnections = [];\n    self.inUseConnections = [];\n    self.connectingConnections = [];\n\n    var connectionsCount = connections.length;\n    var error = null;\n    // No connections available, return\n    if (connectionsCount === 0) {\n      self.authenticating = false;\n      return callback(null);\n    }\n\n    // Authenticate the connections\n    for (var i = 0; i < connections.length; i++) {\n      authenticate(self, args, connections[i], function(err, result) {\n        connectionsCount = connectionsCount - 1;\n\n        // Store the error\n        if (err) error = err;\n\n        // Processed all connections\n        if (connectionsCount === 0) {\n          // Auth finished\n          self.authenticating = false;\n          // Add the connections back to available connections\n          self.availableConnections = self.availableConnections.concat(connections);\n          // We had an error, return it\n          if (error) {\n            // Log the error\n            if (self.logger.isError()) {\n              self.logger.error(\n                f(\n                  '[%s] failed to authenticate against server %s:%s',\n                  self.id,\n                  self.options.host,\n                  self.options.port\n                )\n              );\n            }\n\n            return cb(error, result);\n          }\n          cb(null, result);\n        }\n      });\n    }\n  }\n\n  // Wait for a logout in process to happen\n  function waitForLogout(self, cb) {\n    if (!self.loggingout) return cb();\n    setTimeout(function() {\n      waitForLogout(self, cb);\n    }, 1);\n  }\n\n  // Wait for loggout to finish\n  waitForLogout(self, function() {\n    // Authenticate all live connections\n    authenticateLiveConnections(self, args, function(err, result) {\n      // Credentials correctly stored in auth provider if successful\n      // Any new connections will now reauthenticate correctly\n      self.authenticating = false;\n      // Return after authentication connections\n      callback(err, result);\n    });\n  });\n};\n\n/**\n * Logout all users against a database\n * @method\n * @param {string} dbName The database name\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.logout = function(dbName, callback) {\n  var self = this;\n  if (typeof dbName !== 'string') {\n    throw new MongoError('logout method requires a db name as first argument');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new MongoError('logout method requires a callback');\n  }\n\n  // Indicate logout in process\n  this.loggingout = true;\n\n  // Get all relevant connections\n  var connections = self.availableConnections.concat(self.inUseConnections);\n  var count = connections.length;\n  // Store any error\n  var error = null;\n\n  // Send logout command over all the connections\n  for (var i = 0; i < connections.length; i++) {\n    write(self)(\n      connections[i],\n      new Query(\n        this.options.bson,\n        f('%s.$cmd', dbName),\n        { logout: 1 },\n        { numberToSkip: 0, numberToReturn: 1 }\n      ),\n      function(err) {\n        count = count - 1;\n        if (err) error = err;\n\n        if (count === 0) {\n          self.loggingout = false;\n          callback(error);\n        }\n      }\n    );\n  }\n};\n\n/**\n * Unref the pool\n * @method\n */\nPool.prototype.unref = function() {\n  // Get all the known connections\n  var connections = this.availableConnections\n    .concat(this.inUseConnections)\n    .concat(this.connectingConnections);\n  connections.forEach(function(c) {\n    c.unref();\n  });\n};\n\n// Events\nvar events = ['error', 'close', 'timeout', 'parseError', 'connect'];\n\n// Destroy the connections\nfunction destroy(self, connections) {\n  // Destroy all connections\n  connections.forEach(function(c) {\n    // Remove all listeners\n    for (var i = 0; i < events.length; i++) {\n      c.removeAllListeners(events[i]);\n    }\n    // Destroy connection\n    c.destroy();\n  });\n\n  // Zero out all connections\n  self.inUseConnections = [];\n  self.availableConnections = [];\n  self.nonAuthenticatedConnections = [];\n  self.connectingConnections = [];\n\n  // Set state to destroyed\n  stateTransition(self, DESTROYED);\n}\n\n/**\n * Destroy pool\n * @method\n */\nPool.prototype.destroy = function(force) {\n  var self = this;\n  // Do not try again if the pool is already dead\n  if (this.state === DESTROYED || self.state === DESTROYING) return;\n  // Set state to destroyed\n  stateTransition(this, DESTROYING);\n\n  // Are we force closing\n  if (force) {\n    // Get all the known connections\n    var connections = self.availableConnections\n      .concat(self.inUseConnections)\n      .concat(self.nonAuthenticatedConnections)\n      .concat(self.connectingConnections);\n\n    // Flush any remaining work items with\n    // an error\n    while (self.queue.length > 0) {\n      var workItem = self.queue.shift();\n      if (typeof workItem.cb === 'function') {\n        workItem.cb(new MongoError('Pool was force destroyed'));\n      }\n    }\n\n    // Destroy the topology\n    return destroy(self, connections);\n  }\n\n  // Clear out the reconnect if set\n  if (this.reconnectId) {\n    clearTimeout(this.reconnectId);\n  }\n\n  // If we have a reconnect connection running, close\n  // immediately\n  if (this.reconnectConnection) {\n    this.reconnectConnection.destroy();\n  }\n\n  // Wait for the operations to drain before we close the pool\n  function checkStatus() {\n    flushMonitoringOperations(self.queue);\n\n    if (self.queue.length === 0) {\n      // Get all the known connections\n      var connections = self.availableConnections\n        .concat(self.inUseConnections)\n        .concat(self.nonAuthenticatedConnections)\n        .concat(self.connectingConnections);\n\n      // Check if we have any in flight operations\n      for (var i = 0; i < connections.length; i++) {\n        // There is an operation still in flight, reschedule a\n        // check waiting for it to drain\n        if (connections[i].workItems.length > 0) {\n          return setTimeout(checkStatus, 1);\n        }\n      }\n\n      destroy(self, connections);\n      // } else if (self.queue.length > 0 && !this.reconnectId) {\n    } else {\n      // Ensure we empty the queue\n      _execute(self)();\n      // Set timeout\n      setTimeout(checkStatus, 1);\n    }\n  }\n\n  // Initiate drain of operations\n  checkStatus();\n};\n\n// Prepare the buffer that Pool.prototype.write() uses to send to the server\nvar serializeCommands = function(self, commands, result, callback) {\n  // Base case when there are no more commands to serialize\n  if (commands.length === 0) return callback(null, result);\n\n  // Pop off the zeroth command and serialize it\n  var thisCommand = commands.shift();\n  var originalCommandBuffer = thisCommand.toBin();\n\n  // Check whether we and the server have agreed to use a compressor\n  if (self.options.agreedCompressor && !hasUncompressibleCommands(thisCommand)) {\n    // Transform originalCommandBuffer into OP_COMPRESSED\n    var concatenatedOriginalCommandBuffer = Buffer.concat(originalCommandBuffer);\n    var messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    var originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    compress(self, messageToBeCompressed, function(err, compressedMessage) {\n      if (err) return callback(err, null);\n\n      // Create the msgHeader of OP_COMPRESSED\n      var msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n      msgHeader.writeInt32LE(MESSAGE_HEADER_SIZE + 9 + compressedMessage.length, 0); // messageLength\n      msgHeader.writeInt32LE(thisCommand.requestId, 4); // requestID\n      msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n      msgHeader.writeInt32LE(opcodes.OP_COMPRESSED, 12); // opCode\n\n      // Create the compression details of OP_COMPRESSED\n      var compressionDetails = Buffer.alloc(9);\n      compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n      compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n      compressionDetails.writeUInt8(compressorIDs[self.options.agreedCompressor], 8); // compressorID\n\n      // Push the concatenation of the OP_COMPRESSED message onto results\n      result.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n\n      // Continue recursing through the commands array\n      serializeCommands(self, commands, result, callback);\n    });\n  } else {\n    // Push the serialization of the command onto results\n    result.push(originalCommandBuffer);\n\n    // Continue recursing through the commands array\n    serializeCommands(self, commands, result, callback);\n  }\n};\n\n/**\n * Write a message to MongoDB\n * @method\n * @return {Connection}\n */\nPool.prototype.write = function(commands, options, cb) {\n  var self = this;\n  // Ensure we have a callback\n  if (typeof options === 'function') {\n    cb = options;\n  }\n\n  // Always have options\n  options = options || {};\n\n  // We need to have a callback function unless the message returns no response\n  if (!(typeof cb === 'function') && !options.noResponse) {\n    throw new MongoError('write method must provide a callback');\n  }\n\n  // Pool was destroyed error out\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    // Callback with an error\n    if (cb) {\n      try {\n        cb(new MongoError('pool destroyed'));\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    }\n\n    return;\n  }\n\n  if (this.options.domainsEnabled && process.domain && typeof cb === 'function') {\n    // if we have a domain bind to it\n    var oldCb = cb;\n    cb = process.domain.bind(function() {\n      // v8 - argumentsToArray one-liner\n      var args = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      // bounce off event loop so domain switch takes place\n      process.nextTick(function() {\n        oldCb.apply(null, args);\n      });\n    });\n  }\n\n  // Do we have an operation\n  var operation = {\n    cb: cb,\n    raw: false,\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    fullResult: false\n  };\n\n  // Set the options for the parsing\n  operation.promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true;\n  operation.promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : true;\n  operation.promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false;\n  operation.raw = typeof options.raw === 'boolean' ? options.raw : false;\n  operation.immediateRelease =\n    typeof options.immediateRelease === 'boolean' ? options.immediateRelease : false;\n  operation.documentsReturnedIn = options.documentsReturnedIn;\n  operation.command = typeof options.command === 'boolean' ? options.command : false;\n  operation.fullResult = typeof options.fullResult === 'boolean' ? options.fullResult : false;\n  operation.noResponse = typeof options.noResponse === 'boolean' ? options.noResponse : false;\n  operation.session = options.session || null;\n\n  // Optional per operation socketTimeout\n  operation.socketTimeout = options.socketTimeout;\n  operation.monitoring = options.monitoring;\n  // Custom socket Timeout\n  if (options.socketTimeout) {\n    operation.socketTimeout = options.socketTimeout;\n  }\n\n  // Ensure commands is an array\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n\n  // Get the requestId\n  operation.requestId = commands[commands.length - 1].requestId;\n\n  if (hasSessionSupport(this.topology)) {\n    let sessionOptions = {};\n    if (this.topology.clusterTime) {\n      sessionOptions = { $clusterTime: this.topology.clusterTime };\n    }\n\n    if (operation.session) {\n      // TODO: reenable when sessions development is complete\n      // if (operation.session.topology !== this.topology) {\n      //   return cb(\n      //     new MongoError('Sessions may only be used with the client they were created from')\n      //   );\n      // }\n\n      if (operation.session.hasEnded) {\n        return cb(new MongoError('Use of expired sessions is not permitted'));\n      }\n\n      if (\n        operation.session.clusterTime &&\n        operation.session.clusterTime.clusterTime.greaterThan(\n          sessionOptions.$clusterTime.clusterTime\n        )\n      ) {\n        sessionOptions.$clusterTime = operation.session.clusterTime;\n      }\n\n      sessionOptions.lsid = operation.session.id;\n\n      // update the `lastUse` of the acquired ServerSession\n      operation.session.serverSession.lastUse = Date.now();\n    }\n\n    // decorate the commands with session-specific details\n    commands.forEach(command => {\n      if (command instanceof Query) {\n        if (command.query.$query) {\n          Object.assign(command.query.$query, sessionOptions);\n        } else {\n          Object.assign(command.query, sessionOptions);\n        }\n      } else {\n        Object.assign(command, sessionOptions);\n      }\n    });\n  }\n\n  // If command monitoring is enabled we need to modify the callback here\n  if (self.options.monitorCommands) {\n    // NOTE: there is only ever a single command, for some legacy reason I am unaware of we\n    //       treat this as a potential array of commands\n    const command = commands[0];\n    this.emit('commandStarted', new apm.CommandStartedEvent(this, command));\n\n    operation.started = process.hrtime();\n    operation.cb = (err, reply) => {\n      if (err) {\n        self.emit(\n          'commandFailed',\n          new apm.CommandFailedEvent(this, command, err, operation.started)\n        );\n      } else {\n        if (reply && reply.result && (reply.result.ok === 0 || reply.result.$err)) {\n          self.emit(\n            'commandFailed',\n            new apm.CommandFailedEvent(this, command, reply.result, operation.started)\n          );\n        } else {\n          self.emit(\n            'commandSucceeded',\n            new apm.CommandSucceededEvent(this, command, reply, operation.started)\n          );\n        }\n      }\n\n      if (typeof cb === 'function') cb(err, reply);\n    };\n  }\n\n  // Prepare the operation buffer\n  serializeCommands(self, commands, [], function(err, serializedCommands) {\n    if (err) throw err;\n\n    // Set the operation's buffer to the serialization of the commands\n    operation.buffer = serializedCommands;\n\n    // If we have a monitoring operation schedule as the very first operation\n    // Otherwise add to back of queue\n    if (options.monitoring) {\n      self.queue.unshift(operation);\n    } else {\n      self.queue.push(operation);\n    }\n\n    // Attempt to execute the operation\n    if (!self.executing) {\n      process.nextTick(function() {\n        _execute(self)();\n      });\n    }\n  });\n};\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nvar hasUncompressibleCommands = function(command) {\n  return uncompressibleCommands.some(function(cmd) {\n    return command.query.hasOwnProperty(cmd);\n  });\n};\n\n// Remove connection method\nfunction remove(connection, connections) {\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i] === connection) {\n      connections.splice(i, 1);\n      return true;\n    }\n  }\n}\n\nfunction removeConnection(self, connection) {\n  if (remove(connection, self.availableConnections)) return;\n  if (remove(connection, self.inUseConnections)) return;\n  if (remove(connection, self.connectingConnections)) return;\n  if (remove(connection, self.nonAuthenticatedConnections)) return;\n}\n\n// All event handlers\nvar handlers = ['close', 'message', 'error', 'timeout', 'parseError', 'connect'];\n\nfunction _createConnection(self) {\n  if (self.state === DESTROYED || self.state === DESTROYING) {\n    return;\n  }\n  var connection = new Connection(messageHandler(self), self.options);\n\n  // Push the connection\n  self.connectingConnections.push(connection);\n\n  // Handle any errors\n  var tempErrorHandler = function(_connection) {\n    return function() {\n      // Destroy the connection\n      _connection.destroy();\n      // Remove the connection from the connectingConnections list\n      removeConnection(self, _connection);\n      // Start reconnection attempts\n      if (!self.reconnectId && self.options.reconnect) {\n        self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n      }\n    };\n  };\n\n  // Handle successful connection\n  var tempConnectHandler = function(_connection) {\n    return function() {\n      // Destroyed state return\n      if (self.state === DESTROYED || self.state === DESTROYING) {\n        // Remove the connection from the list\n        removeConnection(self, _connection);\n        return _connection.destroy();\n      }\n\n      // Destroy all event emitters\n      handlers.forEach(function(e) {\n        _connection.removeAllListeners(e);\n      });\n\n      // Add the final handlers\n      _connection.once('close', connectionFailureHandler(self, 'close'));\n      _connection.once('error', connectionFailureHandler(self, 'error'));\n      _connection.once('timeout', connectionFailureHandler(self, 'timeout'));\n      _connection.once('parseError', connectionFailureHandler(self, 'parseError'));\n\n      // Signal\n      reauthenticate(self, _connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return _connection.destroy();\n        }\n        // Remove the connection from the connectingConnections list\n        removeConnection(self, _connection);\n\n        // Handle error\n        if (err) {\n          return _connection.destroy();\n        }\n\n        // If we are c at the moment\n        // Do not automatially put in available connections\n        // As we need to apply the credentials first\n        if (self.authenticating) {\n          self.nonAuthenticatedConnections.push(_connection);\n        } else {\n          // Push to available\n          self.availableConnections.push(_connection);\n          // Execute any work waiting\n          _execute(self)();\n        }\n      });\n    };\n  };\n\n  // Add all handlers\n  connection.once('close', tempErrorHandler(connection));\n  connection.once('error', tempErrorHandler(connection));\n  connection.once('timeout', tempErrorHandler(connection));\n  connection.once('parseError', tempErrorHandler(connection));\n  connection.once('connect', tempConnectHandler(connection));\n\n  // Start connection\n  connection.connect();\n}\n\nfunction flushMonitoringOperations(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    if (queue[i].monitoring) {\n      var workItem = queue[i];\n      queue.splice(i, 1);\n      workItem.cb(\n        new MongoError({ message: 'no connection available for monitoring', driver: true })\n      );\n    }\n  }\n}\n\nfunction _execute(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Already executing, skip\n    if (self.executing) return;\n    // Set pool as executing\n    self.executing = true;\n\n    // Wait for auth to clear before continuing\n    function waitForAuth(cb) {\n      if (!self.authenticating) return cb();\n      // Wait for a milisecond and try again\n      setTimeout(function() {\n        waitForAuth(cb);\n      }, 1);\n    }\n\n    // Block on any auth in process\n    waitForAuth(function() {\n      // New pool connections are in progress, wait them to finish\n      // before executing any more operation to ensure distribution of\n      // operations\n      if (self.connectingConnections.length > 0) {\n        return;\n      }\n\n      // As long as we have available connections\n      // eslint-disable-next-line\n      while (true) {\n        // Total availble connections\n        var totalConnections =\n          self.availableConnections.length +\n          self.connectingConnections.length +\n          self.inUseConnections.length;\n\n        // No available connections available, flush any monitoring ops\n        if (self.availableConnections.length === 0) {\n          // Flush any monitoring operations\n          flushMonitoringOperations(self.queue);\n          break;\n        }\n\n        // No queue break\n        if (self.queue.length === 0) {\n          break;\n        }\n\n        // Get a connection\n        var connection = null;\n\n        // Locate all connections that have no work\n        var connections = [];\n        // Get a list of all connections\n        for (var i = 0; i < self.availableConnections.length; i++) {\n          if (self.availableConnections[i].workItems.length === 0) {\n            connections.push(self.availableConnections[i]);\n          }\n        }\n\n        // No connection found that has no work on it, just pick one for pipelining\n        if (connections.length === 0) {\n          connection =\n            self.availableConnections[self.connectionIndex++ % self.availableConnections.length];\n        } else {\n          connection = connections[self.connectionIndex++ % connections.length];\n        }\n\n        // Is the connection connected\n        if (connection.isConnected()) {\n          // Get the next work item\n          var workItem = self.queue.shift();\n\n          // If we are monitoring we need to use a connection that is not\n          // running another operation to avoid socket timeout changes\n          // affecting an existing operation\n          if (workItem.monitoring) {\n            var foundValidConnection = false;\n\n            for (i = 0; i < self.availableConnections.length; i++) {\n              // If the connection is connected\n              // And there are no pending workItems on it\n              // Then we can safely use it for monitoring.\n              if (\n                self.availableConnections[i].isConnected() &&\n                self.availableConnections[i].workItems.length === 0\n              ) {\n                foundValidConnection = true;\n                connection = self.availableConnections[i];\n                break;\n              }\n            }\n\n            // No safe connection found, attempt to grow the connections\n            // if possible and break from the loop\n            if (!foundValidConnection) {\n              // Put workItem back on the queue\n              self.queue.unshift(workItem);\n\n              // Attempt to grow the pool if it's not yet maxsize\n              if (totalConnections < self.options.size && self.queue.length > 0) {\n                // Create a new connection\n                _createConnection(self);\n              }\n\n              // Re-execute the operation\n              setTimeout(function() {\n                _execute(self)();\n              }, 10);\n\n              break;\n            }\n          }\n\n          // Don't execute operation until we have a full pool\n          if (totalConnections < self.options.size) {\n            // Connection has work items, then put it back on the queue\n            // and create a new connection\n            if (connection.workItems.length > 0) {\n              // Lets put the workItem back on the list\n              self.queue.unshift(workItem);\n              // Create a new connection\n              _createConnection(self);\n              // Break from the loop\n              break;\n            }\n          }\n\n          // Get actual binary commands\n          var buffer = workItem.buffer;\n\n          // Set current status of authentication process\n          workItem.authenticating = self.authenticating;\n          workItem.authenticatingTimestamp = self.authenticatingTimestamp;\n\n          // If we are monitoring take the connection of the availableConnections\n          if (workItem.monitoring) {\n            moveConnectionBetween(connection, self.availableConnections, self.inUseConnections);\n          }\n\n          // Track the executing commands on the mongo server\n          // as long as there is an expected response\n          if (!workItem.noResponse) {\n            connection.workItems.push(workItem);\n          }\n\n          // We have a custom socketTimeout\n          if (!workItem.immediateRelease && typeof workItem.socketTimeout === 'number') {\n            connection.setSocketTimeout(workItem.socketTimeout);\n          }\n\n          // Capture if write was successful\n          var writeSuccessful = true;\n\n          // Put operation on the wire\n          if (Array.isArray(buffer)) {\n            for (i = 0; i < buffer.length; i++) {\n              writeSuccessful = connection.write(buffer[i]);\n            }\n          } else {\n            writeSuccessful = connection.write(buffer);\n          }\n\n          // if the command is designated noResponse, call the callback immeditely\n          if (workItem.noResponse && typeof workItem.cb === 'function') {\n            workItem.cb(null, null);\n          }\n\n          if (writeSuccessful && workItem.immediateRelease && self.authenticating) {\n            removeConnection(self, connection);\n            self.nonAuthenticatedConnections.push(connection);\n          } else if (writeSuccessful === false) {\n            // If write not successful put back on queue\n            self.queue.unshift(workItem);\n            // Remove the disconnected connection\n            removeConnection(self, connection);\n            // Flush any monitoring operations in the queue, failing fast\n            flushMonitoringOperations(self.queue);\n          }\n        } else {\n          // Remove the disconnected connection\n          removeConnection(self, connection);\n          // Flush any monitoring operations in the queue, failing fast\n          flushMonitoringOperations(self.queue);\n        }\n      }\n    });\n\n    self.executing = false;\n  };\n}\n\n// Make execution loop available for testing\nPool._execute = _execute;\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Pool#connect\n * @type {Pool}\n */\n\n/**\n * A server reconnect event, used to verify that pool reconnected.\n *\n * @event Pool#reconnect\n * @type {Pool}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Pool#close\n * @type {Pool}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Pool#error\n * @type {Pool}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Pool#timeout\n * @type {Pool}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Pool#parseError\n * @type {Pool}\n */\n\n/**\n * The driver attempted to reconnect\n *\n * @event Pool#attemptReconnect\n * @type {Pool}\n */\n\n/**\n * The driver exhausted all reconnect attempts\n *\n * @event Pool#reconnectFailed\n * @type {Pool}\n */\n\nmodule.exports = Pool;\n","map":{"mappings":[{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/mongodb-core/lib/connection/pool.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}}],"sources":{"node_modules/mongodb-core/lib/connection/pool.js":"'use strict';\n\nconst inherits = require('util').inherits;\nconst EventEmitter = require('events').EventEmitter;\nconst Connection = require('./connection');\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoWriteConcernError = require('../error').MongoWriteConcernError;\nconst Logger = require('./logger');\nconst f = require('util').format;\nconst Query = require('./commands').Query;\nconst CommandResult = require('./command_result');\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst opcodes = require('../wireprotocol/shared').opcodes;\nconst compress = require('../wireprotocol/compression').compress;\nconst compressorIDs = require('../wireprotocol/compression').compressorIDs;\nconst uncompressibleCommands = require('../wireprotocol/compression').uncompressibleCommands;\nconst resolveClusterTime = require('../topologies/shared').resolveClusterTime;\nconst apm = require('./apm');\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\nconst Buffer = require('safe-buffer').Buffer;\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYING = 'destroying';\nvar DESTROYED = 'destroyed';\n\nvar _id = 0;\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Max server connection pool size\n * @param {number} [options.minSize=0] Minimum server connection pool size\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passPhrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @fires Pool#connect\n * @fires Pool#close\n * @fires Pool#error\n * @fires Pool#timeout\n * @fires Pool#parseError\n * @return {Pool} A cursor instance\n */\nvar Pool = function(topology, options) {\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Store topology for later use\n  this.topology = topology;\n\n  // Add the options\n  this.options = Object.assign(\n    {\n      // Host and port settings\n      host: 'localhost',\n      port: 27017,\n      // Pool default max size\n      size: 5,\n      // Pool default min size\n      minSize: 0,\n      // socket settings\n      connectionTimeout: 30000,\n      socketTimeout: 360000,\n      keepAlive: true,\n      keepAliveInitialDelay: 300000,\n      noDelay: true,\n      // SSL Settings\n      ssl: false,\n      checkServerIdentity: true,\n      ca: null,\n      crl: null,\n      cert: null,\n      key: null,\n      passPhrase: null,\n      rejectUnauthorized: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      // Reconnection options\n      reconnect: true,\n      reconnectInterval: 1000,\n      reconnectTries: 30,\n      // Enable domains\n      domainsEnabled: false\n    },\n    options\n  );\n\n  // Identification information\n  this.id = _id++;\n  // Current reconnect retries\n  this.retriesLeft = this.options.reconnectTries;\n  this.reconnectId = null;\n  // No bson parser passed in\n  if (\n    !options.bson ||\n    (options.bson &&\n      (typeof options.bson.serialize !== 'function' ||\n        typeof options.bson.deserialize !== 'function'))\n  ) {\n    throw new Error('must pass in valid bson parser');\n  }\n\n  // Logger instance\n  this.logger = Logger('Pool', options);\n  // Pool state\n  this.state = DISCONNECTED;\n  // Connections\n  this.availableConnections = [];\n  this.inUseConnections = [];\n  this.connectingConnections = [];\n  // Currently executing\n  this.executing = false;\n  // Operation work queue\n  this.queue = [];\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(options.bson);\n\n  // Contains the reconnect connection\n  this.reconnectConnection = null;\n\n  // Are we currently authenticating\n  this.authenticating = false;\n  this.loggingout = false;\n  this.nonAuthenticatedConnections = [];\n  this.authenticatingTimestamp = null;\n  // Number of consecutive timeouts caught\n  this.numberOfConsecutiveTimeouts = 0;\n  // Current pool Index\n  this.connectionIndex = 0;\n};\n\ninherits(Pool, EventEmitter);\n\nObject.defineProperty(Pool.prototype, 'size', {\n  enumerable: true,\n  get: function() {\n    return this.options.size;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'minSize', {\n  enumerable: true,\n  get: function() {\n    return this.options.minSize;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'connectionTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.connectionTimeout;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'socketTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.socketTimeout;\n  }\n});\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYING, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYING, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYING],\n    destroying: [DESTROYING, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.emit('stateChanged', self.state, newState);\n    self.state = newState;\n  } else {\n    self.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\nfunction authenticate(pool, auth, connection, cb) {\n  if (auth[0] === undefined) return cb(null);\n  // We need to authenticate the server\n  var mechanism = auth[0];\n  var db = auth[1];\n  // Validate if the mechanism exists\n  if (!pool.authProviders[mechanism]) {\n    throw new MongoError(f('authMechanism %s not supported', mechanism));\n  }\n\n  // Get the provider\n  var provider = pool.authProviders[mechanism];\n\n  // Authenticate using the provided mechanism\n  provider.auth.apply(provider, [write(pool), [connection], db].concat(auth.slice(2)).concat([cb]));\n}\n\n// The write function used by the authentication mechanism (bypasses external)\nfunction write(self) {\n  return function(connection, command, callback) {\n    // Get the raw buffer\n    // Ensure we stop auth if pool was destroyed\n    if (self.state === DESTROYED || self.state === DESTROYING) {\n      return callback(new MongoError('pool destroyed'));\n    }\n\n    // Set the connection workItem callback\n    connection.workItems.push({\n      cb: callback,\n      command: true,\n      requestId: command.requestId\n    });\n\n    // Write the buffer out to the connection\n    connection.write(command.toBin());\n  };\n}\n\nfunction reauthenticate(pool, connection, cb) {\n  // Authenticate\n  function authenticateAgainstProvider(pool, connection, providers, cb) {\n    // Finished re-authenticating against providers\n    if (providers.length === 0) return cb();\n    // Get the provider name\n    var provider = pool.authProviders[providers.pop()];\n\n    // Auth provider\n    provider.reauthenticate(write(pool), [connection], function(err) {\n      // We got an error return immediately\n      if (err) return cb(err);\n      // Continue authenticating the connection\n      authenticateAgainstProvider(pool, connection, providers, cb);\n    });\n  }\n\n  // Start re-authenticating process\n  authenticateAgainstProvider(pool, connection, Object.keys(pool.authProviders), cb);\n}\n\nfunction connectionFailureHandler(self, event) {\n  return function(err) {\n    if (this._connectionFailHandled) return;\n    this._connectionFailHandled = true;\n    // Destroy the connection\n    this.destroy();\n\n    // Remove the connection\n    removeConnection(self, this);\n\n    // Flush all work Items on this connection\n    while (this.workItems.length > 0) {\n      var workItem = this.workItems.shift();\n      if (workItem.cb) workItem.cb(err);\n    }\n\n    // Did we catch a timeout, increment the numberOfConsecutiveTimeouts\n    if (event === 'timeout') {\n      self.numberOfConsecutiveTimeouts = self.numberOfConsecutiveTimeouts + 1;\n\n      // Have we timed out more than reconnectTries in a row ?\n      // Force close the pool as we are trying to connect to tcp sink hole\n      if (self.numberOfConsecutiveTimeouts > self.options.reconnectTries) {\n        self.numberOfConsecutiveTimeouts = 0;\n        // Destroy all connections and pool\n        self.destroy(true);\n        // Emit close event\n        return self.emit('close', self);\n      }\n    }\n\n    // No more socket available propegate the event\n    if (self.socketCount() === 0) {\n      if (self.state !== DESTROYED && self.state !== DESTROYING) {\n        stateTransition(self, DISCONNECTED);\n      }\n\n      // Do not emit error events, they are always close events\n      // do not trigger the low level error handler in node\n      event = event === 'error' ? 'close' : event;\n      self.emit(event, err);\n    }\n\n    // Start reconnection attempts\n    if (!self.reconnectId && self.options.reconnect) {\n      self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n    }\n\n    // Do we need to do anything to maintain the minimum pool size\n    const totalConnections =\n      self.availableConnections.length +\n      self.connectingConnections.length +\n      self.inUseConnections.length;\n\n    if (totalConnections < self.minSize) {\n      _createConnection(self);\n    }\n  };\n}\n\nfunction attemptReconnect(self) {\n  return function() {\n    self.emit('attemptReconnect', self);\n    if (self.state === DESTROYED || self.state === DESTROYING) return;\n\n    // We are connected do not try again\n    if (self.isConnected()) {\n      self.reconnectId = null;\n      return;\n    }\n\n    // If we have failure schedule a retry\n    function _connectionFailureHandler(self) {\n      return function() {\n        if (this._connectionFailHandled) return;\n        this._connectionFailHandled = true;\n        // Destroy the connection\n        this.destroy();\n        // Count down the number of reconnects\n        self.retriesLeft = self.retriesLeft - 1;\n        // How many retries are left\n        if (self.retriesLeft <= 0) {\n          // Destroy the instance\n          self.destroy();\n          // Emit close event\n          self.emit(\n            'reconnectFailed',\n            new MongoNetworkError(\n              f(\n                'failed to reconnect after %s attempts with interval %s ms',\n                self.options.reconnectTries,\n                self.options.reconnectInterval\n              )\n            )\n          );\n        } else {\n          self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n        }\n      };\n    }\n\n    // Got a connect handler\n    function _connectHandler(self) {\n      return function() {\n        // Assign\n        var connection = this;\n\n        // Pool destroyed stop the connection\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return connection.destroy();\n        }\n\n        // Clear out all handlers\n        handlers.forEach(function(event) {\n          connection.removeAllListeners(event);\n        });\n\n        // Reset reconnect id\n        self.reconnectId = null;\n\n        // Apply pool connection handlers\n        connection.on('error', connectionFailureHandler(self, 'error'));\n        connection.on('close', connectionFailureHandler(self, 'close'));\n        connection.on('timeout', connectionFailureHandler(self, 'timeout'));\n        connection.on('parseError', connectionFailureHandler(self, 'parseError'));\n\n        // Apply any auth to the connection\n        reauthenticate(self, this, function() {\n          // Reset retries\n          self.retriesLeft = self.options.reconnectTries;\n          // Push to available connections\n          self.availableConnections.push(connection);\n          // Set the reconnectConnection to null\n          self.reconnectConnection = null;\n          // Emit reconnect event\n          self.emit('reconnect', self);\n          // Trigger execute to start everything up again\n          _execute(self)();\n        });\n      };\n    }\n\n    // Create a connection\n    self.reconnectConnection = new Connection(messageHandler(self), self.options);\n    // Add handlers\n    self.reconnectConnection.on('close', _connectionFailureHandler(self, 'close'));\n    self.reconnectConnection.on('error', _connectionFailureHandler(self, 'error'));\n    self.reconnectConnection.on('timeout', _connectionFailureHandler(self, 'timeout'));\n    self.reconnectConnection.on('parseError', _connectionFailureHandler(self, 'parseError'));\n    // On connection\n    self.reconnectConnection.on('connect', _connectHandler(self));\n    // Attempt connection\n    self.reconnectConnection.connect();\n  };\n}\n\nfunction moveConnectionBetween(connection, from, to) {\n  var index = from.indexOf(connection);\n  // Move the connection from connecting to available\n  if (index !== -1) {\n    from.splice(index, 1);\n    to.push(connection);\n  }\n}\n\nfunction messageHandler(self) {\n  return function(message, connection) {\n    // workItem to execute\n    var workItem = null;\n\n    // Locate the workItem\n    for (var i = 0; i < connection.workItems.length; i++) {\n      if (connection.workItems[i].requestId === message.responseTo) {\n        // Get the callback\n        workItem = connection.workItems[i];\n        // Remove from list of workItems\n        connection.workItems.splice(i, 1);\n      }\n    }\n\n    // Reset timeout counter\n    self.numberOfConsecutiveTimeouts = 0;\n\n    // Reset the connection timeout if we modified it for\n    // this operation\n    if (workItem && workItem.socketTimeout) {\n      connection.resetSocketTimeout();\n    }\n\n    // Log if debug enabled\n    if (self.logger.isDebug()) {\n      self.logger.debug(\n        f(\n          'message [%s] received from %s:%s',\n          message.raw.toString('hex'),\n          self.options.host,\n          self.options.port\n        )\n      );\n    }\n\n    // Authenticate any straggler connections\n    function authenticateStragglers(self, connection, callback) {\n      // Get any non authenticated connections\n      var connections = self.nonAuthenticatedConnections.slice(0);\n      var nonAuthenticatedConnections = self.nonAuthenticatedConnections;\n      self.nonAuthenticatedConnections = [];\n\n      // Establish if the connection need to be authenticated\n      // Add to authentication list if\n      // 1. we were in an authentication process when the operation was executed\n      // 2. our current authentication timestamp is from the workItem one, meaning an auth has happened\n      if (\n        connection.workItems.length === 1 &&\n        (connection.workItems[0].authenticating === true ||\n          (typeof connection.workItems[0].authenticatingTimestamp === 'number' &&\n            connection.workItems[0].authenticatingTimestamp !== self.authenticatingTimestamp))\n      ) {\n        // Add connection to the list\n        connections.push(connection);\n      }\n\n      // No connections need to be re-authenticated\n      if (connections.length === 0) {\n        // Release the connection back to the pool\n        moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n        // Finish\n        return callback();\n      }\n\n      // Apply re-authentication to all connections before releasing back to pool\n      var connectionCount = connections.length;\n      // Authenticate all connections\n      for (var i = 0; i < connectionCount; i++) {\n        reauthenticate(self, connections[i], function() {\n          connectionCount = connectionCount - 1;\n\n          if (connectionCount === 0) {\n            // Put non authenticated connections in available connections\n            self.availableConnections = self.availableConnections.concat(\n              nonAuthenticatedConnections\n            );\n            // Release the connection back to the pool\n            moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n            // Return\n            callback();\n          }\n        });\n      }\n    }\n\n    function handleOperationCallback(self, cb, err, result) {\n      // No domain enabled\n      if (!self.options.domainsEnabled) {\n        return process.nextTick(function() {\n          return cb(err, result);\n        });\n      }\n\n      // Domain enabled just call the callback\n      cb(err, result);\n    }\n\n    authenticateStragglers(self, connection, function() {\n      // Keep executing, ensure current message handler does not stop execution\n      if (!self.executing) {\n        process.nextTick(function() {\n          _execute(self)();\n        });\n      }\n\n      // Time to dispatch the message if we have a callback\n      if (workItem && !workItem.immediateRelease) {\n        try {\n          // Parse the message according to the provided options\n          message.parse(workItem);\n        } catch (err) {\n          return handleOperationCallback(self, workItem.cb, new MongoError(err));\n        }\n\n        // Look for clusterTime, and operationTime and update them if necessary\n        if (message.documents[0]) {\n          if (message.documents[0].$clusterTime) {\n            const $clusterTime = message.documents[0].$clusterTime;\n            self.topology.clusterTime = $clusterTime;\n\n            if (workItem.session != null) {\n              resolveClusterTime(workItem.session, $clusterTime);\n            }\n          }\n\n          if (\n            message.documents[0].operationTime &&\n            workItem.session &&\n            workItem.session.supports.causalConsistency\n          ) {\n            workItem.session.advanceOperationTime(message.documents[0].operationTime);\n          }\n        }\n\n        // Establish if we have an error\n        if (workItem.command && message.documents[0]) {\n          const responseDoc = message.documents[0];\n          if (responseDoc.ok === 0 || responseDoc.$err || responseDoc.errmsg || responseDoc.code) {\n            return handleOperationCallback(self, workItem.cb, new MongoError(responseDoc));\n          }\n\n          if (responseDoc.writeConcernError) {\n            const err =\n              responseDoc.ok === 1\n                ? new MongoWriteConcernError(responseDoc.writeConcernError, responseDoc)\n                : new MongoWriteConcernError(responseDoc.writeConcernError);\n            return handleOperationCallback(self, workItem.cb, err);\n          }\n        }\n\n        // Add the connection details\n        message.hashedName = connection.hashedName;\n\n        // Return the documents\n        handleOperationCallback(\n          self,\n          workItem.cb,\n          null,\n          new CommandResult(\n            workItem.fullResult ? message : message.documents[0],\n            connection,\n            message\n          )\n        );\n      }\n    });\n  };\n}\n\n/**\n * Return the total socket count in the pool.\n * @method\n * @return {Number} The number of socket available.\n */\nPool.prototype.socketCount = function() {\n  return this.availableConnections.length + this.inUseConnections.length;\n  // + this.connectingConnections.length;\n};\n\n/**\n * Return all pool connections\n * @method\n * @return {Connection[]} The pool connections\n */\nPool.prototype.allConnections = function() {\n  return this.availableConnections.concat(this.inUseConnections).concat(this.connectingConnections);\n};\n\n/**\n * Get a pool connection (round-robin)\n * @method\n * @return {Connection}\n */\nPool.prototype.get = function() {\n  return this.allConnections()[0];\n};\n\n/**\n * Is the pool connected\n * @method\n * @return {boolean}\n */\nPool.prototype.isConnected = function() {\n  // We are in a destroyed state\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    return false;\n  }\n\n  // Get connections\n  var connections = this.availableConnections.concat(this.inUseConnections);\n\n  // Check if we have any connected connections\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i].isConnected()) return true;\n  }\n\n  // Might be authenticating, but we are still connected\n  if (connections.length === 0 && this.authenticating) {\n    return true;\n  }\n\n  // Not connected\n  return false;\n};\n\n/**\n * Was the pool destroyed\n * @method\n * @return {boolean}\n */\nPool.prototype.isDestroyed = function() {\n  return this.state === DESTROYED || this.state === DESTROYING;\n};\n\n/**\n * Is the pool in a disconnected state\n * @method\n * @return {boolean}\n */\nPool.prototype.isDisconnected = function() {\n  return this.state === DISCONNECTED;\n};\n\n/**\n * Connect pool\n * @method\n */\nPool.prototype.connect = function() {\n  if (this.state !== DISCONNECTED) {\n    throw new MongoError('connection in unlawful state ' + this.state);\n  }\n\n  var self = this;\n  // Transition to connecting state\n  stateTransition(this, CONNECTING);\n  // Create an array of the arguments\n  var args = Array.prototype.slice.call(arguments, 0);\n  // Create a connection\n  var connection = new Connection(messageHandler(self), this.options);\n  // Add to list of connections\n  this.connectingConnections.push(connection);\n  // Add listeners to the connection\n  connection.once('connect', function(connection) {\n    if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n    // If we are in a topology, delegate the auth to it\n    // This is to avoid issues where we would auth against an\n    // arbiter\n    if (self.options.inTopology) {\n      // Set connected mode\n      stateTransition(self, CONNECTED);\n\n      // Move the active connection\n      moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n      // Emit the connect event\n      return self.emit('connect', self);\n    }\n\n    // Apply any store credentials\n    reauthenticate(self, connection, function(err) {\n      if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n      // We have an error emit it\n      if (err) {\n        // Destroy the pool\n        self.destroy();\n        // Emit the error\n        return self.emit('error', err);\n      }\n\n      // Authenticate\n      authenticate(self, args, connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n        // We have an error emit it\n        if (err) {\n          // Destroy the pool\n          self.destroy();\n          // Emit the error\n          return self.emit('error', err);\n        }\n        // Set connected mode\n        stateTransition(self, CONNECTED);\n\n        // Move the active connection\n        moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n        // if we have a minPoolSize, create a connection\n        if (self.minSize) {\n          for (let i = 0; i < self.minSize; i++) _createConnection(self);\n        }\n\n        // Emit the connect event\n        self.emit('connect', self);\n      });\n    });\n  });\n\n  // Add error handlers\n  connection.once('error', connectionFailureHandler(this, 'error'));\n  connection.once('close', connectionFailureHandler(this, 'close'));\n  connection.once('timeout', connectionFailureHandler(this, 'timeout'));\n  connection.once('parseError', connectionFailureHandler(this, 'parseError'));\n\n  try {\n    connection.connect();\n  } catch (err) {\n    // SSL or something threw on connect\n    process.nextTick(function() {\n      self.emit('error', err);\n    });\n  }\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.auth = function(mechanism) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if (self.authProviders[mechanism] == null && mechanism !== 'default') {\n    throw new MongoError(f('auth provider %s does not exist', mechanism));\n  }\n\n  // Signal that we are authenticating a new set of credentials\n  this.authenticating = true;\n  this.authenticatingTimestamp = new Date().getTime();\n\n  // Authenticate all live connections\n  function authenticateLiveConnections(self, args, cb) {\n    // Get the current viable connections\n    var connections = self.allConnections();\n    // Allow nothing else to use the connections while we authenticate them\n    self.availableConnections = [];\n    self.inUseConnections = [];\n    self.connectingConnections = [];\n\n    var connectionsCount = connections.length;\n    var error = null;\n    // No connections available, return\n    if (connectionsCount === 0) {\n      self.authenticating = false;\n      return callback(null);\n    }\n\n    // Authenticate the connections\n    for (var i = 0; i < connections.length; i++) {\n      authenticate(self, args, connections[i], function(err, result) {\n        connectionsCount = connectionsCount - 1;\n\n        // Store the error\n        if (err) error = err;\n\n        // Processed all connections\n        if (connectionsCount === 0) {\n          // Auth finished\n          self.authenticating = false;\n          // Add the connections back to available connections\n          self.availableConnections = self.availableConnections.concat(connections);\n          // We had an error, return it\n          if (error) {\n            // Log the error\n            if (self.logger.isError()) {\n              self.logger.error(\n                f(\n                  '[%s] failed to authenticate against server %s:%s',\n                  self.id,\n                  self.options.host,\n                  self.options.port\n                )\n              );\n            }\n\n            return cb(error, result);\n          }\n          cb(null, result);\n        }\n      });\n    }\n  }\n\n  // Wait for a logout in process to happen\n  function waitForLogout(self, cb) {\n    if (!self.loggingout) return cb();\n    setTimeout(function() {\n      waitForLogout(self, cb);\n    }, 1);\n  }\n\n  // Wait for loggout to finish\n  waitForLogout(self, function() {\n    // Authenticate all live connections\n    authenticateLiveConnections(self, args, function(err, result) {\n      // Credentials correctly stored in auth provider if successful\n      // Any new connections will now reauthenticate correctly\n      self.authenticating = false;\n      // Return after authentication connections\n      callback(err, result);\n    });\n  });\n};\n\n/**\n * Logout all users against a database\n * @method\n * @param {string} dbName The database name\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.logout = function(dbName, callback) {\n  var self = this;\n  if (typeof dbName !== 'string') {\n    throw new MongoError('logout method requires a db name as first argument');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new MongoError('logout method requires a callback');\n  }\n\n  // Indicate logout in process\n  this.loggingout = true;\n\n  // Get all relevant connections\n  var connections = self.availableConnections.concat(self.inUseConnections);\n  var count = connections.length;\n  // Store any error\n  var error = null;\n\n  // Send logout command over all the connections\n  for (var i = 0; i < connections.length; i++) {\n    write(self)(\n      connections[i],\n      new Query(\n        this.options.bson,\n        f('%s.$cmd', dbName),\n        { logout: 1 },\n        { numberToSkip: 0, numberToReturn: 1 }\n      ),\n      function(err) {\n        count = count - 1;\n        if (err) error = err;\n\n        if (count === 0) {\n          self.loggingout = false;\n          callback(error);\n        }\n      }\n    );\n  }\n};\n\n/**\n * Unref the pool\n * @method\n */\nPool.prototype.unref = function() {\n  // Get all the known connections\n  var connections = this.availableConnections\n    .concat(this.inUseConnections)\n    .concat(this.connectingConnections);\n  connections.forEach(function(c) {\n    c.unref();\n  });\n};\n\n// Events\nvar events = ['error', 'close', 'timeout', 'parseError', 'connect'];\n\n// Destroy the connections\nfunction destroy(self, connections) {\n  // Destroy all connections\n  connections.forEach(function(c) {\n    // Remove all listeners\n    for (var i = 0; i < events.length; i++) {\n      c.removeAllListeners(events[i]);\n    }\n    // Destroy connection\n    c.destroy();\n  });\n\n  // Zero out all connections\n  self.inUseConnections = [];\n  self.availableConnections = [];\n  self.nonAuthenticatedConnections = [];\n  self.connectingConnections = [];\n\n  // Set state to destroyed\n  stateTransition(self, DESTROYED);\n}\n\n/**\n * Destroy pool\n * @method\n */\nPool.prototype.destroy = function(force) {\n  var self = this;\n  // Do not try again if the pool is already dead\n  if (this.state === DESTROYED || self.state === DESTROYING) return;\n  // Set state to destroyed\n  stateTransition(this, DESTROYING);\n\n  // Are we force closing\n  if (force) {\n    // Get all the known connections\n    var connections = self.availableConnections\n      .concat(self.inUseConnections)\n      .concat(self.nonAuthenticatedConnections)\n      .concat(self.connectingConnections);\n\n    // Flush any remaining work items with\n    // an error\n    while (self.queue.length > 0) {\n      var workItem = self.queue.shift();\n      if (typeof workItem.cb === 'function') {\n        workItem.cb(new MongoError('Pool was force destroyed'));\n      }\n    }\n\n    // Destroy the topology\n    return destroy(self, connections);\n  }\n\n  // Clear out the reconnect if set\n  if (this.reconnectId) {\n    clearTimeout(this.reconnectId);\n  }\n\n  // If we have a reconnect connection running, close\n  // immediately\n  if (this.reconnectConnection) {\n    this.reconnectConnection.destroy();\n  }\n\n  // Wait for the operations to drain before we close the pool\n  function checkStatus() {\n    flushMonitoringOperations(self.queue);\n\n    if (self.queue.length === 0) {\n      // Get all the known connections\n      var connections = self.availableConnections\n        .concat(self.inUseConnections)\n        .concat(self.nonAuthenticatedConnections)\n        .concat(self.connectingConnections);\n\n      // Check if we have any in flight operations\n      for (var i = 0; i < connections.length; i++) {\n        // There is an operation still in flight, reschedule a\n        // check waiting for it to drain\n        if (connections[i].workItems.length > 0) {\n          return setTimeout(checkStatus, 1);\n        }\n      }\n\n      destroy(self, connections);\n      // } else if (self.queue.length > 0 && !this.reconnectId) {\n    } else {\n      // Ensure we empty the queue\n      _execute(self)();\n      // Set timeout\n      setTimeout(checkStatus, 1);\n    }\n  }\n\n  // Initiate drain of operations\n  checkStatus();\n};\n\n// Prepare the buffer that Pool.prototype.write() uses to send to the server\nvar serializeCommands = function(self, commands, result, callback) {\n  // Base case when there are no more commands to serialize\n  if (commands.length === 0) return callback(null, result);\n\n  // Pop off the zeroth command and serialize it\n  var thisCommand = commands.shift();\n  var originalCommandBuffer = thisCommand.toBin();\n\n  // Check whether we and the server have agreed to use a compressor\n  if (self.options.agreedCompressor && !hasUncompressibleCommands(thisCommand)) {\n    // Transform originalCommandBuffer into OP_COMPRESSED\n    var concatenatedOriginalCommandBuffer = Buffer.concat(originalCommandBuffer);\n    var messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    var originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    compress(self, messageToBeCompressed, function(err, compressedMessage) {\n      if (err) return callback(err, null);\n\n      // Create the msgHeader of OP_COMPRESSED\n      var msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n      msgHeader.writeInt32LE(MESSAGE_HEADER_SIZE + 9 + compressedMessage.length, 0); // messageLength\n      msgHeader.writeInt32LE(thisCommand.requestId, 4); // requestID\n      msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n      msgHeader.writeInt32LE(opcodes.OP_COMPRESSED, 12); // opCode\n\n      // Create the compression details of OP_COMPRESSED\n      var compressionDetails = Buffer.alloc(9);\n      compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n      compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n      compressionDetails.writeUInt8(compressorIDs[self.options.agreedCompressor], 8); // compressorID\n\n      // Push the concatenation of the OP_COMPRESSED message onto results\n      result.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n\n      // Continue recursing through the commands array\n      serializeCommands(self, commands, result, callback);\n    });\n  } else {\n    // Push the serialization of the command onto results\n    result.push(originalCommandBuffer);\n\n    // Continue recursing through the commands array\n    serializeCommands(self, commands, result, callback);\n  }\n};\n\n/**\n * Write a message to MongoDB\n * @method\n * @return {Connection}\n */\nPool.prototype.write = function(commands, options, cb) {\n  var self = this;\n  // Ensure we have a callback\n  if (typeof options === 'function') {\n    cb = options;\n  }\n\n  // Always have options\n  options = options || {};\n\n  // We need to have a callback function unless the message returns no response\n  if (!(typeof cb === 'function') && !options.noResponse) {\n    throw new MongoError('write method must provide a callback');\n  }\n\n  // Pool was destroyed error out\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    // Callback with an error\n    if (cb) {\n      try {\n        cb(new MongoError('pool destroyed'));\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    }\n\n    return;\n  }\n\n  if (this.options.domainsEnabled && process.domain && typeof cb === 'function') {\n    // if we have a domain bind to it\n    var oldCb = cb;\n    cb = process.domain.bind(function() {\n      // v8 - argumentsToArray one-liner\n      var args = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      // bounce off event loop so domain switch takes place\n      process.nextTick(function() {\n        oldCb.apply(null, args);\n      });\n    });\n  }\n\n  // Do we have an operation\n  var operation = {\n    cb: cb,\n    raw: false,\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    fullResult: false\n  };\n\n  // Set the options for the parsing\n  operation.promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true;\n  operation.promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : true;\n  operation.promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false;\n  operation.raw = typeof options.raw === 'boolean' ? options.raw : false;\n  operation.immediateRelease =\n    typeof options.immediateRelease === 'boolean' ? options.immediateRelease : false;\n  operation.documentsReturnedIn = options.documentsReturnedIn;\n  operation.command = typeof options.command === 'boolean' ? options.command : false;\n  operation.fullResult = typeof options.fullResult === 'boolean' ? options.fullResult : false;\n  operation.noResponse = typeof options.noResponse === 'boolean' ? options.noResponse : false;\n  operation.session = options.session || null;\n\n  // Optional per operation socketTimeout\n  operation.socketTimeout = options.socketTimeout;\n  operation.monitoring = options.monitoring;\n  // Custom socket Timeout\n  if (options.socketTimeout) {\n    operation.socketTimeout = options.socketTimeout;\n  }\n\n  // Ensure commands is an array\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n\n  // Get the requestId\n  operation.requestId = commands[commands.length - 1].requestId;\n\n  if (hasSessionSupport(this.topology)) {\n    let sessionOptions = {};\n    if (this.topology.clusterTime) {\n      sessionOptions = { $clusterTime: this.topology.clusterTime };\n    }\n\n    if (operation.session) {\n      // TODO: reenable when sessions development is complete\n      // if (operation.session.topology !== this.topology) {\n      //   return cb(\n      //     new MongoError('Sessions may only be used with the client they were created from')\n      //   );\n      // }\n\n      if (operation.session.hasEnded) {\n        return cb(new MongoError('Use of expired sessions is not permitted'));\n      }\n\n      if (\n        operation.session.clusterTime &&\n        operation.session.clusterTime.clusterTime.greaterThan(\n          sessionOptions.$clusterTime.clusterTime\n        )\n      ) {\n        sessionOptions.$clusterTime = operation.session.clusterTime;\n      }\n\n      sessionOptions.lsid = operation.session.id;\n\n      // update the `lastUse` of the acquired ServerSession\n      operation.session.serverSession.lastUse = Date.now();\n    }\n\n    // decorate the commands with session-specific details\n    commands.forEach(command => {\n      if (command instanceof Query) {\n        if (command.query.$query) {\n          Object.assign(command.query.$query, sessionOptions);\n        } else {\n          Object.assign(command.query, sessionOptions);\n        }\n      } else {\n        Object.assign(command, sessionOptions);\n      }\n    });\n  }\n\n  // If command monitoring is enabled we need to modify the callback here\n  if (self.options.monitorCommands) {\n    // NOTE: there is only ever a single command, for some legacy reason I am unaware of we\n    //       treat this as a potential array of commands\n    const command = commands[0];\n    this.emit('commandStarted', new apm.CommandStartedEvent(this, command));\n\n    operation.started = process.hrtime();\n    operation.cb = (err, reply) => {\n      if (err) {\n        self.emit(\n          'commandFailed',\n          new apm.CommandFailedEvent(this, command, err, operation.started)\n        );\n      } else {\n        if (reply && reply.result && (reply.result.ok === 0 || reply.result.$err)) {\n          self.emit(\n            'commandFailed',\n            new apm.CommandFailedEvent(this, command, reply.result, operation.started)\n          );\n        } else {\n          self.emit(\n            'commandSucceeded',\n            new apm.CommandSucceededEvent(this, command, reply, operation.started)\n          );\n        }\n      }\n\n      if (typeof cb === 'function') cb(err, reply);\n    };\n  }\n\n  // Prepare the operation buffer\n  serializeCommands(self, commands, [], function(err, serializedCommands) {\n    if (err) throw err;\n\n    // Set the operation's buffer to the serialization of the commands\n    operation.buffer = serializedCommands;\n\n    // If we have a monitoring operation schedule as the very first operation\n    // Otherwise add to back of queue\n    if (options.monitoring) {\n      self.queue.unshift(operation);\n    } else {\n      self.queue.push(operation);\n    }\n\n    // Attempt to execute the operation\n    if (!self.executing) {\n      process.nextTick(function() {\n        _execute(self)();\n      });\n    }\n  });\n};\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nvar hasUncompressibleCommands = function(command) {\n  return uncompressibleCommands.some(function(cmd) {\n    return command.query.hasOwnProperty(cmd);\n  });\n};\n\n// Remove connection method\nfunction remove(connection, connections) {\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i] === connection) {\n      connections.splice(i, 1);\n      return true;\n    }\n  }\n}\n\nfunction removeConnection(self, connection) {\n  if (remove(connection, self.availableConnections)) return;\n  if (remove(connection, self.inUseConnections)) return;\n  if (remove(connection, self.connectingConnections)) return;\n  if (remove(connection, self.nonAuthenticatedConnections)) return;\n}\n\n// All event handlers\nvar handlers = ['close', 'message', 'error', 'timeout', 'parseError', 'connect'];\n\nfunction _createConnection(self) {\n  if (self.state === DESTROYED || self.state === DESTROYING) {\n    return;\n  }\n  var connection = new Connection(messageHandler(self), self.options);\n\n  // Push the connection\n  self.connectingConnections.push(connection);\n\n  // Handle any errors\n  var tempErrorHandler = function(_connection) {\n    return function() {\n      // Destroy the connection\n      _connection.destroy();\n      // Remove the connection from the connectingConnections list\n      removeConnection(self, _connection);\n      // Start reconnection attempts\n      if (!self.reconnectId && self.options.reconnect) {\n        self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n      }\n    };\n  };\n\n  // Handle successful connection\n  var tempConnectHandler = function(_connection) {\n    return function() {\n      // Destroyed state return\n      if (self.state === DESTROYED || self.state === DESTROYING) {\n        // Remove the connection from the list\n        removeConnection(self, _connection);\n        return _connection.destroy();\n      }\n\n      // Destroy all event emitters\n      handlers.forEach(function(e) {\n        _connection.removeAllListeners(e);\n      });\n\n      // Add the final handlers\n      _connection.once('close', connectionFailureHandler(self, 'close'));\n      _connection.once('error', connectionFailureHandler(self, 'error'));\n      _connection.once('timeout', connectionFailureHandler(self, 'timeout'));\n      _connection.once('parseError', connectionFailureHandler(self, 'parseError'));\n\n      // Signal\n      reauthenticate(self, _connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return _connection.destroy();\n        }\n        // Remove the connection from the connectingConnections list\n        removeConnection(self, _connection);\n\n        // Handle error\n        if (err) {\n          return _connection.destroy();\n        }\n\n        // If we are c at the moment\n        // Do not automatially put in available connections\n        // As we need to apply the credentials first\n        if (self.authenticating) {\n          self.nonAuthenticatedConnections.push(_connection);\n        } else {\n          // Push to available\n          self.availableConnections.push(_connection);\n          // Execute any work waiting\n          _execute(self)();\n        }\n      });\n    };\n  };\n\n  // Add all handlers\n  connection.once('close', tempErrorHandler(connection));\n  connection.once('error', tempErrorHandler(connection));\n  connection.once('timeout', tempErrorHandler(connection));\n  connection.once('parseError', tempErrorHandler(connection));\n  connection.once('connect', tempConnectHandler(connection));\n\n  // Start connection\n  connection.connect();\n}\n\nfunction flushMonitoringOperations(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    if (queue[i].monitoring) {\n      var workItem = queue[i];\n      queue.splice(i, 1);\n      workItem.cb(\n        new MongoError({ message: 'no connection available for monitoring', driver: true })\n      );\n    }\n  }\n}\n\nfunction _execute(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Already executing, skip\n    if (self.executing) return;\n    // Set pool as executing\n    self.executing = true;\n\n    // Wait for auth to clear before continuing\n    function waitForAuth(cb) {\n      if (!self.authenticating) return cb();\n      // Wait for a milisecond and try again\n      setTimeout(function() {\n        waitForAuth(cb);\n      }, 1);\n    }\n\n    // Block on any auth in process\n    waitForAuth(function() {\n      // New pool connections are in progress, wait them to finish\n      // before executing any more operation to ensure distribution of\n      // operations\n      if (self.connectingConnections.length > 0) {\n        return;\n      }\n\n      // As long as we have available connections\n      // eslint-disable-next-line\n      while (true) {\n        // Total availble connections\n        var totalConnections =\n          self.availableConnections.length +\n          self.connectingConnections.length +\n          self.inUseConnections.length;\n\n        // No available connections available, flush any monitoring ops\n        if (self.availableConnections.length === 0) {\n          // Flush any monitoring operations\n          flushMonitoringOperations(self.queue);\n          break;\n        }\n\n        // No queue break\n        if (self.queue.length === 0) {\n          break;\n        }\n\n        // Get a connection\n        var connection = null;\n\n        // Locate all connections that have no work\n        var connections = [];\n        // Get a list of all connections\n        for (var i = 0; i < self.availableConnections.length; i++) {\n          if (self.availableConnections[i].workItems.length === 0) {\n            connections.push(self.availableConnections[i]);\n          }\n        }\n\n        // No connection found that has no work on it, just pick one for pipelining\n        if (connections.length === 0) {\n          connection =\n            self.availableConnections[self.connectionIndex++ % self.availableConnections.length];\n        } else {\n          connection = connections[self.connectionIndex++ % connections.length];\n        }\n\n        // Is the connection connected\n        if (connection.isConnected()) {\n          // Get the next work item\n          var workItem = self.queue.shift();\n\n          // If we are monitoring we need to use a connection that is not\n          // running another operation to avoid socket timeout changes\n          // affecting an existing operation\n          if (workItem.monitoring) {\n            var foundValidConnection = false;\n\n            for (i = 0; i < self.availableConnections.length; i++) {\n              // If the connection is connected\n              // And there are no pending workItems on it\n              // Then we can safely use it for monitoring.\n              if (\n                self.availableConnections[i].isConnected() &&\n                self.availableConnections[i].workItems.length === 0\n              ) {\n                foundValidConnection = true;\n                connection = self.availableConnections[i];\n                break;\n              }\n            }\n\n            // No safe connection found, attempt to grow the connections\n            // if possible and break from the loop\n            if (!foundValidConnection) {\n              // Put workItem back on the queue\n              self.queue.unshift(workItem);\n\n              // Attempt to grow the pool if it's not yet maxsize\n              if (totalConnections < self.options.size && self.queue.length > 0) {\n                // Create a new connection\n                _createConnection(self);\n              }\n\n              // Re-execute the operation\n              setTimeout(function() {\n                _execute(self)();\n              }, 10);\n\n              break;\n            }\n          }\n\n          // Don't execute operation until we have a full pool\n          if (totalConnections < self.options.size) {\n            // Connection has work items, then put it back on the queue\n            // and create a new connection\n            if (connection.workItems.length > 0) {\n              // Lets put the workItem back on the list\n              self.queue.unshift(workItem);\n              // Create a new connection\n              _createConnection(self);\n              // Break from the loop\n              break;\n            }\n          }\n\n          // Get actual binary commands\n          var buffer = workItem.buffer;\n\n          // Set current status of authentication process\n          workItem.authenticating = self.authenticating;\n          workItem.authenticatingTimestamp = self.authenticatingTimestamp;\n\n          // If we are monitoring take the connection of the availableConnections\n          if (workItem.monitoring) {\n            moveConnectionBetween(connection, self.availableConnections, self.inUseConnections);\n          }\n\n          // Track the executing commands on the mongo server\n          // as long as there is an expected response\n          if (!workItem.noResponse) {\n            connection.workItems.push(workItem);\n          }\n\n          // We have a custom socketTimeout\n          if (!workItem.immediateRelease && typeof workItem.socketTimeout === 'number') {\n            connection.setSocketTimeout(workItem.socketTimeout);\n          }\n\n          // Capture if write was successful\n          var writeSuccessful = true;\n\n          // Put operation on the wire\n          if (Array.isArray(buffer)) {\n            for (i = 0; i < buffer.length; i++) {\n              writeSuccessful = connection.write(buffer[i]);\n            }\n          } else {\n            writeSuccessful = connection.write(buffer);\n          }\n\n          // if the command is designated noResponse, call the callback immeditely\n          if (workItem.noResponse && typeof workItem.cb === 'function') {\n            workItem.cb(null, null);\n          }\n\n          if (writeSuccessful && workItem.immediateRelease && self.authenticating) {\n            removeConnection(self, connection);\n            self.nonAuthenticatedConnections.push(connection);\n          } else if (writeSuccessful === false) {\n            // If write not successful put back on queue\n            self.queue.unshift(workItem);\n            // Remove the disconnected connection\n            removeConnection(self, connection);\n            // Flush any monitoring operations in the queue, failing fast\n            flushMonitoringOperations(self.queue);\n          }\n        } else {\n          // Remove the disconnected connection\n          removeConnection(self, connection);\n          // Flush any monitoring operations in the queue, failing fast\n          flushMonitoringOperations(self.queue);\n        }\n      }\n    });\n\n    self.executing = false;\n  };\n}\n\n// Make execution loop available for testing\nPool._execute = _execute;\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Pool#connect\n * @type {Pool}\n */\n\n/**\n * A server reconnect event, used to verify that pool reconnected.\n *\n * @event Pool#reconnect\n * @type {Pool}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Pool#close\n * @type {Pool}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Pool#error\n * @type {Pool}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Pool#timeout\n * @type {Pool}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Pool#parseError\n * @type {Pool}\n */\n\n/**\n * The driver attempted to reconnect\n *\n * @event Pool#attemptReconnect\n * @type {Pool}\n */\n\n/**\n * The driver exhausted all reconnect attempts\n *\n * @event Pool#reconnectFailed\n * @type {Pool}\n */\n\nmodule.exports = Pool;\n"},"lineCount":1660}},"hash":"ac173214b7f3cfad1c3cb9981aa0e30a","cacheData":{"env":{}}}