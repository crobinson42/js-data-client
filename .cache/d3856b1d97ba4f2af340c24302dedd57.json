{"id":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1538017614234},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538419449751},{"name":"../connection/commands","loc":{"line":3,"column":22},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/commands.js"},{"name":"../connection/utils","loc":{"line":4,"column":29},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"../error","loc":{"line":6,"column":34},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/error.js"},{"name":"./shared","loc":{"line":7,"column":34},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/shared.js"},{"name":"../topologies/read_preference","loc":{"line":10,"column":31},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"../transactions","loc":{"line":11,"column":25},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/transactions.js"}],"generated":{"js":"'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\nconst ReadPreference = require('../topologies/read_preference');\nconst TxnState = require('../transactions').TxnState;\n\nconst WireProtocol = function() {};\n\nfunction isTransactionCommand(command) {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param {Object} command the command to decorate\n * @param {ClientSession} session the session tracking transaction state\n * @param {Object} [options] Optional settings passed to calling operation\n * @param {Function} [callback] Optional callback passed from calling operation\n * @return {MongoError|null} An error, if some error condition was met\n */\nfunction decorateWithSessionsData(command, session, options) {\n  if (!session) {\n    return;\n  }\n\n  // first apply non-transaction-specific sessions data\n  const serverSession = session.serverSession;\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options.willRetryWrite;\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now attempt to apply transaction-specific sessions data\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    // for causal consistency\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n\n    return;\n  }\n\n  if (options.readPreference && !options.readPreference.equals(ReadPreference.primary)) {\n    return new MongoError(\n      `Read preference in a transaction must be primary, not: ${options.readPreference.mode}`\n    );\n  }\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\n//\n// Execute a write operation\nfunction executeWrite(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  const p = ns.split('.');\n  const d = p.shift();\n  // Options\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  // return skeleton\n  const writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // If we have collation passed in\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // optionally decorate command with transactions data\n  const err = decorateWithSessionsData(writeCommand, options.session, options, callback);\n  if (err) {\n    return callback(err, null);\n  }\n\n  // Options object\n  const opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  const queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = true;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    const cmd = new Query(bson, `${d}.$cmd`, writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n  const cursorId = cursorState.cursorId;\n  // Create killCursor command\n  const killcursorCmd = {\n    killCursors: parts.join('.'),\n    cursors: [cursorId]\n  };\n\n  // Build Query object\n  const query = new Query(bson, commandns, killcursorCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Kill cursor callback\n  function killCursorCallback(err, result) {\n    if (err) {\n      if (typeof callback !== 'function') return;\n      return callback(err);\n    }\n\n    // Result\n    const r = result.message;\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      if (typeof callback !== 'function') return;\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (!Array.isArray(r.documents) || r.documents.length === 0) {\n      if (typeof callback !== 'function') return;\n      return callback(\n        new MongoError(`invalid killCursors result returned for cursor id ${cursorId}`)\n      );\n    }\n\n    // Return the result\n    if (typeof callback === 'function') {\n      callback(null, r.documents[0]);\n    }\n  }\n\n  const options = { command: true };\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(query, options, killCursorCallback);\n    } catch (err) {\n      killCursorCallback(err, null);\n    }\n\n    return;\n  }\n\n  // Callback\n  if (typeof callback === 'function') callback(null, null);\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  options = options || {};\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n\n  // Create getMore command\n  const getMoreCmd = {\n    getMore: cursorState.cursorId,\n    collection: parts.join('.'),\n    batchSize: Math.abs(batchSize)\n  };\n\n  // optionally decorate command with transactions data\n  const err = decorateWithSessionsData(getMoreCmd, options.session, options, callback);\n  if (err) {\n    return callback(err, null);\n  }\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  // Build Query object\n  const query = new Query(bson, commandns, getMoreCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Query callback\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    const r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    // Raw, return all the extracted documents\n    if (raw) {\n      cursorState.documents = r.documents;\n      cursorState.cursorId = r.cursorId;\n      return callback(null, r.documents);\n    }\n\n    // We have an error detected\n    if (r.documents[0].ok === 0) {\n      return callback(new MongoError(r.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    const cursorId =\n      typeof r.documents[0].cursor.id === 'number'\n        ? Long.fromNumber(r.documents[0].cursor.id)\n        : r.documents[0].cursor.id;\n\n    // Set all the values\n    cursorState.documents = r.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    // Return the result\n    callback(null, r.documents[0], r.connection);\n  }\n\n  // Query options\n  const queryOptions = { command: true };\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Add the result field needed\n  queryOptions.documentsReturnedIn = 'nextBatch';\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(query, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  options = options || {};\n  // Check if this is a wire protocol command or not\n  const wireProtocolCommand =\n    typeof options.wireProtocolCommand === 'boolean' ? options.wireProtocolCommand : true;\n\n  // Establish type of command\n  let query;\n  if (cmd.find && wireProtocolCommand) {\n    // Create the find command\n    query = executeFindCommand(bson, ns, cmd, cursorState, topology, options);\n\n    // Mark the cmd as virtual\n    cmd.virtual = false;\n    // Signal the documents are in the firstBatch value\n    query.documentsReturnedIn = 'firstBatch';\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    query = setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    return new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`);\n  }\n\n  if (query instanceof MongoError) {\n    return query;\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(query.query, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  return query;\n};\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n// FIND/GETMORE SPEC\n// {\n//     “find”: <string>,\n//     “filter”: { ... },\n//     “sort”: { ... },\n//     “projection”: { ... },\n//     “hint”: { ... },\n//     “skip”: <int>,\n//     “limit”: <int>,\n//     “batchSize”: <int>,\n//     “singleBatch”: <bool>,\n//     “comment”: <string>,\n//     “maxScan”: <int>,\n//     “maxTimeMS”: <int>,\n//     “max”: { ... },\n//     “min”: { ... },\n//     “returnKey”: <bool>,\n//     “showRecordId”: <bool>,\n//     “snapshot”: <bool>,\n//     “tailable”: <bool>,\n//     “oplogReplay”: <bool>,\n//     “noCursorTimeout”: <bool>,\n//     “awaitData”: <bool>,\n//     “partial”: <bool>,\n//     “$readPreference”: { ... }\n// }\n\n//\n// Execute a find command\nfunction executeFindCommand(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  const readPreference = getReadPreference(cmd, options);\n\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n\n  // Build actual find command\n  let findCmd = {\n    find: parts.join('.')\n  };\n\n  // I we provided a filter\n  if (cmd.query) {\n    // Check if the user is passing in the $query parameter\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  // Sort value\n  let sortValue = cmd.sort;\n\n  // Handle issue of sort being an Array\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      // Translate the sort order text\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      // Set the sort order\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (var i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        // Translate the sort order text\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        // Set the sort order\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  // Add sort to command\n  if (cmd.sort) findCmd.sort = sortValue;\n  // Add a projection to the command\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  // Add a hint to the command\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  // Add a skip\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  // Add a limit\n  if (cmd.limit) findCmd.limit = cmd.limit;\n\n  // Check if we wish to have a singleBatch\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  // Add a batchSize\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  // If we have comment set\n  if (cmd.comment) findCmd.comment = cmd.comment;\n\n  // If we have maxScan\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n\n  // If we have maxTimeMS set\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n\n  // If we have min\n  if (cmd.min) findCmd.min = cmd.min;\n\n  // If we have max\n  if (cmd.max) findCmd.max = cmd.max;\n\n  // If we have returnKey set\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n\n  // If we have showDiskLoc set\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n\n  // If we have snapshot set\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n\n  // If we have tailable set\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n\n  // If we have oplogReplay set\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n\n  // If we have noCursorTimeout set\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n\n  // If we have awaitData set\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n\n  // If we have partial set\n  if (cmd.partial) findCmd.partial = cmd.partial;\n\n  // If we have collation passed in\n  if (cmd.collation) findCmd.collation = cmd.collation;\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  if (cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    };\n  }\n\n  // Did we provide a readConcern\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  // Set up the serialize and ignoreUndefined fields\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    findCmd = {\n      $query: findCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(findCmd, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  // Build Query object\n  const query = new Query(bson, commandns, findCmd, {\n    numberToSkip: 0,\n    numberToReturn: 1,\n    checkKeys: false,\n    returnFieldSelector: null,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nfunction setupCommand(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  const readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  let finalCmd = {};\n  for (let name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  const parts = ns.split(/\\./);\n\n  // Serialize functions\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  // Set up the serialize and ignoreUndefined fields\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(finalCmd, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  // Build Query object\n  const query = new Query(bson, `${parts.shift()}.$cmd`, finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\nmodule.exports = WireProtocol;\n","map":{"mappings":[{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}}],"sources":{"node_modules/mongodb-core/lib/wireprotocol/3_2_support.js":"'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\nconst ReadPreference = require('../topologies/read_preference');\nconst TxnState = require('../transactions').TxnState;\n\nconst WireProtocol = function() {};\n\nfunction isTransactionCommand(command) {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param {Object} command the command to decorate\n * @param {ClientSession} session the session tracking transaction state\n * @param {Object} [options] Optional settings passed to calling operation\n * @param {Function} [callback] Optional callback passed from calling operation\n * @return {MongoError|null} An error, if some error condition was met\n */\nfunction decorateWithSessionsData(command, session, options) {\n  if (!session) {\n    return;\n  }\n\n  // first apply non-transaction-specific sessions data\n  const serverSession = session.serverSession;\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options.willRetryWrite;\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now attempt to apply transaction-specific sessions data\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    // for causal consistency\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n\n    return;\n  }\n\n  if (options.readPreference && !options.readPreference.equals(ReadPreference.primary)) {\n    return new MongoError(\n      `Read preference in a transaction must be primary, not: ${options.readPreference.mode}`\n    );\n  }\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\n//\n// Execute a write operation\nfunction executeWrite(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  const p = ns.split('.');\n  const d = p.shift();\n  // Options\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  // return skeleton\n  const writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // If we have collation passed in\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // optionally decorate command with transactions data\n  const err = decorateWithSessionsData(writeCommand, options.session, options, callback);\n  if (err) {\n    return callback(err, null);\n  }\n\n  // Options object\n  const opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  const queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = true;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    const cmd = new Query(bson, `${d}.$cmd`, writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n  const cursorId = cursorState.cursorId;\n  // Create killCursor command\n  const killcursorCmd = {\n    killCursors: parts.join('.'),\n    cursors: [cursorId]\n  };\n\n  // Build Query object\n  const query = new Query(bson, commandns, killcursorCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Kill cursor callback\n  function killCursorCallback(err, result) {\n    if (err) {\n      if (typeof callback !== 'function') return;\n      return callback(err);\n    }\n\n    // Result\n    const r = result.message;\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      if (typeof callback !== 'function') return;\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (!Array.isArray(r.documents) || r.documents.length === 0) {\n      if (typeof callback !== 'function') return;\n      return callback(\n        new MongoError(`invalid killCursors result returned for cursor id ${cursorId}`)\n      );\n    }\n\n    // Return the result\n    if (typeof callback === 'function') {\n      callback(null, r.documents[0]);\n    }\n  }\n\n  const options = { command: true };\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(query, options, killCursorCallback);\n    } catch (err) {\n      killCursorCallback(err, null);\n    }\n\n    return;\n  }\n\n  // Callback\n  if (typeof callback === 'function') callback(null, null);\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  options = options || {};\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n\n  // Create getMore command\n  const getMoreCmd = {\n    getMore: cursorState.cursorId,\n    collection: parts.join('.'),\n    batchSize: Math.abs(batchSize)\n  };\n\n  // optionally decorate command with transactions data\n  const err = decorateWithSessionsData(getMoreCmd, options.session, options, callback);\n  if (err) {\n    return callback(err, null);\n  }\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  // Build Query object\n  const query = new Query(bson, commandns, getMoreCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Query callback\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    const r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    // Raw, return all the extracted documents\n    if (raw) {\n      cursorState.documents = r.documents;\n      cursorState.cursorId = r.cursorId;\n      return callback(null, r.documents);\n    }\n\n    // We have an error detected\n    if (r.documents[0].ok === 0) {\n      return callback(new MongoError(r.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    const cursorId =\n      typeof r.documents[0].cursor.id === 'number'\n        ? Long.fromNumber(r.documents[0].cursor.id)\n        : r.documents[0].cursor.id;\n\n    // Set all the values\n    cursorState.documents = r.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    // Return the result\n    callback(null, r.documents[0], r.connection);\n  }\n\n  // Query options\n  const queryOptions = { command: true };\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Add the result field needed\n  queryOptions.documentsReturnedIn = 'nextBatch';\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(query, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  options = options || {};\n  // Check if this is a wire protocol command or not\n  const wireProtocolCommand =\n    typeof options.wireProtocolCommand === 'boolean' ? options.wireProtocolCommand : true;\n\n  // Establish type of command\n  let query;\n  if (cmd.find && wireProtocolCommand) {\n    // Create the find command\n    query = executeFindCommand(bson, ns, cmd, cursorState, topology, options);\n\n    // Mark the cmd as virtual\n    cmd.virtual = false;\n    // Signal the documents are in the firstBatch value\n    query.documentsReturnedIn = 'firstBatch';\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    query = setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    return new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`);\n  }\n\n  if (query instanceof MongoError) {\n    return query;\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(query.query, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  return query;\n};\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n// FIND/GETMORE SPEC\n// {\n//     “find”: <string>,\n//     “filter”: { ... },\n//     “sort”: { ... },\n//     “projection”: { ... },\n//     “hint”: { ... },\n//     “skip”: <int>,\n//     “limit”: <int>,\n//     “batchSize”: <int>,\n//     “singleBatch”: <bool>,\n//     “comment”: <string>,\n//     “maxScan”: <int>,\n//     “maxTimeMS”: <int>,\n//     “max”: { ... },\n//     “min”: { ... },\n//     “returnKey”: <bool>,\n//     “showRecordId”: <bool>,\n//     “snapshot”: <bool>,\n//     “tailable”: <bool>,\n//     “oplogReplay”: <bool>,\n//     “noCursorTimeout”: <bool>,\n//     “awaitData”: <bool>,\n//     “partial”: <bool>,\n//     “$readPreference”: { ... }\n// }\n\n//\n// Execute a find command\nfunction executeFindCommand(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  const readPreference = getReadPreference(cmd, options);\n\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n\n  // Build actual find command\n  let findCmd = {\n    find: parts.join('.')\n  };\n\n  // I we provided a filter\n  if (cmd.query) {\n    // Check if the user is passing in the $query parameter\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  // Sort value\n  let sortValue = cmd.sort;\n\n  // Handle issue of sort being an Array\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      // Translate the sort order text\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      // Set the sort order\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (var i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        // Translate the sort order text\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        // Set the sort order\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  // Add sort to command\n  if (cmd.sort) findCmd.sort = sortValue;\n  // Add a projection to the command\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  // Add a hint to the command\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  // Add a skip\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  // Add a limit\n  if (cmd.limit) findCmd.limit = cmd.limit;\n\n  // Check if we wish to have a singleBatch\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  // Add a batchSize\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  // If we have comment set\n  if (cmd.comment) findCmd.comment = cmd.comment;\n\n  // If we have maxScan\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n\n  // If we have maxTimeMS set\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n\n  // If we have min\n  if (cmd.min) findCmd.min = cmd.min;\n\n  // If we have max\n  if (cmd.max) findCmd.max = cmd.max;\n\n  // If we have returnKey set\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n\n  // If we have showDiskLoc set\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n\n  // If we have snapshot set\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n\n  // If we have tailable set\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n\n  // If we have oplogReplay set\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n\n  // If we have noCursorTimeout set\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n\n  // If we have awaitData set\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n\n  // If we have partial set\n  if (cmd.partial) findCmd.partial = cmd.partial;\n\n  // If we have collation passed in\n  if (cmd.collation) findCmd.collation = cmd.collation;\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  if (cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    };\n  }\n\n  // Did we provide a readConcern\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  // Set up the serialize and ignoreUndefined fields\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    findCmd = {\n      $query: findCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(findCmd, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  // Build Query object\n  const query = new Query(bson, commandns, findCmd, {\n    numberToSkip: 0,\n    numberToReturn: 1,\n    checkKeys: false,\n    returnFieldSelector: null,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nfunction setupCommand(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  const readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  let finalCmd = {};\n  for (let name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  const parts = ns.split(/\\./);\n\n  // Serialize functions\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  // Set up the serialize and ignoreUndefined fields\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(finalCmd, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  // Build Query object\n  const query = new Query(bson, `${parts.shift()}.$cmd`, finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\nmodule.exports = WireProtocol;\n"},"lineCount":683}},"hash":"fe657913363c77335424fb89079e344b","cacheData":{"env":{}}}