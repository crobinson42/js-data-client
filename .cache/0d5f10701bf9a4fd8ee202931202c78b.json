{"id":"node_modules/mongodb-core/lib/sessions.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1538017614234},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538419449751},{"name":"./connection/utils","loc":{"line":3,"column":29},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"events","loc":{"line":4,"column":29},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/events/events.js"},{"name":"./utils","loc":{"line":7,"column":23},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/utils.js"},{"name":"./error","loc":{"line":11,"column":39},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/error.js"},{"name":"././error","loc":{"line":9,"column":33},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/error.js"},{"name":"./transactions","loc":{"line":13,"column":25},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/transactions.js"}],"generated":{"js":"'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst isRetryableError = require('././error').isRetryableError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst MongoWriteConcernError = require('./error').MongoWriteConcernError;\nconst Transaction = require('./transactions').Transaction;\nconst TxnState = require('./transactions').TxnState;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/**\n * Options to pass when creating a Client Session\n * @typedef {Object} SessionOptions\n * @property {boolean} [causalConsistency=true] Whether causal consistency should be enabled on this session\n * @property {TransactionOptions} [defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n */\n\n/**\n * A BSON document reflecting the lsid of a {@link ClientSession}\n * @typedef {Object} SessionId\n */\n\n/**\n * A class representing a client session on the server\n * WARNING: not meant to be instantiated directly.\n * @class\n * @hideconstructor\n */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology (Internal Class)\n   * @param {ServerSessionPool} sessionPool The server session pool (Internal Class)\n   * @param {SessionOptions} [options] Optional settings\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.serverSession = sessionPool.acquire();\n    this.clientOptions = clientOptions;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    options = options || {};\n    if (typeof options.initialClusterTime !== 'undefined') {\n      this.clusterTime = options.initialClusterTime;\n    } else {\n      this.clusterTime = null;\n    }\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /**\n   * The server id associated with this session\n   * @type {SessionId}\n   */\n  get id() {\n    return this.serverSession.id;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings. Currently reserved for future use\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.hasEnded) {\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    if (this.serverSession && this.inTransaction()) {\n      this.abortTransaction(); // pass in callback?\n    }\n\n    // mark the session as ended, and emit a signal\n    this.hasEnded = true;\n    this.emit('ended', this);\n\n    // release the server session back to the pool\n    this.sessionPool.release(this.serverSession);\n\n    // spec indicates that we should ignore all errors for `endSessions`\n    if (typeof callback === 'function') callback(null, null);\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {Timestamp} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   * @param {ClientSession} session\n   * @return {boolean} true if the sessions are equal\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * @returns {boolean} whether this session is currently in a transaction or not\n   */\n  inTransaction() {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {TransactionOptions} options Options for the transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n\n    // create transaction state\n    this.transaction = new Transaction(\n      Object.assign({}, this.clientOptions, options || this.defaultTransactionOptions)\n    );\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'commitTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'commitTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'abortTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'abortTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   * @ignore\n   */\n  toBSON() {\n    throw new Error('ClientSession cannot be serialized to BSON.');\n  }\n}\n\nfunction endTransaction(session, commandName, callback) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  let txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call commitTransaction after calling abortTransaction'));\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(new MongoError('Cannot call abortTransaction after calling commitTransaction'));\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  if (session.transaction.options.writeConcern) {\n    Object.assign(command, { writeConcern: session.transaction.options.writeConcern });\n  } else if (session.clientOptions && session.clientOptions.w) {\n    Object.assign(command, { writeConcern: { w: session.clientOptions.w } });\n  }\n\n  function commandHandler(e, r) {\n    if (commandName === 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n\n      if (\n        e &&\n        (e instanceof MongoNetworkError ||\n          e instanceof MongoWriteConcernError ||\n          isRetryableError(e))\n      ) {\n        if (e.errorLabels) {\n          const idx = e.errorLabels.indexOf('TransientTransactionError');\n          if (idx !== -1) {\n            e.errorLabels.splice(idx, 1);\n          }\n        } else {\n          e.errorLabels = [];\n        }\n\n        e.errorLabels.push('UnknownTransactionCommitResult');\n      }\n    } else {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n    }\n\n    callback(e, r);\n  }\n\n  // The spec indicates that we should ignore all errors on `abortTransaction`\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  // send the command\n  session.topology.command('admin.$cmd', command, { session }, (err, reply) => {\n    if (err && isRetryableError(err)) {\n      return session.topology.command('admin.$cmd', command, { session }, (_err, _reply) =>\n        commandHandler(transactionError(_err), _reply)\n      );\n    }\n\n    commandHandler(transactionError(err), reply);\n  });\n}\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @ignore\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = Date.now();\n    this.txnNumber = 0;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   * @ignore\n   * @param {Date} sessionTimeoutMinutes The server's \"logicalSessionTimeoutMinutes\"\n   * @return {boolean} true if the session has timed out.\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      (((Date.now() - this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @ignore\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /**\n   * Ends all sessions in the session pool.\n   * @ignore\n   */\n  endAllPooledSessions() {\n    if (this.sessions.length) {\n      this.topology.endSessions(this.sessions.map(session => session.id));\n      this.sessions = [];\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession\n   * is created.\n   * @ignore\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   * @ignore\n   * @param {ServerSession} session The session to release to the pool\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions[this.sessions.length - 1];\n      if (session.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      this.sessions.unshift(session);\n    }\n  }\n}\n\nmodule.exports = {\n  ClientSession,\n  ServerSession,\n  ServerSessionPool,\n  TxnState\n};\n","map":{"mappings":[{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/mongodb-core/lib/sessions.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}}],"sources":{"node_modules/mongodb-core/lib/sessions.js":"'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst isRetryableError = require('././error').isRetryableError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst MongoWriteConcernError = require('./error').MongoWriteConcernError;\nconst Transaction = require('./transactions').Transaction;\nconst TxnState = require('./transactions').TxnState;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/**\n * Options to pass when creating a Client Session\n * @typedef {Object} SessionOptions\n * @property {boolean} [causalConsistency=true] Whether causal consistency should be enabled on this session\n * @property {TransactionOptions} [defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n */\n\n/**\n * A BSON document reflecting the lsid of a {@link ClientSession}\n * @typedef {Object} SessionId\n */\n\n/**\n * A class representing a client session on the server\n * WARNING: not meant to be instantiated directly.\n * @class\n * @hideconstructor\n */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology (Internal Class)\n   * @param {ServerSessionPool} sessionPool The server session pool (Internal Class)\n   * @param {SessionOptions} [options] Optional settings\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.serverSession = sessionPool.acquire();\n    this.clientOptions = clientOptions;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    options = options || {};\n    if (typeof options.initialClusterTime !== 'undefined') {\n      this.clusterTime = options.initialClusterTime;\n    } else {\n      this.clusterTime = null;\n    }\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /**\n   * The server id associated with this session\n   * @type {SessionId}\n   */\n  get id() {\n    return this.serverSession.id;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings. Currently reserved for future use\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.hasEnded) {\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    if (this.serverSession && this.inTransaction()) {\n      this.abortTransaction(); // pass in callback?\n    }\n\n    // mark the session as ended, and emit a signal\n    this.hasEnded = true;\n    this.emit('ended', this);\n\n    // release the server session back to the pool\n    this.sessionPool.release(this.serverSession);\n\n    // spec indicates that we should ignore all errors for `endSessions`\n    if (typeof callback === 'function') callback(null, null);\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {Timestamp} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   * @param {ClientSession} session\n   * @return {boolean} true if the sessions are equal\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * @returns {boolean} whether this session is currently in a transaction or not\n   */\n  inTransaction() {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {TransactionOptions} options Options for the transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n\n    // create transaction state\n    this.transaction = new Transaction(\n      Object.assign({}, this.clientOptions, options || this.defaultTransactionOptions)\n    );\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'commitTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'commitTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'abortTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'abortTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   * @ignore\n   */\n  toBSON() {\n    throw new Error('ClientSession cannot be serialized to BSON.');\n  }\n}\n\nfunction endTransaction(session, commandName, callback) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  let txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call commitTransaction after calling abortTransaction'));\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(new MongoError('Cannot call abortTransaction after calling commitTransaction'));\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  if (session.transaction.options.writeConcern) {\n    Object.assign(command, { writeConcern: session.transaction.options.writeConcern });\n  } else if (session.clientOptions && session.clientOptions.w) {\n    Object.assign(command, { writeConcern: { w: session.clientOptions.w } });\n  }\n\n  function commandHandler(e, r) {\n    if (commandName === 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n\n      if (\n        e &&\n        (e instanceof MongoNetworkError ||\n          e instanceof MongoWriteConcernError ||\n          isRetryableError(e))\n      ) {\n        if (e.errorLabels) {\n          const idx = e.errorLabels.indexOf('TransientTransactionError');\n          if (idx !== -1) {\n            e.errorLabels.splice(idx, 1);\n          }\n        } else {\n          e.errorLabels = [];\n        }\n\n        e.errorLabels.push('UnknownTransactionCommitResult');\n      }\n    } else {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n    }\n\n    callback(e, r);\n  }\n\n  // The spec indicates that we should ignore all errors on `abortTransaction`\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  // send the command\n  session.topology.command('admin.$cmd', command, { session }, (err, reply) => {\n    if (err && isRetryableError(err)) {\n      return session.topology.command('admin.$cmd', command, { session }, (_err, _reply) =>\n        commandHandler(transactionError(_err), _reply)\n      );\n    }\n\n    commandHandler(transactionError(err), reply);\n  });\n}\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @ignore\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = Date.now();\n    this.txnNumber = 0;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   * @ignore\n   * @param {Date} sessionTimeoutMinutes The server's \"logicalSessionTimeoutMinutes\"\n   * @return {boolean} true if the session has timed out.\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      (((Date.now() - this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @ignore\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /**\n   * Ends all sessions in the session pool.\n   * @ignore\n   */\n  endAllPooledSessions() {\n    if (this.sessions.length) {\n      this.topology.endSessions(this.sessions.map(session => session.id));\n      this.sessions = [];\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession\n   * is created.\n   * @ignore\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   * @ignore\n   * @param {ServerSession} session The session to release to the pool\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions[this.sessions.length - 1];\n      if (session.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      this.sessions.unshift(session);\n    }\n  }\n}\n\nmodule.exports = {\n  ClientSession,\n  ServerSession,\n  ServerSessionPool,\n  TxnState\n};\n"},"lineCount":460}},"hash":"5abd0cc1bfffc4ba4b0336811a94cd50","cacheData":{"env":{}}}