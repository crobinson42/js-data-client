{"id":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1538017614234},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538419449751},{"name":"../connection/utils","loc":{"line":4,"column":25},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"../connection/commands","loc":{"line":7,"column":18},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/connection/commands.js"},{"name":"util","loc":{"line":8,"column":14},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/util/util.js"},{"name":"../error","loc":{"line":9,"column":23},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/error.js"},{"name":"./shared","loc":{"line":10,"column":30},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/mongodb-core/lib/wireprotocol/shared.js"}],"generated":{"js":"'use strict';\n\nvar copy = require('../connection/utils').copy,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  KillCursor = require('../connection/commands').KillCursor,\n  GetMore = require('../connection/commands').GetMore,\n  Query = require('../connection/commands').Query,\n  f = require('util').format,\n  MongoError = require('../error').MongoError,\n  getReadPreference = require('./shared').getReadPreference;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\nvar WireProtocol = function() {};\n\n//\n// Execute a write operation\nvar executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split('.');\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Options object\n  var opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  var queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = true;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    var cmd = new Query(bson, f('%s.$cmd', d), writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n};\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  var cursorId = cursorState.cursorId;\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, ns, [cursorId]);\n\n  // Build killCursor options\n  const options = {\n    immediateRelease: true,\n    noResponse: true\n  };\n\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(killCursor, options, callback);\n    } catch (err) {\n      if (typeof callback === 'function') {\n        callback(err, null);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, { numberToReturn: batchSize });\n\n  // Query callback\n  var queryCallback = function(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    var r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoError('cursor does not exist, was killed or timed out'), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId === 'number' ? Long.fromNumber(r.cursorId) : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  };\n\n  // Contains any query options\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(getMore, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if (cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options);\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f('command %s does not return a cursor', JSON.stringify(cmd)));\n  }\n};\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if (cursorState.limit === 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if (\n    cursorState.limit < 0 ||\n    cursorState.limit < cursorState.batchSize ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  // Add special modifiers to the query\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n\n  if (cmd.explain) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  // Add the query\n  findCmd['$query'] = cmd.query;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f('server find command does not support a readConcern level of %s', cmd.readConcern.level)\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if (typeof cmd.tailable === 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if (typeof cmd.oplogReplay === 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if (typeof cmd.noCursorTimeout === 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if (typeof cmd.awaitData === 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if (typeof cmd.partial === 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n};\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for (var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f(\n        'server %s command does not support a readConcern level of %s',\n        JSON.stringify(cmd),\n        cmd.readConcern.level\n      )\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n};\n\nmodule.exports = WireProtocol;\n","map":{"mappings":[{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}}],"sources":{"node_modules/mongodb-core/lib/wireprotocol/2_6_support.js":"'use strict';\n\nvar copy = require('../connection/utils').copy,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  KillCursor = require('../connection/commands').KillCursor,\n  GetMore = require('../connection/commands').GetMore,\n  Query = require('../connection/commands').Query,\n  f = require('util').format,\n  MongoError = require('../error').MongoError,\n  getReadPreference = require('./shared').getReadPreference;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\nvar WireProtocol = function() {};\n\n//\n// Execute a write operation\nvar executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split('.');\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Options object\n  var opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  var queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = true;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    var cmd = new Query(bson, f('%s.$cmd', d), writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n};\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  var cursorId = cursorState.cursorId;\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, ns, [cursorId]);\n\n  // Build killCursor options\n  const options = {\n    immediateRelease: true,\n    noResponse: true\n  };\n\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(killCursor, options, callback);\n    } catch (err) {\n      if (typeof callback === 'function') {\n        callback(err, null);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, { numberToReturn: batchSize });\n\n  // Query callback\n  var queryCallback = function(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    var r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoError('cursor does not exist, was killed or timed out'), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId === 'number' ? Long.fromNumber(r.cursorId) : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  };\n\n  // Contains any query options\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(getMore, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if (cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options);\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f('command %s does not return a cursor', JSON.stringify(cmd)));\n  }\n};\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if (cursorState.limit === 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if (\n    cursorState.limit < 0 ||\n    cursorState.limit < cursorState.batchSize ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  // Add special modifiers to the query\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n\n  if (cmd.explain) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  // Add the query\n  findCmd['$query'] = cmd.query;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f('server find command does not support a readConcern level of %s', cmd.readConcern.level)\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if (typeof cmd.tailable === 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if (typeof cmd.oplogReplay === 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if (typeof cmd.noCursorTimeout === 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if (typeof cmd.awaitData === 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if (typeof cmd.partial === 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n};\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for (var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f(\n        'server %s command does not support a readConcern level of %s',\n        JSON.stringify(cmd),\n        cmd.readConcern.level\n      )\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n};\n\nmodule.exports = WireProtocol;\n"},"lineCount":369}},"hash":"d7f022217dcb55f7f649e0233d8ea69c","cacheData":{"env":{}}}