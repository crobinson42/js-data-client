{"id":"node_modules/@therms/models/store.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/package.json","includedInParent":true,"mtime":1538436560910},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538419449751},{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/.babelrc","includedInParent":true,"mtime":1538423057578},{"name":"./definitions","loc":{"line":2,"column":28},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/store.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/definitions/index.js"},{"name":"debug","loc":{"line":3,"column":22},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/store.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/node_modules/debug/src/browser.js"},{"name":"./stores/client","loc":{"line":23,"column":18},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/store.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/stores/client.js"},{"name":"./stores/server","loc":{"line":25,"column":18},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/store.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/stores/server.js"},{"name":"process","parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/store.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n/* global process window */\nconst definitions = require('./definitions')\nconst debug = require('debug')('models:store')\n// Debug in browser: localStorage.setItem('debug', 'models');\n\nlet store\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof window.document !== 'undefined'\n\nconst isNode =\n  typeof process !== 'undefined' &&\n  process.versions != null &&\n  process.versions.node != null\n\ndebug(`isBrowser: ${isBrowser}`)\ndebug(`isNode: ${isNode}`)\n\nif (isBrowser && isNode) {\n  // must be js-dom testing, webpack bundling, or server-side rendering?\n  store = require('./stores/client')\n} else if (isBrowser) {\n  store = require('./stores/client')\n} else if (isNode) {\n  store = require('./stores/server')\n} else {\n  throw new Error('No Environment Detected')\n}\n\n// Load all mappers in store\nif (definitions && store && store.defineMapper) {\n  Object.keys(definitions).forEach(model => {\n    debug(`store.defineMapper for ${model}`)\n    try {\n      store.defineMapper(model, Object.assign({}, definitions[model]))\n    } catch (e) {\n      console.log(`   Failed to define mapper \"${model}\"`)\n      throw e\n    }\n  })\n}\n\nmodule.exports = store\n","map":{"mappings":[{"source":"node_modules/@therms/models/store.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@therms/models/store.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}}],"sources":{"node_modules/@therms/models/store.js":"/* global process window */\nconst definitions = require('./definitions')\nconst debug = require('debug')('models:store')\n// Debug in browser: localStorage.setItem('debug', 'models');\n\nlet store\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof window.document !== 'undefined'\n\nconst isNode =\n  typeof process !== 'undefined' &&\n  process.versions != null &&\n  process.versions.node != null\n\ndebug(`isBrowser: ${isBrowser}`)\ndebug(`isNode: ${isNode}`)\n\nif (isBrowser && isNode) {\n  // must be js-dom testing, webpack bundling, or server-side rendering?\n  store = require('./stores/client')\n} else if (isBrowser) {\n  store = require('./stores/client')\n} else if (isNode) {\n  store = require('./stores/server')\n} else {\n  throw new Error('No Environment Detected')\n}\n\n// Load all mappers in store\nif (definitions && store && store.defineMapper) {\n  Object.keys(definitions).forEach(model => {\n    debug(`store.defineMapper for ${model}`)\n    try {\n      store.defineMapper(model, Object.assign({}, definitions[model]))\n    } catch (e) {\n      console.log(`   Failed to define mapper \"${model}\"`)\n      throw e\n    }\n  })\n}\n\nmodule.exports = store\n"},"lineCount":45}},"hash":"1e9deaaf5b5ed7a53752afc2a91164b1","cacheData":{"env":{}}}