{"id":"node_modules/@therms/models/js-data/SimpleStore.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/package.json","includedInParent":true,"mtime":1538067174380},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538017596842},{"name":"./utils","loc":{"line":1,"column":18},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/SimpleStore.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/utils.js"},{"name":"./decorators","loc":{"line":7,"column":7},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/SimpleStore.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/decorators.js"},{"name":"./Container","loc":{"line":8,"column":46},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/SimpleStore.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/Container.js"},{"name":"./Collection","loc":{"line":9,"column":23},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/SimpleStore.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/js-data/Collection.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _decorators = require('./decorators');\n\nvar _Container = require('./Container');\n\nvar _Collection = require('./Collection');\n\nvar _Collection2 = _interopRequireDefault(_Collection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst DOMAIN = 'SimpleStore';\nconst proxiedCollectionMethods = [\n/**\n * Wrapper for {@link Collection#add}.\n *\n * @example <caption>SimpleStore#add</caption>\n * const JSData = require('js-data');\n * const { SimpleStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new SimpleStore();\n * store.defineMapper('book');\n *\n * // Add one book to the in-memory store:\n * store.add('book', { id: 1, title: 'Respect your Data' });\n * // Add multiple books to the in-memory store:\n * store.add('book', [\n *   { id: 2, title: 'Easy data recipes' },\n *   { id: 3, title: 'Active Record 101' }\n * ]);\n *\n * @fires SimpleStore#add\n * @method SimpleStore#add\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {(Object|Object[]|Record|Record[])} data See {@link Collection#add}.\n * @param {object} [opts] Configuration options. See {@link Collection#add}.\n * @returns {(Object|Object[]|Record|Record[])} See {@link Collection#add}.\n * @see Collection#add\n * @see Collection#add\n * @since 3.0.0\n */\n'add',\n\n/**\n * Wrapper for {@link Collection#between}.\n *\n * @example\n * // Get all users ages 18 to 30\n * const users = store.between('user', 18, 30, { index: 'age' });\n *\n * @example\n * // Same as above\n * const users = store.between('user', [18], [30], { index: 'age' });\n *\n * @method SimpleStore#between\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {array} leftKeys See {@link Collection#between}.\n * @param {array} rightKeys See {@link Collection#between}.\n * @param {object} [opts] Configuration options. See {@link Collection#between}.\n * @returns {Object[]|Record[]} See {@link Collection#between}.\n * @see Collection#between\n * @see Collection#between\n * @since 3.0.0\n */\n'between',\n\n/**\n * Wrapper for {@link Collection#createIndex}.\n *\n * @example\n * // Index users by age\n * store.createIndex('user', 'age');\n *\n * @example\n * // Index users by status and role\n * store.createIndex('user', 'statusAndRole', ['status', 'role']);\n *\n * @method SimpleStore#createIndex\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {string} name See {@link Collection#createIndex}.\n * @param {string[]} [fieldList] See {@link Collection#createIndex}.\n * @see Collection#createIndex\n * @see Collection#createIndex\n * @since 3.0.0\n */\n'createIndex',\n\n/**\n * Wrapper for {@link Collection#filter}.\n *\n * @example <caption>SimpleStore#filter</caption>\n * const JSData = require('js-data');\n * const { SimpleStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new SimpleStore();\n * store.defineMapper('post');\n * store.add('post', [\n *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n * ]);\n *\n * // Get the draft posts created less than three months ago\n * let posts = store.filter('post', {\n *   where: {\n *     status: {\n *       '==': 'draft'\n *     },\n *     created_at_timestamp: {\n *       '>=': (new Date().getTime() - (1000 \\* 60 \\* 60 \\* 24 \\* 30 \\* 3)) // 3 months ago\n *     }\n *   }\n * });\n * console.log(posts);\n *\n * // Use a custom filter function\n * posts = store.filter('post', function (post) { return post.id % 2 === 0 });\n *\n * @method SimpleStore#filter\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {(Object|Function)} [queryOrFn={}] See {@link Collection#filter}.\n * @param {object} [thisArg] See {@link Collection#filter}.\n * @returns {Array} See {@link Collection#filter}.\n * @see Collection#filter\n * @see Collection#filter\n * @since 3.0.0\n */\n'filter',\n\n/**\n * Wrapper for {@link Collection#get}.\n *\n * @example <caption>SimpleStore#get</caption>\n * const JSData = require('js-data');\n * const { SimpleStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new SimpleStore();\n * store.defineMapper('post');\n * store.add('post', [\n *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n * ]);\n *\n * console.log(store.get('post', 1)); // {...}\n * console.log(store.get('post', 2)); // undefined\n *\n * @method SimpleStore#get\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {(string|number)} id See {@link Collection#get}.\n * @returns {(Object|Record)} See {@link Collection#get}.\n * @see Collection#get\n * @see Collection#get\n * @since 3.0.0\n */\n'get',\n\n/**\n * Wrapper for {@link Collection#getAll}.\n *\n * @example\n * // Get the posts where \"status\" is \"draft\" or \"inReview\"\n * const posts = store.getAll('post', 'draft', 'inReview', { index: 'status' });\n *\n * @example\n * // Same as above\n * const posts = store.getAll('post', ['draft'], ['inReview'], { index: 'status' });\n *\n * @method SimpleStore#getAll\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {...Array} [keyList] See {@link Collection#getAll}.\n * @param {object} [opts] See {@link Collection#getAll}.\n * @returns {Array} See {@link Collection#getAll}.\n * @see Collection#getAll\n * @see Collection#getAll\n * @since 3.0.0\n */\n'getAll',\n\n/**\n * Wrapper for {@link Collection#prune}.\n *\n * @method SimpleStore#prune\n * @param {object} [opts] See {@link Collection#prune}.\n * @returns {Array} See {@link Collection#prune}.\n * @see Collection#prune\n * @see Collection#prune\n * @since 3.0.0\n */\n'prune',\n\n/**\n * Wrapper for {@link Collection#query}.\n *\n * @example\n * // Grab page 2 of users between ages 18 and 30\n * store.query('user')\n *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n *   .skip(10) // second page\n *   .limit(10) // page size\n *   .run();\n *\n * @method SimpleStore#query\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @returns {Query} See {@link Collection#query}.\n * @see Collection#query\n * @see Collection#query\n * @since 3.0.0\n */\n'query',\n\n/**\n * Wrapper for {@link Collection#toJSON}.\n *\n * @example\n * store.defineMapper('post', {\n *   schema: {\n *     properties: {\n *       id: { type: 'number' },\n *       title: { type: 'string' }\n *     }\n *   }\n * });\n * store.add('post', [\n *   { id: 1, status: 'published', title: 'Respect your Data' },\n *   { id: 2, status: 'draft', title: 'Connecting to a data source' }\n * ]);\n * console.log(store.toJSON('post'));\n * const draftsJSON = store.query('post')\n *   .filter({ status: 'draft' })\n *   .mapCall('toJSON')\n *   .run();\n *\n * @method SimpleStore#toJSON\n * @param {(string|number)} name Name of the {@link Mapper} to target.\n * @param {object} [opts] See {@link Collection#toJSON}.\n * @returns {Array} See {@link Collection#toJSON}.\n * @see Collection#toJSON\n * @see Collection#toJSON\n * @since 3.0.0\n */\n'toJSON',\n\n/**\n * Wrapper for {@link Collection#unsaved}.\n *\n * @method SimpleStore#unsaved\n * @returns {Array} See {@link Collection#unsaved}.\n * @see Collection#unsaved\n * @see Collection#unsaved\n * @since 3.0.0\n */\n'unsaved'];\nconst ownMethodsForScoping = ['addToCache', 'cachedFind', 'cachedFindAll', 'cacheFind', 'cacheFindAll', 'hashQuery'];\n\nconst cachedFn = function (name, hashOrId, opts) {\n  const cached = this._completedQueries[name][hashOrId];\n  if (_utils2.default.isFunction(cached)) {\n    return cached(name, hashOrId, opts);\n  }\n  return cached;\n};\n\nconst SIMPLESTORE_DEFAULTS = {\n  /**\n   * Whether to use the pending query if a `find` request for the specified\n   * record is currently underway. Can be set to `true`, `false`, or to a\n   * function that returns `true` or `false`.\n   *\n   * @default true\n   * @name SimpleStore#usePendingFind\n   * @since 3.0.0\n   * @type {boolean|Function}\n   */\n  usePendingFind: true,\n\n  /**\n   * Whether to use the pending query if a `findAll` request for the given query\n   * is currently underway. Can be set to `true`, `false`, or to a function that\n   * returns `true` or `false`.\n   *\n   * @default true\n   * @name SimpleStore#usePendingFindAll\n   * @since 3.0.0\n   * @type {boolean|Function}\n   */\n  usePendingFindAll: true\n\n  /**\n   * The `SimpleStore` class is an extension of {@link Container}. Not only does\n   * `SimpleStore` manage mappers, but also collections. `SimpleStore` implements the\n   * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n   * {@link Mapper#create}. If you use the asynchronous `SimpleStore` methods\n   * instead of calling them directly on the mappers, then the results of the\n   * method calls will be inserted into the store's collections. You can think of\n   * a `SimpleStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n   * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n   * (the Mappers).\n   *\n   * ```javascript\n   * import { SimpleStore } from 'js-data';\n   * ```\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   * const store = new SimpleStore();\n   *\n   * // SimpleStore#defineMapper returns a direct reference to the newly created\n   * // Mapper.\n   * const UserMapper = store.defineMapper('user');\n   *\n   * // SimpleStore#as returns the store scoped to a particular Mapper.\n   * const UserStore = store.as('user');\n   *\n   * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n   * UserMapper.find(1).then((user) => {\n   *   // retrieved a \"user\" record via the http adapter, but that's it\n   *\n   *   // Call \"find\" on \"store\" targeting \"user\" (Stateful SimpleStore)\n   *   return store.find('user', 1); // same as \"UserStore.find(1)\"\n   * }).then((user) => {\n   *   // not only was a \"user\" record retrieved, but it was added to the\n   *   // store's \"user\" collection\n   *   const cachedUser = store.getCollection('user').get(1);\n   *   console.log(user === cachedUser); // true\n   * });\n   *\n   * @class SimpleStore\n   * @extends Container\n   * @param {object} [opts] Configuration options. See {@link Container}.\n   * @param {boolean} [opts.collectionClass={@link Collection}] See {@link SimpleStore#collectionClass}.\n   * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n   * @param {boolean|Function} [opts.usePendingFind=true] See {@link SimpleStore#usePendingFind}.\n   * @param {boolean|Function} [opts.usePendingFindAll=true] See {@link SimpleStore#usePendingFindAll}.\n   * @returns {SimpleStore}\n   * @see Container\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#SimpleStore\",\"Components of JSData: SimpleStore\"]\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/working-with-the-SimpleStore\",\"Working with the SimpleStore\"]\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-the-browser\",\"Notes on using JSData in the Browser\"]\n   */\n};function SimpleStore(opts) {\n  _utils2.default.classCallCheck(this, SimpleStore);\n\n  opts || (opts = {});\n  // Fill in any missing options with the defaults\n  _utils2.default.fillIn(opts, SIMPLESTORE_DEFAULTS);\n  _Container.Container.call(this, opts);\n\n  this.collectionClass = this.collectionClass || _Collection2.default;\n  this._collections = {};\n  this._pendingQueries = {};\n  this._completedQueries = {};\n}\n\nconst props = {\n  constructor: SimpleStore,\n\n  /**\n   * Internal method used to handle Mapper responses.\n   *\n   * @method SimpleStore#_end\n   * @private\n   * @param {string} name Name of the {@link Collection} to which to\n   * add the data.\n   * @param {object} result The result from a Mapper.\n   * @param {object} [opts] Configuration options.\n   * @returns {(Object|Array)} Result.\n   */\n  _end(name, result, opts) {\n    let data = opts.raw ? result.data : result;\n    if (data && _utils2.default.isFunction(this.addToCache)) {\n      data = this.addToCache(name, data, opts);\n      if (opts.raw) {\n        result.data = data;\n      } else {\n        result = data;\n      }\n    }\n    return result;\n  },\n\n  /**\n   * Register a new event listener on this SimpleStore.\n   *\n   * Proxy for {@link Container#on}. If an event was emitted by a Mapper or\n   * Collection in the SimpleStore, then the name of the Mapper or Collection will\n   * be prepended to the arugments passed to the provided event handler.\n   *\n   * @example\n   * // Listen for all \"afterCreate\" events in a SimpleStore\n   * store.on('afterCreate', (mapperName, props, opts, result) => {\n   *   console.log(mapperName); // \"post\"\n   *   console.log(props.id); // undefined\n   *   console.log(result.id); // 1234\n   * });\n   * store.create('post', { title: 'Modeling your data' }).then((post) => {\n   *   console.log(post.id); // 1234\n   * });\n   *\n   * @example\n   * // Listen for the \"add\" event on a collection\n   * store.on('add', (mapperName, records) => {\n   *   console.log(records); // [...]\n   * });\n   *\n   * @example\n   * // Listen for \"change\" events on a record\n   * store.on('change', (mapperName, record, changes) => {\n   *   console.log(changes); // { changed: { title: 'Modeling your data' } }\n   * });\n   * post.title = 'Modeling your data';\n   *\n   * @method SimpleStore#on\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   */\n\n  /**\n   * Used to bind to events emitted by collections in this store.\n   *\n   * @method SimpleStore#_onCollectionEvent\n   * @private\n   * @param {string} name Name of the collection that emitted the event.\n   * @param {...*} [args] Args passed to {@link Collection#emit}.\n   */\n  _onCollectionEvent(name, ...args) {\n    const type = args.shift();\n    this.emit(type, name, ...args);\n  },\n\n  /**\n   * This method takes the data received from {@link SimpleStore#find},\n   * {@link SimpleStore#findAll}, {@link SimpleStore#update}, etc., and adds the\n   * data to the store. _You don't need to call this method directly._\n   *\n   * If you're using the http adapter and your response data is in an unexpected\n   * format, you may need to override this method so the right data gets added\n   * to the store.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   addToCache (mapperName, data, opts) {\n   *     // Let's say for a particular Resource, response data is in a weird format\n   *     if (name === 'comment') {\n   *       // Re-assign the variable to add the correct records into the stores\n   *       data = data.items;\n   *     }\n   *     // Now perform default behavior\n   *     return SimpleStore.prototype.addToCache.call(this, mapperName, data, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   addToCache (mapperName, data, opts) {\n   *     // Let's say for a particular Resource, response data is in a weird format\n   *     if (name === 'comment') {\n   *       // Re-assign the variable to add the correct records into the stores\n   *       data = data.items;\n   *     }\n   *     // Now perform default behavior\n   *     return super.addToCache(mapperName, data, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#addToCache\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {*} data Data from which data should be selected for add.\n   * @param {object} [opts] Configuration options.\n   */\n  addToCache(name, data, opts) {\n    return this.getCollection(name).add(data, opts);\n  },\n\n  /**\n   * Return the store scoped to a particular mapper/collection pair.\n   *\n   * @example <caption>SimpleStore.as</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * const UserMapper = store.defineMapper('user');\n   * const UserStore = store.as('user');\n   *\n   * const user1 = store.createRecord('user', { name: 'John' });\n   * const user2 = UserStore.createRecord({ name: 'John' });\n   * const user3 = UserMapper.createRecord({ name: 'John' });\n   * console.log(user1 === user2);\n   * console.log(user2 === user3);\n   * console.log(user1 === user3);\n   *\n   * @method SimpleStore#as\n   * @param {string} name Name of the {@link Mapper}.\n   * @returns {Object} The store, scoped to a particular Mapper/Collection pair.\n   * @since 3.0.0\n   */\n  as(name) {\n    const props = {};\n    const original = this;\n    const methods = ownMethodsForScoping.concat(_Container.proxiedMapperMethods).concat(proxiedCollectionMethods);\n\n    methods.forEach(function (method) {\n      props[method] = {\n        writable: true,\n        value(...args) {\n          return original[method](name, ...args);\n        }\n      };\n    });\n    props.getMapper = {\n      writable: true,\n      value() {\n        return original.getMapper(name);\n      }\n    };\n    props.getCollection = {\n      writable: true,\n      value() {\n        return original.getCollection(name);\n      }\n    };\n    return Object.create(this, props);\n  },\n\n  /**\n   * Retrieve a cached `find` result, if any. This method is called during\n   * {@link SimpleStore#find} to determine if {@link Mapper#find} needs to be\n   * called. If this method returns `undefined` then {@link Mapper#find} will\n   * be called. Otherwise {@link SimpleStore#find} will immediately resolve with\n   * the return value of this method.\n   *\n   * When using {@link SimpleStore} in the browser, you can override this method\n   * to implement your own cache-busting strategy.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFind (mapperName, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#find call\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cachedFind.call(this, mapperName, id, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFind (mapperName, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#find call\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cachedFind(mapperName, id, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cachedFind\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}.\n   * @param {(string|number)} id The `id` argument passed to {@link SimpleStore#find}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#find}.\n   * @since 3.0.0\n   */\n  cachedFind: cachedFn,\n\n  /**\n   * Retrieve a cached `findAll` result, if any. This method is called during\n   * {@link SimpleStore#findAll} to determine if {@link Mapper#findAll} needs to be\n   * called. If this method returns `undefined` then {@link Mapper#findAll} will\n   * be called. Otherwise {@link SimpleStore#findAll} will immediately resolve with\n   * the return value of this method.\n   *\n   * When using {@link SimpleStore} in the browser, you can override this method\n   * to implement your own cache-busting strategy.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFindAll (mapperName, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#findAll call\n   *       return undefined;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cachedFindAll.call(this, mapperName, hash, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFindAll (mapperName, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#findAll call\n   *       return undefined;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cachedFindAll(mapperName, hash, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cachedFindAll\n   * @param {string} name The `name` argument passed to {@link SimpleStore#findAll}.\n   * @param {string} hash The result of calling {@link SimpleStore#hashQuery} on\n   * the `query` argument passed to {@link SimpleStore#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#findAll}.\n   * @since 3.0.0\n   */\n  cachedFindAll: cachedFn,\n\n  /**\n   * Mark a {@link Mapper#find} result as cached by adding an entry to\n   * {@link SimpleStore#_completedQueries}. By default, once a `find` entry is\n   * added it means subsequent calls to the same Resource with the same `id`\n   * argument will immediately resolve with the result of calling\n   * {@link SimpleStore#get} instead of delegating to {@link Mapper#find}.\n   *\n   * As part of implementing your own caching strategy, you may choose to\n   * override this method.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cacheFind (mapperName, data, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cacheFind.call(this, mapperName, data, id, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cacheFind (mapperName, data, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cacheFind(mapperName, data, id, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cacheFind\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}.\n   * @param {*} data The result to cache.\n   * @param {(string|number)} id The `id` argument passed to {@link SimpleStore#find}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#find}.\n   * @since 3.0.0\n   */\n  cacheFind(name, data, id, opts) {\n    this._completedQueries[name][id] = (name, id, opts) => this.get(name, id);\n  },\n\n  /**\n   * Mark a {@link Mapper#findAll} result as cached by adding an entry to\n   * {@link SimpleStore#_completedQueries}. By default, once a `findAll` entry is\n   * added it means subsequent calls to the same Resource with the same `query`\n   * argument will immediately resolve with the result of calling\n   * {@link SimpleStore#filter} instead of delegating to {@link Mapper#findAll}.\n   *\n   * As part of implementing your own caching strategy, you may choose to\n   * override this method.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFindAll (mapperName, data, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior.\n   *     return SimpleStore.prototype.cachedFindAll.call(this, mapperName, data, hash, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFindAll (mapperName, data, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior.\n   *     return super.cachedFindAll(mapperName, data, hash, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cacheFindAll\n   * @param {string} name The `name` argument passed to {@link SimpleStore#findAll}.\n   * @param {*} data The result to cache.\n   * @param {string} hash The result of calling {@link SimpleStore#hashQuery} on\n   * the `query` argument passed to {@link SimpleStore#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#findAll}.\n   * @since 3.0.0\n   */\n  cacheFindAll(name, data, hash, opts) {\n    this._completedQueries[name][hash] = (name, hash, opts) => this.filter(name, _utils2.default.fromJson(hash));\n  },\n\n  /**\n   * Remove __all__ records from the in-memory store and reset\n   * {@link SimpleStore#_completedQueries}.\n   *\n   * @method SimpleStore#clear\n   * @returns {Object} Object containing all records that were in the store.\n   * @see SimpleStore#remove\n   * @see SimpleStore#removeAll\n   * @since 3.0.0\n   */\n  clear() {\n    const removed = {};\n    _utils2.default.forOwn(this._collections, (collection, name) => {\n      removed[name] = collection.removeAll();\n      this._completedQueries[name] = {};\n    });\n    return removed;\n  },\n\n  /**\n   * Fired during {@link SimpleStore#create}. See\n   * {@link SimpleStore~beforeCreateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeCreate\n   * @see SimpleStore~beforeCreateListener\n   * @see SimpleStore#create\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeCreate} event.\n   *\n   * @example\n   * function onBeforeCreate (mapperName, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreate', onBeforeCreate);\n   *\n   * @callback SimpleStore~beforeCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreate}.\n   * @see SimpleStore#event:beforeCreate\n   * @see SimpleStore#create\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#create}. See\n   * {@link SimpleStore~afterCreateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterCreate\n   * @see SimpleStore~afterCreateListener\n   * @see SimpleStore#create\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterCreate} event.\n   *\n   * @example\n   * function onAfterCreate (mapperName, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreate', onAfterCreate);\n   *\n   * @callback SimpleStore~afterCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreate}.\n   * @see SimpleStore#event:afterCreate\n   * @see SimpleStore#create\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#create}. Adds the created record to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   POST /book {\"author_id\":1234,...}\n   * store.create('book', {\n   *   author_id: 1234,\n   *   edition: 'First Edition',\n   *   title: 'Respect your Data'\n   * }).then((book) => {\n   *   console.log(book.id); // 120392\n   *   console.log(book.title); // \"Respect your Data\"\n   * });\n   *\n   * @fires SimpleStore#beforeCreate\n   * @fires SimpleStore#afterCreate\n   * @fires SimpleStore#add\n   * @method SimpleStore#create\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} record Passed to {@link Mapper#create}.\n   * @param {object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @returns {Promise} Resolves with the result of the create.\n   * @since 3.0.0\n   */\n  create(name, record, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.create.call(this, name, record, opts).then(result => this._end(name, result, opts));\n  },\n\n  /**\n   * Fired during {@link SimpleStore#createMany}. See\n   * {@link SimpleStore~beforeCreateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeCreateMany\n   * @see SimpleStore~beforeCreateManyListener\n   * @see SimpleStore#createMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeCreateMany} event.\n   *\n   * @example\n   * function onBeforeCreateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreateMany', onBeforeCreateMany);\n   *\n   * @callback SimpleStore~beforeCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreateMany}.\n   * @see SimpleStore#event:beforeCreateMany\n   * @see SimpleStore#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#createMany}. See\n   * {@link SimpleStore~afterCreateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterCreateMany\n   * @see SimpleStore~afterCreateManyListener\n   * @see SimpleStore#createMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterCreateMany} event.\n   *\n   * @example\n   * function onAfterCreateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreateMany', onAfterCreateMany);\n   *\n   * @callback SimpleStore~afterCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreateMany}.\n   * @see SimpleStore#event:afterCreateMany\n   * @see SimpleStore#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#createMany}. Adds the created records to the\n   * store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   POST /book [{\"author_id\":1234,...},{...}]\n   * store.createMany('book', [{\n   *   author_id: 1234,\n   *   edition: 'First Edition',\n   *   title: 'Respect your Data'\n   * }, {\n   *   author_id: 1234,\n   *   edition: 'Second Edition',\n   *   title: 'Respect your Data'\n   * }]).then((books) => {\n   *   console.log(books[0].id); // 142394\n   *   console.log(books[0].title); // \"Respect your Data\"\n   * });\n   *\n   * @fires SimpleStore#beforeCreateMany\n   * @fires SimpleStore#afterCreateMany\n   * @fires SimpleStore#add\n   * @method SimpleStore#createMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {array} records Passed to {@link Mapper#createMany}.\n   * @param {object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @returns {Promise} Resolves with the result of the create.\n   * @since 3.0.0\n   */\n  createMany(name, records, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.createMany.call(this, name, records, opts).then(result => this._end(name, result, opts));\n  },\n\n  defineMapper(name, opts) {\n    const self = this;\n    const mapper = _Container.Container.prototype.defineMapper.call(self, name, opts);\n    self._pendingQueries[name] = {};\n    self._completedQueries[name] = {};\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] });\n\n    let collectionOpts = {\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this SimpleStore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    };\n\n    if (opts && 'onConflict' in opts) {\n      collectionOpts.onConflict = opts.onConflict;\n    }\n\n    // The SimpleStore uses a subclass of Collection that is \"SimpleStore-aware\"\n    const collection = self._collections[name] = new self.collectionClass(null, collectionOpts); // eslint-disable-line\n\n    const schema = mapper.schema || {};\n    const properties = schema.properties || {};\n    // TODO: Make it possible index nested properties?\n    _utils2.default.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop);\n      }\n    });\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter(obj) {\n        return collection._added[collection.recordId(obj)];\n      }\n    });\n\n    collection.on('all', function (...args) {\n      self._onCollectionEvent(name, ...args);\n    });\n\n    return mapper;\n  },\n\n  /**\n   * Fired during {@link SimpleStore#destroy}. See\n   * {@link SimpleStore~beforeDestroyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeDestroy\n   * @see SimpleStore~beforeDestroyListener\n   * @see SimpleStore#destroy\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeDestroy} event.\n   *\n   * @example\n   * function onBeforeDestroy (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroy', onBeforeDestroy);\n   *\n   * @callback SimpleStore~beforeDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroy}.\n   * @see SimpleStore#event:beforeDestroy\n   * @see SimpleStore#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#destroy}. See\n   * {@link SimpleStore~afterDestroyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterDestroy\n   * @see SimpleStore~afterDestroyListener\n   * @see SimpleStore#destroy\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterDestroy} event.\n   *\n   * @example\n   * function onAfterDestroy (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroy', onAfterDestroy);\n   *\n   * @callback SimpleStore~afterDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroy}.\n   * @see SimpleStore#event:afterDestroy\n   * @see SimpleStore#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroy}. Removes any destroyed record from the\n   * in-memory store. Clears out any {@link SimpleStore#_completedQueries} entries\n   * associated with the provided `id`.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * store.add('book', { id: 1234, title: 'Data Management is Hard' });\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   DELETE /book/1234\n   * store.destroy('book', 1234).then(() => {\n   *   // The book record is no longer in the in-memory store\n   *   console.log(store.get('book', 1234)); // undefined\n   *\n   *   return store.find('book', 1234);\n   * }).then((book) {\n   *   // The book was deleted from the database too\n   *   console.log(book); // undefined\n   * });\n   *\n   * @fires SimpleStore#beforeDestroy\n   * @fires SimpleStore#afterDestroy\n   * @fires SimpleStore#remove\n   * @method SimpleStore#destroy\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#destroy}.\n   * @param {object} [opts] Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @returns {Promise} Resolves when the destroy operation completes.\n   * @since 3.0.0\n   */\n  destroy(name, id, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.destroy.call(this, name, id, opts).then(result => {\n      const record = this.getCollection(name).remove(id, opts);\n\n      if (opts.raw) {\n        result.data = record;\n      } else {\n        result = record;\n      }\n      delete this._pendingQueries[name][id];\n      delete this._completedQueries[name][id];\n      return result;\n    });\n  },\n\n  /**\n   * Fired during {@link SimpleStore#destroyAll}. See\n   * {@link SimpleStore~beforeDestroyAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeDestroyAll\n   * @see SimpleStore~beforeDestroyAllListener\n   * @see SimpleStore#destroyAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeDestroyAll} event.\n   *\n   * @example\n   * function onBeforeDestroyAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroyAll', onBeforeDestroyAll);\n   *\n   * @callback SimpleStore~beforeDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroyAll}.\n   * @see SimpleStore#event:beforeDestroyAll\n   * @see SimpleStore#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#destroyAll}. See\n   * {@link SimpleStore~afterDestroyAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterDestroyAll\n   * @see SimpleStore~afterDestroyAllListener\n   * @see SimpleStore#destroyAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterDestroyAll} event.\n   *\n   * @example\n   * function onAfterDestroyAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroyAll', onAfterDestroyAll);\n   *\n   * @callback SimpleStore~afterDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroyAll}.\n   * @see SimpleStore#event:afterDestroyAll\n   * @see SimpleStore#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroyAll}. Removes any destroyed records from\n   * the in-memory store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * store.add('book', { id: 1234, title: 'Data Management is Hard' });\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   DELETE /book/1234\n   * store.destroy('book', 1234).then(() => {\n   *   // The book record is gone from the in-memory store\n   *   console.log(store.get('book', 1234)); // undefined\n   *   return store.find('book', 1234);\n   * }).then((book) {\n   *   // The book was deleted from the database too\n   *   console.log(book); // undefined\n   * });\n   *\n   * @fires SimpleStore#beforeDestroyAll\n   * @fires SimpleStore#afterDestroyAll\n   * @fires SimpleStore#remove\n   * @method SimpleStore#destroyAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] Passed to {@link Mapper#destroyAll}.\n   * @param {object} [opts] Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @returns {Promise} Resolves when the delete completes.\n   * @since 3.0.0\n   */\n  destroyAll(name, query, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.destroyAll.call(this, name, query, opts).then(result => {\n      const records = this.getCollection(name).removeAll(query, opts);\n\n      if (opts.raw) {\n        result.data = records;\n      } else {\n        result = records;\n      }\n      const hash = this.hashQuery(name, query, opts);\n      delete this._pendingQueries[name][hash];\n      delete this._completedQueries[name][hash];\n      return result;\n    });\n  },\n\n  eject(name, id, opts) {\n    console.warn('DEPRECATED: \"eject\" is deprecated, use \"remove\" instead');\n    return this.remove(name, id, opts);\n  },\n\n  ejectAll(name, query, opts) {\n    console.warn('DEPRECATED: \"ejectAll\" is deprecated, use \"removeAll\" instead');\n    return this.removeAll(name, query, opts);\n  },\n\n  /**\n   * Fired during {@link SimpleStore#find}. See\n   * {@link SimpleStore~beforeFindListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeFind\n   * @see SimpleStore~beforeFindListener\n   * @see SimpleStore#find\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeFind} event.\n   *\n   * @example\n   * function onBeforeFind (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFind', onBeforeFind);\n   *\n   * @callback SimpleStore~beforeFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFind}.\n   * @see SimpleStore#event:beforeFind\n   * @see SimpleStore#find\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#find}. See\n   * {@link SimpleStore~afterFindListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterFind\n   * @see SimpleStore~afterFindListener\n   * @see SimpleStore#find\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterFind} event.\n   *\n   * @example\n   * function onAfterFind (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFind', onAfterFind);\n   *\n   * @callback SimpleStore~afterFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFind}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFind}.\n   * @see SimpleStore#event:afterFind\n   * @see SimpleStore#find\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#find}. Adds any found record to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   GET /book/1234\n   * store.find('book', 1234).then((book) => {\n   *   // The book record is now in the in-memory store\n   *   console.log(store.get('book', 1234) === book); // true\n   * });\n   *\n   * @fires SimpleStore#beforeFind\n   * @fires SimpleStore#afterFind\n   * @fires SimpleStore#add\n   * @method SimpleStore#find\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#find}.\n   * @param {object} [opts] Passed to {@link Mapper#find}.\n   * @param {boolean} [opts.force] Bypass cacheFind\n   * @param {boolean|Function} [opts.usePendingFind] See {@link SimpleStore#usePendingFind}\n   * @returns {Promise} Resolves with the result, if any.\n   * @since 3.0.0\n   */\n  find(name, id, opts) {\n    opts || (opts = {});\n    const mapper = this.getMapper(name);\n    const pendingQuery = this._pendingQueries[name][id];\n    const usePendingFind = opts.usePendingFind === undefined ? this.usePendingFind : opts.usePendingFind;\n    _utils2.default._(opts, mapper);\n\n    if (pendingQuery && (_utils2.default.isFunction(usePendingFind) ? usePendingFind.call(this, name, id, opts) : usePendingFind)) {\n      return pendingQuery;\n    }\n    const item = this.cachedFind(name, id, opts);\n\n    if (opts.force || !item) {\n      const promise = this._pendingQueries[name][id] = _Container.Container.prototype.find.call(this, name, id, opts);\n      return promise.then(result => {\n        delete this._pendingQueries[name][id];\n        result = this._end(name, result, opts);\n        this.cacheFind(name, result, id, opts);\n        return result;\n      }, err => {\n        delete this._pendingQueries[name][id];\n        return _utils2.default.reject(err);\n      });\n    }\n\n    return _utils2.default.resolve(item);\n  },\n\n  /**\n   * Fired during {@link SimpleStore#findAll}. See\n   * {@link SimpleStore~beforeFindAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeFindAll\n   * @see SimpleStore~beforeFindAllListener\n   * @see SimpleStore#findAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeFindAll} event.\n   *\n   * @example\n   * function onBeforeFindAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFindAll', onBeforeFindAll);\n   *\n   * @callback SimpleStore~beforeFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFindAll}.\n   * @see SimpleStore#event:beforeFindAll\n   * @see SimpleStore#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#findAll}. See\n   * {@link SimpleStore~afterFindAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterFindAll\n   * @see SimpleStore~afterFindAllListener\n   * @see SimpleStore#findAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterFindAll} event.\n   *\n   * @example\n   * function onAfterFindAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFindAll', onAfterFindAll);\n   *\n   * @callback SimpleStore~afterFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFindAll}.\n   * @see SimpleStore#event:afterFindAll\n   * @see SimpleStore#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#findAll}. Adds any found records to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('movie');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   GET /movie?rating=PG\n   * store.find('movie', { rating: 'PG' }).then((movies) => {\n   *   // The movie records are now in the in-memory store\n   *   console.log(store.filter('movie'));\n   * });\n   *\n   * @fires SimpleStore#beforeFindAll\n   * @fires SimpleStore#afterFindAll\n   * @fires SimpleStore#add\n   * @method SimpleStore#findAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] Passed to {@link Mapper.findAll}.\n   * @param {object} [opts] Passed to {@link Mapper.findAll}.\n   * @param {boolean} [opts.force] Bypass cacheFindAll\n   * @param {boolean|Function} [opts.usePendingFindAll] See {@link SimpleStore#usePendingFindAll}\n   * @returns {Promise} Resolves with the result, if any.\n   * @since 3.0.0\n   */\n  findAll(name, query, opts) {\n    opts || (opts = {});\n    const mapper = this.getMapper(name);\n    const hash = this.hashQuery(name, query, opts);\n    const pendingQuery = this._pendingQueries[name][hash];\n    const usePendingFindAll = opts.usePendingFindAll === undefined ? this.usePendingFindAll : opts.usePendingFindAll;\n    _utils2.default._(opts, mapper);\n\n    if (pendingQuery && (_utils2.default.isFunction(usePendingFindAll) ? usePendingFindAll.call(this, name, query, opts) : usePendingFindAll)) {\n      return pendingQuery;\n    }\n\n    const items = this.cachedFindAll(name, hash, opts);\n\n    if (opts.force || !items) {\n      const promise = this._pendingQueries[name][hash] = _Container.Container.prototype.findAll.call(this, name, query, opts);\n      return promise.then(result => {\n        delete this._pendingQueries[name][hash];\n        result = this._end(name, result, opts);\n        this.cacheFindAll(name, result, hash, opts);\n        return result;\n      }, err => {\n        delete this._pendingQueries[name][hash];\n        return _utils2.default.reject(err);\n      });\n    }\n\n    return _utils2.default.resolve(items);\n  },\n\n  /**\n   * Return the {@link Collection} with the given name, if for some\n   * reason you need a direct reference to the collection.\n   *\n   * @method SimpleStore#getCollection\n   * @param {string} name Name of the {@link Collection} to retrieve.\n   * @returns {Collection}\n   * @since 3.0.0\n   * @throws {Error} Thrown if the specified {@link Collection} does not\n   * exist.\n   */\n  getCollection(name) {\n    const collection = this._collections[name];\n    if (!collection) {\n      throw _utils2.default.err(`${DOMAIN}#getCollection`, name)(404, 'collection');\n    }\n    return collection;\n  },\n\n  /**\n   * Hashing function used to cache {@link SimpleStore#find} and\n   * {@link SimpleStore#findAll} requests. This method simply JSONifies the\n   * `query` argument passed to {@link SimpleStore#find} or\n   * {@link SimpleStore#findAll}.\n   *\n   * Override this method for custom hashing behavior.\n   * @method SimpleStore#hashQuery\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}\n   * or {@link SimpleStore#findAll}.\n   * @param {object} query The `query` argument passed to {@link SimpleStore#find}\n   * or {@link SimpleStore#findAll}.\n   * @returns {string} The JSONified `query`.\n   * @since 3.0.0\n   */\n  hashQuery(name, query, opts) {\n    return _utils2.default.toJson(query || {});\n  },\n\n  inject(name, records, opts) {\n    console.warn('DEPRECATED: \"inject\" is deprecated, use \"add\" instead');\n    return this.add(name, records, opts);\n  },\n\n  /**\n   * Wrapper for {@link Collection#remove}. Removes the specified\n   * {@link Record} from the store.\n   *\n   * @example <caption>SimpleStore#remove</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('book');\n   * console.log(store.getAll('book').length);\n   * store.add('book', { id: 1234 });\n   * console.log(store.getAll('book').length);\n   * store.remove('book', 1234);\n   * console.log(store.getAll('book').length);\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#remove\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {string|number} id The primary key of the {@link Record} to remove.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record} to also\n   * remove from the store.\n   * @returns {Record} The removed {@link Record}, if any.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  remove(name, id, opts) {\n    const record = this.getCollection(name).remove(id, opts);\n    if (record) {\n      this.removeRelated(name, [record], opts);\n    }\n    return record;\n  },\n\n  /**\n   * Wrapper for {@link Collection#removeAll}. Removes the selected\n   * {@link Record}s from the store.\n   *\n   * @example <caption>SimpleStore#removeAll</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('movie');\n   * console.log(store.getAll('movie').length);\n   * store.add('movie', [{ id: 3, rating: 'R' }, { id: 4, rating: 'PG-13' });\n   * console.log(store.getAll('movie').length);\n   * store.removeAll('movie', { rating: 'R' });\n   * console.log(store.getAll('movie').length);\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#removeAll\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record} to also\n   * remove from the store.\n   * @returns {Record} The removed {@link Record}s, if any.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  removeAll(name, query, opts) {\n    if (!query || !Object.keys(query).length) {\n      this._completedQueries[name] = {};\n    } else {\n      this._completedQueries[name][this.hashQuery(name, query, opts)] = undefined;\n    }\n    const records = this.getCollection(name).removeAll(query, opts);\n    if (records.length) {\n      this.removeRelated(name, records, opts);\n    }\n    return records;\n  },\n\n  /**\n   * Remove from the store {@link Record}s that are related to the provided\n   * {@link Record}(s).\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#removeRelated\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {Record|Record[]} records {@link Record}s whose relations are to be\n   * removed.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record}(s) to remove\n   * from the store.\n   * @since 3.0.0\n   */\n  removeRelated(name, records, opts) {\n    if (!_utils2.default.isArray(records)) {\n      records = [records];\n    }\n    _utils2.default.forEachRelation(this.getMapper(name), opts, (def, optsCopy) => {\n      records.forEach(record => {\n        let relatedData;\n        let query;\n        if (def.foreignKey && (def.type === _decorators.hasOneType || def.type === _decorators.hasManyType)) {\n          query = { [def.foreignKey]: def.getForeignKey(record) };\n        } else if (def.type === _decorators.hasManyType && def.localKeys) {\n          query = {\n            where: {\n              [def.getRelation().idAttribute]: {\n                'in': _utils2.default.get(record, def.localKeys)\n              }\n            }\n          };\n        } else if (def.type === _decorators.hasManyType && def.foreignKeys) {\n          query = {\n            where: {\n              [def.foreignKeys]: {\n                'contains': def.getForeignKey(record)\n              }\n            }\n          };\n        } else if (def.type === _decorators.belongsToType) {\n          relatedData = this.remove(def.relation, def.getForeignKey(record), optsCopy);\n        }\n        if (query) {\n          relatedData = this.removeAll(def.relation, query, optsCopy);\n        }\n        if (relatedData) {\n          if (_utils2.default.isArray(relatedData) && !relatedData.length) {\n            return;\n          }\n          if (def.type === _decorators.hasOneType) {\n            relatedData = relatedData[0];\n          }\n          def.setLocalField(record, relatedData);\n        }\n      });\n    });\n  },\n\n  /**\n   * Fired during {@link SimpleStore#update}. See\n   * {@link SimpleStore~beforeUpdateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdate\n   * @see SimpleStore~beforeUpdateListener\n   * @see SimpleStore#update\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdate} event.\n   *\n   * @example\n   * function onBeforeUpdate (mapperName, id, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdate', onBeforeUpdate);\n   *\n   * @callback SimpleStore~beforeUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdate}.\n   * @see SimpleStore#event:beforeUpdate\n   * @see SimpleStore#update\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#update}. See\n   * {@link SimpleStore~afterUpdateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdate\n   * @see SimpleStore~afterUpdateListener\n   * @see SimpleStore#update\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdate} event.\n   *\n   * @example\n   * function onAfterUpdate (mapperName, id, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdate', onAfterUpdate);\n   *\n   * @callback SimpleStore~afterUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdate}.\n   * @see SimpleStore#event:afterUpdate\n   * @see SimpleStore#update\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#update}. Adds the updated {@link Record} to the\n   * store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post/1234 {\"status\":\"published\"}\n   * store.update('post', 1, { status: 'published' }).then((post) => {\n   *   // The post record has also been updated in the in-memory store\n   *   console.log(store.get('post', 1234));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdate\n   * @fires SimpleStore#afterUpdate\n   * @fires SimpleStore#add\n   * @method SimpleStore#update\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#update}.\n   * @param {object} record Passed to {@link Mapper#update}.\n   * @param {object} [opts] Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  update(name, id, record, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.update.call(this, name, id, record, opts).then(result => this._end(name, result, opts));\n  },\n\n  /**\n   * Fired during {@link SimpleStore#updateAll}. See\n   * {@link SimpleStore~beforeUpdateAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdateAll\n   * @see SimpleStore~beforeUpdateAllListener\n   * @see SimpleStore#updateAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdateAll} event.\n   *\n   * @example\n   * function onBeforeUpdateAll (mapperName, props, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateAll', onBeforeUpdateAll);\n   *\n   * @callback SimpleStore~beforeUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateAll}.\n   * @see SimpleStore#event:beforeUpdateAll\n   * @see SimpleStore#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#updateAll}. See\n   * {@link SimpleStore~afterUpdateAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdateAll\n   * @see SimpleStore~afterUpdateAllListener\n   * @see SimpleStore#updateAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdateAll} event.\n   *\n   * @example\n   * function onAfterUpdateAll (mapperName, props, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateAll', onAfterUpdateAll);\n   *\n   * @callback SimpleStore~afterUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateAll}.\n   * @see SimpleStore#event:afterUpdateAll\n   * @see SimpleStore#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateAll}. Adds the updated {@link Record}s to\n   * the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post?author_id=1234 {\"status\":\"published\"}\n   * store.updateAll('post', { author_id: 1234 }, { status: 'published' }).then((posts) => {\n   *   // The post records have also been updated in the in-memory store\n   *   console.log(store.filter('posts', { author_id: 1234 }));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdateAll\n   * @fires SimpleStore#afterUpdateAll\n   * @fires SimpleStore#add\n   * @method SimpleStore#updateAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} props Passed to {@link Mapper#updateAll}.\n   * @param {object} [query] Passed to {@link Mapper#updateAll}.\n   * @param {object} [opts] Passed to {@link Mapper#updateAll}. See\n   * {@link Mapper#updateAll} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  updateAll(name, props, query, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.updateAll.call(this, name, props, query, opts).then(result => this._end(name, result, opts));\n  },\n\n  /**\n   * Fired during {@link SimpleStore#updateMany}. See\n   * {@link SimpleStore~beforeUpdateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdateMany\n   * @see SimpleStore~beforeUpdateManyListener\n   * @see SimpleStore#updateMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdateMany} event.\n   *\n   * @example\n   * function onBeforeUpdateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateMany', onBeforeUpdateMany);\n   *\n   * @callback SimpleStore~beforeUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateMany}.\n   * @see SimpleStore#event:beforeUpdateMany\n   * @see SimpleStore#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#updateMany}. See\n   * {@link SimpleStore~afterUpdateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdateMany\n   * @see SimpleStore~afterUpdateManyListener\n   * @see SimpleStore#updateMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdateMany} event.\n   *\n   * @example\n   * function onAfterUpdateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateMany', onAfterUpdateMany);\n   *\n   * @callback SimpleStore~afterUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateMany}.\n   * @see SimpleStore#event:afterUpdateMany\n   * @see SimpleStore#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateMany}. Adds the updated {@link Record}s to\n   * the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post [{\"id\":3,status\":\"published\"},{\"id\":4,status\":\"published\"}]\n   * store.updateMany('post', [\n   *   { id: 3, status: 'published' },\n   *   { id: 4, status: 'published' }\n   * ]).then((posts) => {\n   *   // The post records have also been updated in the in-memory store\n   *   console.log(store.getAll('post', 3, 4));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdateMany\n   * @fires SimpleStore#afterUpdateMany\n   * @fires SimpleStore#add\n   * @method SimpleStore#updateMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  updateMany(name, records, opts) {\n    opts || (opts = {});\n    return _Container.Container.prototype.updateMany.call(this, name, records, opts).then(result => this._end(name, result, opts));\n  }\n};\n\nproxiedCollectionMethods.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args);\n  };\n});\n\nexports.default = _Container.Container.extend(props);\n\n/**\n * Fired when a record changes. Only works for records that have tracked fields.\n * See {@link SimpleStore~changeListener} on how to listen for this event.\n *\n * @event SimpleStore#change\n * @see SimpleStore~changeListener\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:change} event.\n *\n * @example\n * function onChange (mapperName, record, changes) {\n *   // do something\n * }\n * store.on('change', onChange);\n *\n * @callback SimpleStore~changeListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record} record The Record that changed.\n * @param {object} changes The changes.\n * @see SimpleStore#event:change\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are added to the in-memory store. See\n * {@link SimpleStore~addListener} on how to listen for this event.\n *\n * @event SimpleStore#add\n * @see SimpleStore~addListener\n * @see SimpleStore#event:add\n * @see SimpleStore#add\n * @see SimpleStore#create\n * @see SimpleStore#createMany\n * @see SimpleStore#find\n * @see SimpleStore#findAll\n * @see SimpleStore#update\n * @see SimpleStore#updateAll\n * @see SimpleStore#updateMany\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:add} event.\n *\n * @example\n * function onAdd (mapperName, recordOrRecords) {\n *   // do something\n * }\n * store.on('add', onAdd);\n *\n * @callback SimpleStore~addListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record|Record[]} The Record or Records that were added.\n * @see SimpleStore#event:add\n * @see SimpleStore#add\n * @see SimpleStore#create\n * @see SimpleStore#createMany\n * @see SimpleStore#find\n * @see SimpleStore#findAll\n * @see SimpleStore#update\n * @see SimpleStore#updateAll\n * @see SimpleStore#updateMany\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are removed from the in-memory store. See\n * {@link SimpleStore~removeListener} for how to listen for this event.\n *\n * @event SimpleStore#remove\n * @see SimpleStore~removeListener\n * @see SimpleStore#event:remove\n * @see SimpleStore#clear\n * @see SimpleStore#destroy\n * @see SimpleStore#destroyAll\n * @see SimpleStore#remove\n * @see SimpleStore#removeAll\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:remove} event.\n *\n * @example\n * function onRemove (mapperName, recordsOrRecords) {\n *   // do something\n * }\n * store.on('remove', onRemove);\n *\n * @callback SimpleStore~removeListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record|Record[]} Record or Records that were removed.\n * @see SimpleStore#event:remove\n * @see SimpleStore#clear\n * @see SimpleStore#destroy\n * @see SimpleStore#destroyAll\n * @see SimpleStore#remove\n * @see SimpleStore#removeAll\n * @since 3.0.0\n */\n\n/**\n * Create a subclass of this SimpleStore:\n * @example <caption>SimpleStore.extend</caption>\n * const JSData = require('js-data');\n * const { SimpleStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomSimpleStoreClass extends SimpleStore {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customSimpleStore = new CustomSimpleStoreClass();\n * console.log(customSimpleStore.foo());\n * console.log(CustomSimpleStoreClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherSimpleStoreClass = SimpleStore.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const otherSimpleStore = new OtherSimpleStoreClass();\n * console.log(otherSimpleStore.foo());\n * console.log(OtherSimpleStoreClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherSimpleStoreClass () {\n *   SimpleStore.call(this)\n *   this.created_at = new Date().getTime()\n * }\n * SimpleStore.extend({\n *   constructor: AnotherSimpleStoreClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherSimpleStore = new AnotherSimpleStoreClass();\n * console.log(anotherSimpleStore.created_at);\n * console.log(anotherSimpleStore.foo());\n * console.log(AnotherSimpleStoreClass.beep());\n *\n * @method SimpleStore.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this SimpleStore class.\n * @since 3.0.0\n */","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":11,"column":0}},{"name":"DOMAIN","generated":{"line":21,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":11,"column":6}},{"generated":{"line":21,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":11,"column":15}},{"generated":{"line":21,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":0}},{"name":"proxiedCollectionMethods","generated":{"line":22,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":6}},{"generated":{"line":22,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":23,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":13,"column":2}},{"generated":{"line":52,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":42,"column":2}},{"generated":{"line":52,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":54,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":44,"column":2}},{"generated":{"line":75,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":65,"column":2}},{"generated":{"line":75,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":77,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":67,"column":2}},{"generated":{"line":96,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":86,"column":2}},{"generated":{"line":96,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":98,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":88,"column":2}},{"generated":{"line":137,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":127,"column":2}},{"generated":{"line":137,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":139,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":129,"column":2}},{"generated":{"line":164,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":154,"column":2}},{"generated":{"line":164,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":166,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":156,"column":2}},{"generated":{"line":186,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":176,"column":2}},{"generated":{"line":186,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":188,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":178,"column":2}},{"generated":{"line":198,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":188,"column":2}},{"generated":{"line":198,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":200,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":190,"column":2}},{"generated":{"line":218,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":208,"column":2}},{"generated":{"line":218,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":220,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":210,"column":2}},{"generated":{"line":250,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":240,"column":2}},{"generated":{"line":250,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":252,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":242,"column":2}},{"generated":{"line":261,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":251,"column":2}},{"generated":{"line":261,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":33}},{"generated":{"line":261,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":12,"column":0}},{"generated":{"line":262,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":0}},{"name":"ownMethodsForScoping","generated":{"line":262,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":6}},{"generated":{"line":262,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":254,"column":2}},{"generated":{"line":262,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":255,"column":2}},{"generated":{"line":262,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":256,"column":2}},{"generated":{"line":262,"column":73},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":257,"column":2}},{"generated":{"line":262,"column":86},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":88},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":258,"column":2}},{"generated":{"line":262,"column":102},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":104},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":259,"column":2}},{"generated":{"line":262,"column":115},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":29}},{"generated":{"line":262,"column":116},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":253,"column":0}},{"generated":{"line":264,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":0}},{"name":"cachedFn","generated":{"line":264,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":6}},{"generated":{"line":264,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":17}},{"name":"name","generated":{"line":264,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":27}},{"generated":{"line":264,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":17}},{"name":"hashOrId","generated":{"line":264,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":33}},{"generated":{"line":264,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":17}},{"name":"opts","generated":{"line":264,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":43}},{"generated":{"line":264,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":17}},{"generated":{"line":264,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":49}},{"generated":{"line":265,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":2}},{"name":"cached","generated":{"line":265,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":8}},{"generated":{"line":265,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":17}},{"name":"_completedQueries","generated":{"line":265,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":22}},{"generated":{"line":265,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":17}},{"name":"name","generated":{"line":265,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":40}},{"generated":{"line":265,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":17}},{"name":"hashOrId","generated":{"line":265,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":46}},{"generated":{"line":265,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":17}},{"generated":{"line":265,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":263,"column":2}},{"generated":{"line":266,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":2}},{"name":"utils","generated":{"line":266,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":6}},{"name":"isFunction","generated":{"line":266,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":12}},{"generated":{"line":266,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":6}},{"name":"cached","generated":{"line":266,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":23}},{"generated":{"line":266,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":6}},{"generated":{"line":266,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":2}},{"generated":{"line":266,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":264,"column":32}},{"generated":{"line":267,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":4}},{"name":"cached","generated":{"line":267,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":11}},{"name":"name","generated":{"line":267,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":18}},{"generated":{"line":267,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":11}},{"name":"hashOrId","generated":{"line":267,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":24}},{"generated":{"line":267,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":11}},{"name":"opts","generated":{"line":267,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":34}},{"generated":{"line":267,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":11}},{"generated":{"line":267,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":265,"column":4}},{"generated":{"line":268,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":266,"column":3}},{"generated":{"line":269,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":267,"column":2}},{"name":"cached","generated":{"line":269,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":267,"column":9}},{"generated":{"line":269,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":267,"column":2}},{"generated":{"line":270,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":268,"column":1}},{"generated":{"line":270,"column":1},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":262,"column":0}},{"generated":{"line":272,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":270,"column":0}},{"name":"SIMPLESTORE_DEFAULTS","generated":{"line":272,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":270,"column":6}},{"generated":{"line":272,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":270,"column":29}},{"generated":{"line":273,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":271,"column":2}},{"name":"usePendingFind","generated":{"line":283,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":281,"column":2}},{"generated":{"line":283,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":281,"column":18}},{"generated":{"line":283,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":270,"column":29}},{"generated":{"line":285,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":283,"column":2}},{"name":"usePendingFindAll","generated":{"line":295,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":293,"column":2}},{"generated":{"line":295,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":293,"column":21}},{"generated":{"line":297,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":296,"column":0}},{"generated":{"line":351,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":270,"column":29}},{"generated":{"line":351,"column":1},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":270,"column":0}},{"generated":{"line":351,"column":2},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":350,"column":0}},{"name":"SimpleStore","generated":{"line":351,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":350,"column":9}},{"generated":{"line":351,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":350,"column":0}},{"name":"opts","generated":{"line":351,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":350,"column":22}},{"generated":{"line":351,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":350,"column":0}},{"generated":{"line":351,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":350,"column":28}},{"name":"utils","generated":{"line":352,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":2}},{"name":"classCallCheck","generated":{"line":352,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":8}},{"generated":{"line":352,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":2}},{"generated":{"line":352,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":23}},{"generated":{"line":352,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":2}},{"name":"SimpleStore","generated":{"line":352,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":29}},{"generated":{"line":352,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":351,"column":2}},{"name":"opts","generated":{"line":354,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":353,"column":2}},{"name":"opts","generated":{"line":354,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":353,"column":11}},{"generated":{"line":354,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":353,"column":18}},{"generated":{"line":354,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":353,"column":2}},{"generated":{"line":355,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":354,"column":2}},{"name":"utils","generated":{"line":356,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":2}},{"name":"fillIn","generated":{"line":356,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":8}},{"generated":{"line":356,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":2}},{"name":"opts","generated":{"line":356,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":15}},{"generated":{"line":356,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":2}},{"name":"SIMPLESTORE_DEFAULTS","generated":{"line":356,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":21}},{"generated":{"line":356,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":355,"column":2}},{"name":"Container","generated":{"line":357,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":2}},{"name":"call","generated":{"line":357,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":12}},{"generated":{"line":357,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":2}},{"generated":{"line":357,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":17}},{"generated":{"line":357,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":2}},{"name":"opts","generated":{"line":357,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":23}},{"generated":{"line":357,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":356,"column":2}},{"generated":{"line":359,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":2}},{"name":"collectionClass","generated":{"line":359,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":7}},{"generated":{"line":359,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":2}},{"generated":{"line":359,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":25}},{"name":"collectionClass","generated":{"line":359,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":30}},{"generated":{"line":359,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":25}},{"name":"Collection","generated":{"line":359,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":49}},{"generated":{"line":359,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":358,"column":2}},{"generated":{"line":360,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":359,"column":2}},{"name":"_collections","generated":{"line":360,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":359,"column":7}},{"generated":{"line":360,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":359,"column":2}},{"generated":{"line":360,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":359,"column":22}},{"generated":{"line":360,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":359,"column":2}},{"generated":{"line":361,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":360,"column":2}},{"name":"_pendingQueries","generated":{"line":361,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":360,"column":7}},{"generated":{"line":361,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":360,"column":2}},{"generated":{"line":361,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":360,"column":25}},{"generated":{"line":361,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":360,"column":2}},{"generated":{"line":362,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":361,"column":2}},{"name":"_completedQueries","generated":{"line":362,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":361,"column":7}},{"generated":{"line":362,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":361,"column":2}},{"generated":{"line":362,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":361,"column":27}},{"generated":{"line":362,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":361,"column":2}},{"generated":{"line":363,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":362,"column":1}},{"generated":{"line":365,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":0}},{"name":"props","generated":{"line":365,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":6}},{"generated":{"line":365,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"name":"constructor","generated":{"line":366,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":365,"column":2}},{"name":"SimpleStore","generated":{"line":366,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":365,"column":15}},{"generated":{"line":366,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":368,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":367,"column":2}},{"name":"_end","generated":{"line":379,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":2}},{"name":"name","generated":{"line":379,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":8}},{"generated":{"line":379,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":2}},{"name":"result","generated":{"line":379,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":14}},{"generated":{"line":379,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":2}},{"name":"opts","generated":{"line":379,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":22}},{"generated":{"line":379,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":2}},{"generated":{"line":379,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":378,"column":28}},{"generated":{"line":380,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":4}},{"name":"data","generated":{"line":380,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":8}},{"name":"opts","generated":{"line":380,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":15}},{"name":"raw","generated":{"line":380,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":20}},{"generated":{"line":380,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":15}},{"name":"result","generated":{"line":380,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":26}},{"name":"data","generated":{"line":380,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":33}},{"generated":{"line":380,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":15}},{"name":"result","generated":{"line":380,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":40}},{"generated":{"line":380,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":379,"column":4}},{"generated":{"line":381,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":4}},{"name":"data","generated":{"line":381,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":8}},{"name":"utils","generated":{"line":381,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":16}},{"name":"isFunction","generated":{"line":381,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":22}},{"generated":{"line":381,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":16}},{"generated":{"line":381,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":33}},{"name":"addToCache","generated":{"line":381,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":38}},{"generated":{"line":381,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":16}},{"generated":{"line":381,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":4}},{"generated":{"line":381,"column":61},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":380,"column":51}},{"name":"data","generated":{"line":382,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":6}},{"generated":{"line":382,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":13}},{"name":"addToCache","generated":{"line":382,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":18}},{"generated":{"line":382,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":13}},{"name":"name","generated":{"line":382,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":29}},{"generated":{"line":382,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":13}},{"name":"data","generated":{"line":382,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":35}},{"generated":{"line":382,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":13}},{"name":"opts","generated":{"line":382,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":41}},{"generated":{"line":382,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":13}},{"generated":{"line":382,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":381,"column":6}},{"generated":{"line":383,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":382,"column":6}},{"name":"opts","generated":{"line":383,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":382,"column":10}},{"name":"raw","generated":{"line":383,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":382,"column":15}},{"generated":{"line":383,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":382,"column":6}},{"generated":{"line":383,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":382,"column":20}},{"name":"result","generated":{"line":384,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":383,"column":8}},{"name":"data","generated":{"line":384,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":383,"column":15}},{"generated":{"line":384,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":383,"column":8}},{"name":"data","generated":{"line":384,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":383,"column":22}},{"generated":{"line":384,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":383,"column":8}},{"generated":{"line":385,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":384,"column":7}},{"generated":{"line":385,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":382,"column":6}},{"generated":{"line":385,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":384,"column":13}},{"name":"result","generated":{"line":386,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":385,"column":8}},{"name":"data","generated":{"line":386,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":385,"column":17}},{"generated":{"line":386,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":385,"column":8}},{"generated":{"line":387,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":386,"column":7}},{"generated":{"line":388,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":387,"column":5}},{"generated":{"line":389,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":388,"column":4}},{"name":"result","generated":{"line":389,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":388,"column":11}},{"generated":{"line":389,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":388,"column":4}},{"generated":{"line":390,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":389,"column":3}},{"generated":{"line":390,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":392,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":391,"column":2}},{"generated":{"line":429,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":428,"column":2}},{"name":"_onCollectionEvent","generated":{"line":437,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":2}},{"name":"name","generated":{"line":437,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":22}},{"generated":{"line":437,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":2}},{"generated":{"line":437,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":28}},{"name":"args","generated":{"line":437,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":31}},{"generated":{"line":437,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":2}},{"generated":{"line":437,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":436,"column":37}},{"generated":{"line":438,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":437,"column":4}},{"name":"type","generated":{"line":438,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":437,"column":10}},{"name":"args","generated":{"line":438,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":437,"column":17}},{"name":"shift","generated":{"line":438,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":437,"column":22}},{"generated":{"line":438,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":437,"column":17}},{"generated":{"line":438,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":437,"column":4}},{"generated":{"line":439,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":4}},{"name":"emit","generated":{"line":439,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":9}},{"generated":{"line":439,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":4}},{"name":"type","generated":{"line":439,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":14}},{"generated":{"line":439,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":4}},{"name":"name","generated":{"line":439,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":20}},{"generated":{"line":439,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":4}},{"generated":{"line":439,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":26}},{"name":"args","generated":{"line":439,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":29}},{"generated":{"line":439,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":438,"column":4}},{"generated":{"line":440,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":439,"column":3}},{"generated":{"line":440,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":442,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":441,"column":2}},{"name":"addToCache","generated":{"line":484,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":2}},{"name":"name","generated":{"line":484,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":14}},{"generated":{"line":484,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":2}},{"name":"data","generated":{"line":484,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":20}},{"generated":{"line":484,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":2}},{"name":"opts","generated":{"line":484,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":26}},{"generated":{"line":484,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":2}},{"generated":{"line":484,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":483,"column":32}},{"generated":{"line":485,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":4}},{"generated":{"line":485,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":11}},{"name":"getCollection","generated":{"line":485,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":16}},{"generated":{"line":485,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":11}},{"name":"name","generated":{"line":485,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":30}},{"generated":{"line":485,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":11}},{"name":"add","generated":{"line":485,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":36}},{"generated":{"line":485,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":11}},{"name":"data","generated":{"line":485,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":40}},{"generated":{"line":485,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":11}},{"name":"opts","generated":{"line":485,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":46}},{"generated":{"line":485,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":11}},{"generated":{"line":485,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":484,"column":4}},{"generated":{"line":486,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":485,"column":3}},{"generated":{"line":486,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":488,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":487,"column":2}},{"name":"as","generated":{"line":512,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":511,"column":2}},{"name":"name","generated":{"line":512,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":511,"column":6}},{"generated":{"line":512,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":511,"column":2}},{"generated":{"line":512,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":511,"column":12}},{"generated":{"line":513,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":512,"column":4}},{"name":"props","generated":{"line":513,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":512,"column":10}},{"generated":{"line":513,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":512,"column":18}},{"generated":{"line":513,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":512,"column":4}},{"generated":{"line":514,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":513,"column":4}},{"name":"original","generated":{"line":514,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":513,"column":10}},{"generated":{"line":514,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":513,"column":21}},{"generated":{"line":514,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":513,"column":4}},{"generated":{"line":515,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":4}},{"name":"methods","generated":{"line":515,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":10}},{"name":"ownMethodsForScoping","generated":{"line":515,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":20}},{"name":"concat","generated":{"line":515,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":515,"column":7}},{"generated":{"line":515,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":20}},{"name":"proxiedMapperMethods","generated":{"line":515,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":515,"column":14}},{"generated":{"line":515,"column":79},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":20}},{"name":"concat","generated":{"line":515,"column":81},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":516,"column":7}},{"generated":{"line":515,"column":87},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":20}},{"name":"proxiedCollectionMethods","generated":{"line":515,"column":88},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":516,"column":14}},{"generated":{"line":515,"column":112},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":20}},{"generated":{"line":515,"column":113},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":514,"column":4}},{"name":"methods","generated":{"line":517,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":4}},{"name":"forEach","generated":{"line":517,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":12}},{"generated":{"line":517,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":4}},{"generated":{"line":517,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":20}},{"name":"method","generated":{"line":517,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":30}},{"generated":{"line":517,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":20}},{"generated":{"line":517,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":38}},{"name":"props","generated":{"line":518,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":6}},{"name":"method","generated":{"line":518,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":12}},{"generated":{"line":518,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":6}},{"generated":{"line":518,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":22}},{"name":"writable","generated":{"line":519,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":520,"column":8}},{"generated":{"line":519,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":520,"column":18}},{"generated":{"line":519,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":22}},{"name":"value","generated":{"line":520,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":521,"column":8}},{"generated":{"line":520,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":521,"column":15}},{"name":"args","generated":{"line":520,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":521,"column":18}},{"generated":{"line":520,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":521,"column":8}},{"generated":{"line":520,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":521,"column":24}},{"generated":{"line":521,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":10}},{"name":"original","generated":{"line":521,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":17}},{"name":"method","generated":{"line":521,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":26}},{"generated":{"line":521,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":17}},{"name":"name","generated":{"line":521,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":34}},{"generated":{"line":521,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":17}},{"generated":{"line":521,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":40}},{"name":"args","generated":{"line":521,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":43}},{"generated":{"line":521,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":17}},{"generated":{"line":521,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":522,"column":10}},{"generated":{"line":522,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":523,"column":9}},{"generated":{"line":523,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":22}},{"generated":{"line":523,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":519,"column":6}},{"generated":{"line":524,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":525,"column":5}},{"generated":{"line":524,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":518,"column":4}},{"name":"props","generated":{"line":525,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":4}},{"name":"getMapper","generated":{"line":525,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":10}},{"generated":{"line":525,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":4}},{"generated":{"line":525,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":22}},{"name":"writable","generated":{"line":526,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":527,"column":6}},{"generated":{"line":526,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":527,"column":16}},{"generated":{"line":526,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":22}},{"name":"value","generated":{"line":527,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":528,"column":6}},{"generated":{"line":527,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":528,"column":15}},{"generated":{"line":528,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":8}},{"name":"original","generated":{"line":528,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":15}},{"name":"getMapper","generated":{"line":528,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":24}},{"generated":{"line":528,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":15}},{"name":"name","generated":{"line":528,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":34}},{"generated":{"line":528,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":15}},{"generated":{"line":528,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":529,"column":8}},{"generated":{"line":529,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":530,"column":7}},{"generated":{"line":530,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":22}},{"generated":{"line":530,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":526,"column":4}},{"name":"props","generated":{"line":531,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":4}},{"name":"getCollection","generated":{"line":531,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":10}},{"generated":{"line":531,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":4}},{"generated":{"line":531,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":26}},{"name":"writable","generated":{"line":532,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":533,"column":6}},{"generated":{"line":532,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":533,"column":16}},{"generated":{"line":532,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":26}},{"name":"value","generated":{"line":533,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":534,"column":6}},{"generated":{"line":533,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":534,"column":15}},{"generated":{"line":534,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":8}},{"name":"original","generated":{"line":534,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":15}},{"name":"getCollection","generated":{"line":534,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":24}},{"generated":{"line":534,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":15}},{"name":"name","generated":{"line":534,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":38}},{"generated":{"line":534,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":15}},{"generated":{"line":534,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":535,"column":8}},{"generated":{"line":535,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":536,"column":7}},{"generated":{"line":536,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":26}},{"generated":{"line":536,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":532,"column":4}},{"generated":{"line":537,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":4}},{"name":"Object","generated":{"line":537,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":11}},{"name":"create","generated":{"line":537,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":18}},{"generated":{"line":537,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":11}},{"generated":{"line":537,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":25}},{"generated":{"line":537,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":11}},{"name":"props","generated":{"line":537,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":31}},{"generated":{"line":537,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":11}},{"generated":{"line":537,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":538,"column":4}},{"generated":{"line":538,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":539,"column":3}},{"generated":{"line":538,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":540,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":541,"column":2}},{"name":"cachedFind","generated":{"line":584,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":585,"column":2}},{"name":"cachedFn","generated":{"line":584,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":585,"column":14}},{"generated":{"line":584,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":586,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":587,"column":2}},{"name":"cachedFindAll","generated":{"line":631,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":632,"column":2}},{"name":"cachedFn","generated":{"line":631,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":632,"column":17}},{"generated":{"line":631,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":633,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":634,"column":2}},{"name":"cacheFind","generated":{"line":678,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":2}},{"name":"name","generated":{"line":678,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":13}},{"generated":{"line":678,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":2}},{"name":"data","generated":{"line":678,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":19}},{"generated":{"line":678,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":2}},{"name":"id","generated":{"line":678,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":25}},{"generated":{"line":678,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":2}},{"name":"opts","generated":{"line":678,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":29}},{"generated":{"line":678,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":2}},{"generated":{"line":678,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":679,"column":35}},{"generated":{"line":679,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":4}},{"name":"_completedQueries","generated":{"line":679,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":9}},{"generated":{"line":679,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":4}},{"name":"name","generated":{"line":679,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":27}},{"generated":{"line":679,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":4}},{"name":"id","generated":{"line":679,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":33}},{"generated":{"line":679,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":4}},{"generated":{"line":679,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":39}},{"name":"name","generated":{"line":679,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":40}},{"generated":{"line":679,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":39}},{"name":"id","generated":{"line":679,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":46}},{"generated":{"line":679,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":39}},{"name":"opts","generated":{"line":679,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":50}},{"generated":{"line":679,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":39}},{"generated":{"line":679,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":59}},{"name":"get","generated":{"line":679,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":64}},{"generated":{"line":679,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":59}},{"name":"name","generated":{"line":679,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":68}},{"generated":{"line":679,"column":72},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":59}},{"name":"id","generated":{"line":679,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":74}},{"generated":{"line":679,"column":76},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":59}},{"generated":{"line":679,"column":77},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":680,"column":4}},{"generated":{"line":680,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":681,"column":3}},{"generated":{"line":680,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":682,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":683,"column":2}},{"name":"cacheFindAll","generated":{"line":728,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":2}},{"name":"name","generated":{"line":728,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":16}},{"generated":{"line":728,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":2}},{"name":"data","generated":{"line":728,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":22}},{"generated":{"line":728,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":2}},{"name":"hash","generated":{"line":728,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":28}},{"generated":{"line":728,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":2}},{"name":"opts","generated":{"line":728,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":34}},{"generated":{"line":728,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":2}},{"generated":{"line":728,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":729,"column":40}},{"generated":{"line":729,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":4}},{"name":"_completedQueries","generated":{"line":729,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":9}},{"generated":{"line":729,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":4}},{"name":"name","generated":{"line":729,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":27}},{"generated":{"line":729,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":4}},{"name":"hash","generated":{"line":729,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":33}},{"generated":{"line":729,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":4}},{"generated":{"line":729,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":41}},{"name":"name","generated":{"line":729,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":42}},{"generated":{"line":729,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":41}},{"name":"hash","generated":{"line":729,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":48}},{"generated":{"line":729,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":41}},{"name":"opts","generated":{"line":729,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":54}},{"generated":{"line":729,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":41}},{"generated":{"line":729,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":63}},{"name":"filter","generated":{"line":729,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":68}},{"generated":{"line":729,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":63}},{"name":"name","generated":{"line":729,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":75}},{"generated":{"line":729,"column":79},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":63}},{"name":"utils","generated":{"line":729,"column":81},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":81}},{"name":"fromJson","generated":{"line":729,"column":97},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":87}},{"generated":{"line":729,"column":105},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":81}},{"name":"hash","generated":{"line":729,"column":106},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":96}},{"generated":{"line":729,"column":110},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":81}},{"generated":{"line":729,"column":111},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":63}},{"generated":{"line":729,"column":112},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":730,"column":4}},{"generated":{"line":730,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":731,"column":3}},{"generated":{"line":730,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":732,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":733,"column":2}},{"name":"clear","generated":{"line":742,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":743,"column":2}},{"generated":{"line":742,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":743,"column":11}},{"generated":{"line":743,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":744,"column":4}},{"name":"removed","generated":{"line":743,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":744,"column":10}},{"generated":{"line":743,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":744,"column":20}},{"generated":{"line":743,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":744,"column":4}},{"name":"utils","generated":{"line":744,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":4}},{"name":"forOwn","generated":{"line":744,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":10}},{"generated":{"line":744,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":4}},{"generated":{"line":744,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":17}},{"name":"_collections","generated":{"line":744,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":22}},{"generated":{"line":744,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":4}},{"generated":{"line":744,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":36}},{"name":"collection","generated":{"line":744,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":37}},{"generated":{"line":744,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":36}},{"name":"name","generated":{"line":744,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":49}},{"generated":{"line":744,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":36}},{"generated":{"line":744,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":58}},{"name":"removed","generated":{"line":745,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":6}},{"name":"name","generated":{"line":745,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":14}},{"generated":{"line":745,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":6}},{"name":"collection","generated":{"line":745,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":22}},{"name":"removeAll","generated":{"line":745,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":33}},{"generated":{"line":745,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":22}},{"generated":{"line":745,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":746,"column":6}},{"generated":{"line":746,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":6}},{"name":"_completedQueries","generated":{"line":746,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":11}},{"generated":{"line":746,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":6}},{"name":"name","generated":{"line":746,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":29}},{"generated":{"line":746,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":6}},{"generated":{"line":746,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":37}},{"generated":{"line":746,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":747,"column":6}},{"generated":{"line":747,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":748,"column":5}},{"generated":{"line":747,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":745,"column":4}},{"generated":{"line":748,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":749,"column":4}},{"name":"removed","generated":{"line":748,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":749,"column":11}},{"generated":{"line":748,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":749,"column":4}},{"generated":{"line":749,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":750,"column":3}},{"generated":{"line":749,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":751,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":752,"column":2}},{"generated":{"line":759,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":760,"column":2}},{"generated":{"line":776,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":777,"column":2}},{"generated":{"line":784,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":785,"column":2}},{"generated":{"line":802,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":803,"column":2}},{"name":"create","generated":{"line":837,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":2}},{"name":"name","generated":{"line":837,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":10}},{"generated":{"line":837,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":2}},{"name":"record","generated":{"line":837,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":16}},{"generated":{"line":837,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":2}},{"name":"opts","generated":{"line":837,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":24}},{"generated":{"line":837,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":2}},{"generated":{"line":837,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":838,"column":30}},{"name":"opts","generated":{"line":838,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":839,"column":4}},{"name":"opts","generated":{"line":838,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":839,"column":13}},{"generated":{"line":838,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":839,"column":20}},{"generated":{"line":838,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":839,"column":4}},{"generated":{"line":839,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":4}},{"name":"Container","generated":{"line":839,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"prototype","generated":{"line":839,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":21}},{"generated":{"line":839,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"create","generated":{"line":839,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":31}},{"generated":{"line":839,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"call","generated":{"line":839,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":38}},{"generated":{"line":839,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"generated":{"line":839,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":43}},{"generated":{"line":839,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"name","generated":{"line":839,"column":60},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":49}},{"generated":{"line":839,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"record","generated":{"line":839,"column":66},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":55}},{"generated":{"line":839,"column":72},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"opts","generated":{"line":839,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":63}},{"generated":{"line":839,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"then","generated":{"line":839,"column":80},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":7}},{"generated":{"line":839,"column":84},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"name":"result","generated":{"line":839,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":13}},{"generated":{"line":839,"column":91},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":12}},{"generated":{"line":839,"column":95},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":24}},{"name":"_end","generated":{"line":839,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":29}},{"generated":{"line":839,"column":104},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":24}},{"name":"name","generated":{"line":839,"column":105},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":34}},{"generated":{"line":839,"column":109},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":24}},{"name":"result","generated":{"line":839,"column":111},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":40}},{"generated":{"line":839,"column":117},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":24}},{"name":"opts","generated":{"line":839,"column":119},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":48}},{"generated":{"line":839,"column":123},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":841,"column":24}},{"generated":{"line":839,"column":124},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":11}},{"generated":{"line":839,"column":125},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":840,"column":4}},{"generated":{"line":840,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":842,"column":3}},{"generated":{"line":840,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":842,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":844,"column":2}},{"generated":{"line":850,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":852,"column":2}},{"generated":{"line":867,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":869,"column":2}},{"generated":{"line":875,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":877,"column":2}},{"generated":{"line":893,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":895,"column":2}},{"name":"createMany","generated":{"line":933,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":2}},{"name":"name","generated":{"line":933,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":14}},{"generated":{"line":933,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":2}},{"name":"records","generated":{"line":933,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":20}},{"generated":{"line":933,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":2}},{"name":"opts","generated":{"line":933,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":29}},{"generated":{"line":933,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":2}},{"generated":{"line":933,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":935,"column":35}},{"name":"opts","generated":{"line":934,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":936,"column":4}},{"name":"opts","generated":{"line":934,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":936,"column":13}},{"generated":{"line":934,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":936,"column":20}},{"generated":{"line":934,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":936,"column":4}},{"generated":{"line":935,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":4}},{"name":"Container","generated":{"line":935,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"prototype","generated":{"line":935,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":21}},{"generated":{"line":935,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"createMany","generated":{"line":935,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":31}},{"generated":{"line":935,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"call","generated":{"line":935,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":42}},{"generated":{"line":935,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"generated":{"line":935,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":47}},{"generated":{"line":935,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"name","generated":{"line":935,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":53}},{"generated":{"line":935,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"records","generated":{"line":935,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":59}},{"generated":{"line":935,"column":77},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"opts","generated":{"line":935,"column":79},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":68}},{"generated":{"line":935,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"then","generated":{"line":935,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":7}},{"generated":{"line":935,"column":89},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"name":"result","generated":{"line":935,"column":90},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":13}},{"generated":{"line":935,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":12}},{"generated":{"line":935,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":24}},{"name":"_end","generated":{"line":935,"column":105},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":29}},{"generated":{"line":935,"column":109},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":24}},{"name":"name","generated":{"line":935,"column":110},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":34}},{"generated":{"line":935,"column":114},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":24}},{"name":"result","generated":{"line":935,"column":116},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":40}},{"generated":{"line":935,"column":122},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":24}},{"name":"opts","generated":{"line":935,"column":124},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":48}},{"generated":{"line":935,"column":128},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":938,"column":24}},{"generated":{"line":935,"column":129},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":11}},{"generated":{"line":935,"column":130},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":937,"column":4}},{"generated":{"line":936,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":939,"column":3}},{"generated":{"line":936,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"name":"defineMapper","generated":{"line":938,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":2}},{"name":"name","generated":{"line":938,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":16}},{"generated":{"line":938,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":2}},{"name":"opts","generated":{"line":938,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":22}},{"generated":{"line":938,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":2}},{"generated":{"line":938,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":28}},{"generated":{"line":939,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":942,"column":4}},{"name":"self","generated":{"line":939,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":942,"column":10}},{"generated":{"line":939,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":942,"column":17}},{"generated":{"line":939,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":942,"column":4}},{"generated":{"line":940,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":4}},{"name":"mapper","generated":{"line":940,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":10}},{"name":"Container","generated":{"line":940,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"name":"prototype","generated":{"line":940,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":29}},{"generated":{"line":940,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"name":"defineMapper","generated":{"line":940,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":39}},{"generated":{"line":940,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"name":"call","generated":{"line":940,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":52}},{"generated":{"line":940,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"name":"self","generated":{"line":940,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":57}},{"generated":{"line":940,"column":72},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"name":"name","generated":{"line":940,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":63}},{"generated":{"line":940,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"name":"opts","generated":{"line":940,"column":80},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":69}},{"generated":{"line":940,"column":84},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":19}},{"generated":{"line":940,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":943,"column":4}},{"name":"self","generated":{"line":941,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":4}},{"name":"_pendingQueries","generated":{"line":941,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":9}},{"generated":{"line":941,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":4}},{"name":"name","generated":{"line":941,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":25}},{"generated":{"line":941,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":4}},{"generated":{"line":941,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":33}},{"generated":{"line":941,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":944,"column":4}},{"name":"self","generated":{"line":942,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":4}},{"name":"_completedQueries","generated":{"line":942,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":9}},{"generated":{"line":942,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":4}},{"name":"name","generated":{"line":942,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":27}},{"generated":{"line":942,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":4}},{"generated":{"line":942,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":35}},{"generated":{"line":942,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":945,"column":4}},{"name":"mapper","generated":{"line":943,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":4}},{"name":"relationList","generated":{"line":943,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":11}},{"generated":{"line":943,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":4}},{"name":"Object","generated":{"line":943,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":27}},{"name":"defineProperty","generated":{"line":943,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":34}},{"generated":{"line":943,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":27}},{"name":"mapper","generated":{"line":943,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":49}},{"generated":{"line":943,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":27}},{"generated":{"line":943,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":57}},{"generated":{"line":943,"column":71},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":27}},{"generated":{"line":943,"column":73},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":73}},{"name":"value","generated":{"line":943,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":75}},{"generated":{"line":943,"column":82},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":82}},{"generated":{"line":943,"column":84},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":73}},{"generated":{"line":943,"column":86},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":27}},{"generated":{"line":943,"column":87},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":946,"column":4}},{"generated":{"line":945,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":4}},{"name":"collectionOpts","generated":{"line":945,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":8}},{"generated":{"line":945,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":25}},{"generated":{"line":946,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":949,"column":6}},{"name":"_added","generated":{"line":947,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":950,"column":6}},{"generated":{"line":947,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":950,"column":14}},{"generated":{"line":947,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":25}},{"generated":{"line":948,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":951,"column":6}},{"name":"datastore","generated":{"line":949,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":952,"column":6}},{"name":"self","generated":{"line":949,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":952,"column":17}},{"generated":{"line":949,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":25}},{"generated":{"line":950,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":953,"column":6}},{"name":"mapper","generated":{"line":951,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":954,"column":6}},{"generated":{"line":952,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":25}},{"generated":{"line":952,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":948,"column":4}},{"generated":{"line":954,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":957,"column":4}},{"name":"opts","generated":{"line":954,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":957,"column":8}},{"generated":{"line":954,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":957,"column":17}},{"name":"opts","generated":{"line":954,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":957,"column":33}},{"generated":{"line":954,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":957,"column":4}},{"generated":{"line":954,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":957,"column":40}},{"name":"collectionOpts","generated":{"line":955,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":958,"column":6}},{"name":"onConflict","generated":{"line":955,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":958,"column":21}},{"generated":{"line":955,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":958,"column":6}},{"name":"opts","generated":{"line":955,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":958,"column":34}},{"name":"onConflict","generated":{"line":955,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":958,"column":39}},{"generated":{"line":955,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":958,"column":6}},{"generated":{"line":956,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":959,"column":5}},{"generated":{"line":958,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":961,"column":4}},{"generated":{"line":959,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":4}},{"name":"collection","generated":{"line":959,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":10}},{"name":"self","generated":{"line":959,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":23}},{"name":"_collections","generated":{"line":959,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":28}},{"generated":{"line":959,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":23}},{"name":"name","generated":{"line":959,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":41}},{"generated":{"line":959,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":23}},{"generated":{"line":959,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":49}},{"name":"self","generated":{"line":959,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":53}},{"name":"collectionClass","generated":{"line":959,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":58}},{"generated":{"line":959,"column":73},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":49}},{"generated":{"line":959,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":74}},{"generated":{"line":959,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":49}},{"name":"collectionOpts","generated":{"line":959,"column":80},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":80}},{"generated":{"line":959,"column":94},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":49}},{"generated":{"line":959,"column":95},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":4}},{"generated":{"line":959,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":941,"column":28}},{"generated":{"line":959,"column":97},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":962,"column":97}},{"generated":{"line":961,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":4}},{"name":"schema","generated":{"line":961,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":10}},{"name":"mapper","generated":{"line":961,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":19}},{"name":"schema","generated":{"line":961,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":26}},{"generated":{"line":961,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":19}},{"generated":{"line":961,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":36}},{"generated":{"line":961,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":964,"column":4}},{"generated":{"line":962,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":4}},{"name":"properties","generated":{"line":962,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":10}},{"name":"schema","generated":{"line":962,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":23}},{"name":"properties","generated":{"line":962,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":30}},{"generated":{"line":962,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":23}},{"generated":{"line":962,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":44}},{"generated":{"line":962,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":965,"column":4}},{"generated":{"line":963,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":966,"column":4}},{"name":"utils","generated":{"line":964,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":4}},{"name":"forOwn","generated":{"line":964,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":10}},{"generated":{"line":964,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":4}},{"name":"properties","generated":{"line":964,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":17}},{"generated":{"line":964,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":4}},{"generated":{"line":964,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":29}},{"name":"opts","generated":{"line":964,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":39}},{"generated":{"line":964,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":29}},{"name":"prop","generated":{"line":964,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":45}},{"generated":{"line":964,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":29}},{"generated":{"line":964,"column":61},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":51}},{"generated":{"line":965,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":968,"column":6}},{"name":"opts","generated":{"line":965,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":968,"column":10}},{"name":"indexed","generated":{"line":965,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":968,"column":15}},{"generated":{"line":965,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":968,"column":6}},{"generated":{"line":965,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":968,"column":24}},{"name":"collection","generated":{"line":966,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":969,"column":8}},{"name":"createIndex","generated":{"line":966,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":969,"column":19}},{"generated":{"line":966,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":969,"column":8}},{"name":"prop","generated":{"line":966,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":969,"column":31}},{"generated":{"line":966,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":969,"column":8}},{"generated":{"line":967,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":970,"column":7}},{"generated":{"line":968,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":971,"column":5}},{"generated":{"line":968,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":967,"column":4}},{"generated":{"line":970,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":973,"column":4}},{"generated":{"line":971,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":974,"column":4}},{"name":"collection","generated":{"line":972,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":4}},{"name":"createIndex","generated":{"line":972,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":15}},{"generated":{"line":972,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":4}},{"generated":{"line":972,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":27}},{"generated":{"line":972,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":4}},{"generated":{"line":972,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":46}},{"generated":{"line":972,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":47}},{"generated":{"line":972,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":46}},{"generated":{"line":972,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":4}},{"generated":{"line":972,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":53}},{"name":"fieldGetter","generated":{"line":973,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":976,"column":6}},{"name":"obj","generated":{"line":973,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":976,"column":19}},{"generated":{"line":973,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":976,"column":6}},{"generated":{"line":973,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":976,"column":24}},{"generated":{"line":974,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":8}},{"name":"collection","generated":{"line":974,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":15}},{"name":"_added","generated":{"line":974,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":26}},{"generated":{"line":974,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":15}},{"name":"collection","generated":{"line":974,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":33}},{"name":"recordId","generated":{"line":974,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":44}},{"generated":{"line":974,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":33}},{"name":"obj","generated":{"line":974,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":53}},{"generated":{"line":974,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":33}},{"generated":{"line":974,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":15}},{"generated":{"line":974,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":977,"column":8}},{"generated":{"line":975,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":978,"column":7}},{"generated":{"line":976,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":53}},{"generated":{"line":976,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":975,"column":4}},{"name":"collection","generated":{"line":978,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":4}},{"name":"on","generated":{"line":978,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":15}},{"generated":{"line":978,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":4}},{"generated":{"line":978,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":18}},{"generated":{"line":978,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":4}},{"generated":{"line":978,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":25}},{"generated":{"line":978,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":35}},{"name":"args","generated":{"line":978,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":38}},{"generated":{"line":978,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":25}},{"generated":{"line":978,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":44}},{"name":"self","generated":{"line":979,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":6}},{"name":"_onCollectionEvent","generated":{"line":979,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":11}},{"generated":{"line":979,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":6}},{"name":"name","generated":{"line":979,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":30}},{"generated":{"line":979,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":6}},{"generated":{"line":979,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":36}},{"name":"args","generated":{"line":979,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":39}},{"generated":{"line":979,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":982,"column":6}},{"generated":{"line":980,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":983,"column":5}},{"generated":{"line":980,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":981,"column":4}},{"generated":{"line":982,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":985,"column":4}},{"name":"mapper","generated":{"line":982,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":985,"column":11}},{"generated":{"line":982,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":985,"column":4}},{"generated":{"line":983,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":986,"column":3}},{"generated":{"line":983,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":985,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":988,"column":2}},{"generated":{"line":993,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":996,"column":2}},{"generated":{"line":1010,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1013,"column":2}},{"generated":{"line":1018,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1021,"column":2}},{"generated":{"line":1036,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1039,"column":2}},{"name":"destroy","generated":{"line":1076,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":2}},{"name":"name","generated":{"line":1076,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":11}},{"generated":{"line":1076,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":2}},{"name":"id","generated":{"line":1076,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":17}},{"generated":{"line":1076,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":2}},{"name":"opts","generated":{"line":1076,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":21}},{"generated":{"line":1076,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":2}},{"generated":{"line":1076,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1079,"column":27}},{"name":"opts","generated":{"line":1077,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1080,"column":4}},{"name":"opts","generated":{"line":1077,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1080,"column":13}},{"generated":{"line":1077,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1080,"column":20}},{"generated":{"line":1077,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1080,"column":4}},{"generated":{"line":1078,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":4}},{"name":"Container","generated":{"line":1078,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"prototype","generated":{"line":1078,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":21}},{"generated":{"line":1078,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"destroy","generated":{"line":1078,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":31}},{"generated":{"line":1078,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"call","generated":{"line":1078,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":39}},{"generated":{"line":1078,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"generated":{"line":1078,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":44}},{"generated":{"line":1078,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"name","generated":{"line":1078,"column":61},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":50}},{"generated":{"line":1078,"column":65},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"id","generated":{"line":1078,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":56}},{"generated":{"line":1078,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"opts","generated":{"line":1078,"column":71},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":60}},{"generated":{"line":1078,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"then","generated":{"line":1078,"column":77},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":66}},{"generated":{"line":1078,"column":81},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"name":"result","generated":{"line":1078,"column":82},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":72}},{"generated":{"line":1078,"column":88},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":71}},{"generated":{"line":1078,"column":92},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":83}},{"generated":{"line":1079,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":6}},{"name":"record","generated":{"line":1079,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":12}},{"generated":{"line":1079,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":21}},{"name":"getCollection","generated":{"line":1079,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":26}},{"generated":{"line":1079,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":21}},{"name":"name","generated":{"line":1079,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":40}},{"generated":{"line":1079,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":21}},{"name":"remove","generated":{"line":1079,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":46}},{"generated":{"line":1079,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":21}},{"name":"id","generated":{"line":1079,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":53}},{"generated":{"line":1079,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":21}},{"name":"opts","generated":{"line":1079,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":57}},{"generated":{"line":1079,"column":61},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":21}},{"generated":{"line":1079,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1082,"column":6}},{"generated":{"line":1081,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1084,"column":6}},{"name":"opts","generated":{"line":1081,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1084,"column":10}},{"name":"raw","generated":{"line":1081,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1084,"column":15}},{"generated":{"line":1081,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1084,"column":6}},{"generated":{"line":1081,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1084,"column":20}},{"name":"result","generated":{"line":1082,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1085,"column":8}},{"name":"data","generated":{"line":1082,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1085,"column":15}},{"generated":{"line":1082,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1085,"column":8}},{"name":"record","generated":{"line":1082,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1085,"column":22}},{"generated":{"line":1082,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1085,"column":8}},{"generated":{"line":1083,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1086,"column":7}},{"generated":{"line":1083,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1084,"column":6}},{"generated":{"line":1083,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1086,"column":13}},{"name":"result","generated":{"line":1084,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1087,"column":8}},{"name":"record","generated":{"line":1084,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1087,"column":17}},{"generated":{"line":1084,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1087,"column":8}},{"generated":{"line":1085,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1088,"column":7}},{"generated":{"line":1086,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":6}},{"generated":{"line":1086,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":13}},{"name":"_pendingQueries","generated":{"line":1086,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":18}},{"generated":{"line":1086,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":13}},{"name":"name","generated":{"line":1086,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":34}},{"generated":{"line":1086,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":13}},{"name":"id","generated":{"line":1086,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":40}},{"generated":{"line":1086,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":13}},{"generated":{"line":1086,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1089,"column":6}},{"generated":{"line":1087,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":6}},{"generated":{"line":1087,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":13}},{"name":"_completedQueries","generated":{"line":1087,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":18}},{"generated":{"line":1087,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":13}},{"name":"name","generated":{"line":1087,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":36}},{"generated":{"line":1087,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":13}},{"name":"id","generated":{"line":1087,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":42}},{"generated":{"line":1087,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":13}},{"generated":{"line":1087,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1090,"column":6}},{"generated":{"line":1088,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1091,"column":6}},{"name":"result","generated":{"line":1088,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1091,"column":13}},{"generated":{"line":1088,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1091,"column":6}},{"generated":{"line":1089,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1092,"column":5}},{"generated":{"line":1089,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":11}},{"generated":{"line":1089,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1081,"column":4}},{"generated":{"line":1090,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1093,"column":3}},{"generated":{"line":1090,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1092,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1095,"column":2}},{"generated":{"line":1100,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1103,"column":2}},{"generated":{"line":1117,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1120,"column":2}},{"generated":{"line":1125,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1128,"column":2}},{"generated":{"line":1143,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1146,"column":2}},{"name":"destroyAll","generated":{"line":1181,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":2}},{"name":"name","generated":{"line":1181,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":14}},{"generated":{"line":1181,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":2}},{"name":"query","generated":{"line":1181,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":20}},{"generated":{"line":1181,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":2}},{"name":"opts","generated":{"line":1181,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":27}},{"generated":{"line":1181,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":2}},{"generated":{"line":1181,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1184,"column":33}},{"name":"opts","generated":{"line":1182,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1185,"column":4}},{"name":"opts","generated":{"line":1182,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1185,"column":13}},{"generated":{"line":1182,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1185,"column":20}},{"generated":{"line":1182,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1185,"column":4}},{"generated":{"line":1183,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":4}},{"name":"Container","generated":{"line":1183,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"prototype","generated":{"line":1183,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":21}},{"generated":{"line":1183,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"destroyAll","generated":{"line":1183,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":31}},{"generated":{"line":1183,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"call","generated":{"line":1183,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":42}},{"generated":{"line":1183,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"generated":{"line":1183,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":47}},{"generated":{"line":1183,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"name","generated":{"line":1183,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":53}},{"generated":{"line":1183,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"query","generated":{"line":1183,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":59}},{"generated":{"line":1183,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"opts","generated":{"line":1183,"column":77},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":66}},{"generated":{"line":1183,"column":81},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"then","generated":{"line":1183,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":72}},{"generated":{"line":1183,"column":87},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"name":"result","generated":{"line":1183,"column":88},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":78}},{"generated":{"line":1183,"column":94},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":77}},{"generated":{"line":1183,"column":98},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":89}},{"generated":{"line":1184,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":6}},{"name":"records","generated":{"line":1184,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":12}},{"generated":{"line":1184,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":22}},{"name":"getCollection","generated":{"line":1184,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":27}},{"generated":{"line":1184,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":22}},{"name":"name","generated":{"line":1184,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":41}},{"generated":{"line":1184,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":22}},{"name":"removeAll","generated":{"line":1184,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":47}},{"generated":{"line":1184,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":22}},{"name":"query","generated":{"line":1184,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":57}},{"generated":{"line":1184,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":22}},{"name":"opts","generated":{"line":1184,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":64}},{"generated":{"line":1184,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":22}},{"generated":{"line":1184,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1187,"column":6}},{"generated":{"line":1186,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1189,"column":6}},{"name":"opts","generated":{"line":1186,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1189,"column":10}},{"name":"raw","generated":{"line":1186,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1189,"column":15}},{"generated":{"line":1186,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1189,"column":6}},{"generated":{"line":1186,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1189,"column":20}},{"name":"result","generated":{"line":1187,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1190,"column":8}},{"name":"data","generated":{"line":1187,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1190,"column":15}},{"generated":{"line":1187,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1190,"column":8}},{"name":"records","generated":{"line":1187,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1190,"column":22}},{"generated":{"line":1187,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1190,"column":8}},{"generated":{"line":1188,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1191,"column":7}},{"generated":{"line":1188,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1189,"column":6}},{"generated":{"line":1188,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1191,"column":13}},{"name":"result","generated":{"line":1189,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1192,"column":8}},{"name":"records","generated":{"line":1189,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1192,"column":17}},{"generated":{"line":1189,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1192,"column":8}},{"generated":{"line":1190,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1193,"column":7}},{"generated":{"line":1191,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":6}},{"name":"hash","generated":{"line":1191,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":12}},{"generated":{"line":1191,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":19}},{"name":"hashQuery","generated":{"line":1191,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":24}},{"generated":{"line":1191,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":19}},{"name":"name","generated":{"line":1191,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":34}},{"generated":{"line":1191,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":19}},{"name":"query","generated":{"line":1191,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":40}},{"generated":{"line":1191,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":19}},{"name":"opts","generated":{"line":1191,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":47}},{"generated":{"line":1191,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":19}},{"generated":{"line":1191,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1194,"column":6}},{"generated":{"line":1192,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":6}},{"generated":{"line":1192,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":13}},{"name":"_pendingQueries","generated":{"line":1192,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":18}},{"generated":{"line":1192,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":13}},{"name":"name","generated":{"line":1192,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":34}},{"generated":{"line":1192,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":13}},{"name":"hash","generated":{"line":1192,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":40}},{"generated":{"line":1192,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":13}},{"generated":{"line":1192,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1195,"column":6}},{"generated":{"line":1193,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":6}},{"generated":{"line":1193,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":13}},{"name":"_completedQueries","generated":{"line":1193,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":18}},{"generated":{"line":1193,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":13}},{"name":"name","generated":{"line":1193,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":36}},{"generated":{"line":1193,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":13}},{"name":"hash","generated":{"line":1193,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":42}},{"generated":{"line":1193,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":13}},{"generated":{"line":1193,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1196,"column":6}},{"generated":{"line":1194,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1197,"column":6}},{"name":"result","generated":{"line":1194,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1197,"column":13}},{"generated":{"line":1194,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1197,"column":6}},{"generated":{"line":1195,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1198,"column":5}},{"generated":{"line":1195,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":11}},{"generated":{"line":1195,"column":6},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1186,"column":4}},{"generated":{"line":1196,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1199,"column":3}},{"generated":{"line":1196,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"name":"eject","generated":{"line":1198,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":2}},{"name":"name","generated":{"line":1198,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":9}},{"generated":{"line":1198,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":2}},{"name":"id","generated":{"line":1198,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":15}},{"generated":{"line":1198,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":2}},{"name":"opts","generated":{"line":1198,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":19}},{"generated":{"line":1198,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":2}},{"generated":{"line":1198,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1201,"column":25}},{"name":"console","generated":{"line":1199,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1202,"column":4}},{"name":"warn","generated":{"line":1199,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1202,"column":12}},{"generated":{"line":1199,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1202,"column":4}},{"generated":{"line":1199,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1202,"column":17}},{"generated":{"line":1199,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1202,"column":4}},{"generated":{"line":1200,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":4}},{"generated":{"line":1200,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":11}},{"name":"remove","generated":{"line":1200,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":16}},{"generated":{"line":1200,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":11}},{"name":"name","generated":{"line":1200,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":23}},{"generated":{"line":1200,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":11}},{"name":"id","generated":{"line":1200,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":29}},{"generated":{"line":1200,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":11}},{"name":"opts","generated":{"line":1200,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":33}},{"generated":{"line":1200,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":11}},{"generated":{"line":1200,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1203,"column":4}},{"generated":{"line":1201,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1204,"column":3}},{"generated":{"line":1201,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"name":"ejectAll","generated":{"line":1203,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":2}},{"name":"name","generated":{"line":1203,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":12}},{"generated":{"line":1203,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":2}},{"name":"query","generated":{"line":1203,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":18}},{"generated":{"line":1203,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":2}},{"name":"opts","generated":{"line":1203,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":25}},{"generated":{"line":1203,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":2}},{"generated":{"line":1203,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1206,"column":31}},{"name":"console","generated":{"line":1204,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1207,"column":4}},{"name":"warn","generated":{"line":1204,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1207,"column":12}},{"generated":{"line":1204,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1207,"column":4}},{"generated":{"line":1204,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1207,"column":17}},{"generated":{"line":1204,"column":80},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1207,"column":4}},{"generated":{"line":1205,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":4}},{"generated":{"line":1205,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":11}},{"name":"removeAll","generated":{"line":1205,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":16}},{"generated":{"line":1205,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":11}},{"name":"name","generated":{"line":1205,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":26}},{"generated":{"line":1205,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":11}},{"name":"query","generated":{"line":1205,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":32}},{"generated":{"line":1205,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":11}},{"name":"opts","generated":{"line":1205,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":39}},{"generated":{"line":1205,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":11}},{"generated":{"line":1205,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1208,"column":4}},{"generated":{"line":1206,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1209,"column":3}},{"generated":{"line":1206,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1208,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1211,"column":2}},{"generated":{"line":1216,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1219,"column":2}},{"generated":{"line":1233,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1236,"column":2}},{"generated":{"line":1241,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1244,"column":2}},{"generated":{"line":1259,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1262,"column":2}},{"name":"find","generated":{"line":1291,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":2}},{"name":"name","generated":{"line":1291,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":8}},{"generated":{"line":1291,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":2}},{"name":"id","generated":{"line":1291,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":14}},{"generated":{"line":1291,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":2}},{"name":"opts","generated":{"line":1291,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":18}},{"generated":{"line":1291,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":2}},{"generated":{"line":1291,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1294,"column":24}},{"name":"opts","generated":{"line":1292,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1295,"column":4}},{"name":"opts","generated":{"line":1292,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1295,"column":13}},{"generated":{"line":1292,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1295,"column":20}},{"generated":{"line":1292,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1295,"column":4}},{"generated":{"line":1293,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":4}},{"name":"mapper","generated":{"line":1293,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":10}},{"generated":{"line":1293,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":19}},{"name":"getMapper","generated":{"line":1293,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":24}},{"generated":{"line":1293,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":19}},{"name":"name","generated":{"line":1293,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":34}},{"generated":{"line":1293,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":19}},{"generated":{"line":1293,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1296,"column":4}},{"generated":{"line":1294,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":4}},{"name":"pendingQuery","generated":{"line":1294,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":10}},{"generated":{"line":1294,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":25}},{"name":"_pendingQueries","generated":{"line":1294,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":30}},{"generated":{"line":1294,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":25}},{"name":"name","generated":{"line":1294,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":46}},{"generated":{"line":1294,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":25}},{"name":"id","generated":{"line":1294,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":52}},{"generated":{"line":1294,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":25}},{"generated":{"line":1294,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1297,"column":4}},{"generated":{"line":1295,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":4}},{"name":"usePendingFind","generated":{"line":1295,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":10}},{"name":"opts","generated":{"line":1295,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":27}},{"name":"usePendingFind","generated":{"line":1295,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":32}},{"generated":{"line":1295,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":27}},{"name":"undefined","generated":{"line":1295,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":51}},{"generated":{"line":1295,"column":60},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":27}},{"generated":{"line":1295,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":63}},{"name":"usePendingFind","generated":{"line":1295,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":68}},{"generated":{"line":1295,"column":82},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":27}},{"name":"opts","generated":{"line":1295,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":85}},{"name":"usePendingFind","generated":{"line":1295,"column":90},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":90}},{"generated":{"line":1295,"column":104},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1298,"column":4}},{"name":"utils","generated":{"line":1296,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":4}},{"name":"_","generated":{"line":1296,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":10}},{"generated":{"line":1296,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":4}},{"name":"opts","generated":{"line":1296,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":12}},{"generated":{"line":1296,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":4}},{"name":"mapper","generated":{"line":1296,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":18}},{"generated":{"line":1296,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1299,"column":4}},{"generated":{"line":1298,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":4}},{"name":"pendingQuery","generated":{"line":1298,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":8}},{"name":"utils","generated":{"line":1298,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":25}},{"name":"isFunction","generated":{"line":1298,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":31}},{"generated":{"line":1298,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":25}},{"name":"usePendingFind","generated":{"line":1298,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":42}},{"generated":{"line":1298,"column":66},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":25}},{"name":"usePendingFind","generated":{"line":1298,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":60}},{"name":"call","generated":{"line":1298,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":75}},{"generated":{"line":1298,"column":89},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":60}},{"generated":{"line":1298,"column":90},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":80}},{"generated":{"line":1298,"column":94},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":60}},{"name":"name","generated":{"line":1298,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":86}},{"generated":{"line":1298,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":60}},{"name":"id","generated":{"line":1298,"column":102},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":92}},{"generated":{"line":1298,"column":104},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":60}},{"name":"opts","generated":{"line":1298,"column":106},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":96}},{"generated":{"line":1298,"column":110},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":60}},{"generated":{"line":1298,"column":111},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":25}},{"name":"usePendingFind","generated":{"line":1298,"column":114},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":104}},{"generated":{"line":1298,"column":128},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":8}},{"generated":{"line":1298,"column":129},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":4}},{"generated":{"line":1298,"column":131},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1301,"column":121}},{"generated":{"line":1299,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1302,"column":6}},{"name":"pendingQuery","generated":{"line":1299,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1302,"column":13}},{"generated":{"line":1299,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1302,"column":6}},{"generated":{"line":1300,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1303,"column":5}},{"generated":{"line":1301,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":4}},{"name":"item","generated":{"line":1301,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":10}},{"generated":{"line":1301,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":17}},{"name":"cachedFind","generated":{"line":1301,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":22}},{"generated":{"line":1301,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":17}},{"name":"name","generated":{"line":1301,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":33}},{"generated":{"line":1301,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":17}},{"name":"id","generated":{"line":1301,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":39}},{"generated":{"line":1301,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":17}},{"name":"opts","generated":{"line":1301,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":43}},{"generated":{"line":1301,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":17}},{"generated":{"line":1301,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1304,"column":4}},{"generated":{"line":1303,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":4}},{"name":"opts","generated":{"line":1303,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":8}},{"name":"force","generated":{"line":1303,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":13}},{"generated":{"line":1303,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":8}},{"generated":{"line":1303,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":22}},{"name":"item","generated":{"line":1303,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":23}},{"generated":{"line":1303,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":4}},{"generated":{"line":1303,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1306,"column":29}},{"generated":{"line":1304,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":6}},{"name":"promise","generated":{"line":1304,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":12}},{"generated":{"line":1304,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":22}},{"name":"_pendingQueries","generated":{"line":1304,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":27}},{"generated":{"line":1304,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":22}},{"name":"name","generated":{"line":1304,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":43}},{"generated":{"line":1304,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":22}},{"name":"id","generated":{"line":1304,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":49}},{"generated":{"line":1304,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":22}},{"name":"Container","generated":{"line":1304,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"name":"prototype","generated":{"line":1304,"column":76},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":65}},{"generated":{"line":1304,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"name":"find","generated":{"line":1304,"column":86},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":75}},{"generated":{"line":1304,"column":90},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"name":"call","generated":{"line":1304,"column":91},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":80}},{"generated":{"line":1304,"column":95},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"generated":{"line":1304,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":85}},{"generated":{"line":1304,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"name":"name","generated":{"line":1304,"column":102},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":91}},{"generated":{"line":1304,"column":106},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"name":"id","generated":{"line":1304,"column":108},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":97}},{"generated":{"line":1304,"column":110},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"name":"opts","generated":{"line":1304,"column":112},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":101}},{"generated":{"line":1304,"column":116},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":55}},{"generated":{"line":1304,"column":117},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1307,"column":6}},{"generated":{"line":1305,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1308,"column":6}},{"name":"promise","generated":{"line":1305,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1308,"column":13}},{"name":"then","generated":{"line":1305,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1309,"column":9}},{"generated":{"line":1305,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1308,"column":13}},{"name":"result","generated":{"line":1305,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1309,"column":15}},{"generated":{"line":1305,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1309,"column":14}},{"generated":{"line":1305,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1309,"column":26}},{"generated":{"line":1306,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":10}},{"generated":{"line":1306,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":17}},{"name":"_pendingQueries","generated":{"line":1306,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":22}},{"generated":{"line":1306,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":17}},{"name":"name","generated":{"line":1306,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":38}},{"generated":{"line":1306,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":17}},{"name":"id","generated":{"line":1306,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":44}},{"generated":{"line":1306,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":17}},{"generated":{"line":1306,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1310,"column":10}},{"name":"result","generated":{"line":1307,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":10}},{"generated":{"line":1307,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":19}},{"name":"_end","generated":{"line":1307,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":24}},{"generated":{"line":1307,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":19}},{"name":"name","generated":{"line":1307,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":29}},{"generated":{"line":1307,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":19}},{"name":"result","generated":{"line":1307,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":35}},{"generated":{"line":1307,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":19}},{"name":"opts","generated":{"line":1307,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":43}},{"generated":{"line":1307,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":19}},{"generated":{"line":1307,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1311,"column":10}},{"generated":{"line":1308,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":10}},{"name":"cacheFind","generated":{"line":1308,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":15}},{"generated":{"line":1308,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":10}},{"name":"name","generated":{"line":1308,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":25}},{"generated":{"line":1308,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":10}},{"name":"result","generated":{"line":1308,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":31}},{"generated":{"line":1308,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":10}},{"name":"id","generated":{"line":1308,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":39}},{"generated":{"line":1308,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":10}},{"name":"opts","generated":{"line":1308,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":43}},{"generated":{"line":1308,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1312,"column":10}},{"generated":{"line":1309,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1313,"column":10}},{"name":"result","generated":{"line":1309,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1313,"column":17}},{"generated":{"line":1309,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1313,"column":10}},{"generated":{"line":1310,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1314,"column":9}},{"generated":{"line":1310,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1308,"column":13}},{"name":"err","generated":{"line":1310,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1314,"column":12}},{"generated":{"line":1310,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1314,"column":11}},{"generated":{"line":1310,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1314,"column":20}},{"generated":{"line":1311,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":10}},{"generated":{"line":1311,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":17}},{"name":"_pendingQueries","generated":{"line":1311,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":22}},{"generated":{"line":1311,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":17}},{"name":"name","generated":{"line":1311,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":38}},{"generated":{"line":1311,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":17}},{"name":"id","generated":{"line":1311,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":44}},{"generated":{"line":1311,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":17}},{"generated":{"line":1311,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1315,"column":10}},{"generated":{"line":1312,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":10}},{"name":"utils","generated":{"line":1312,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":17}},{"name":"reject","generated":{"line":1312,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":23}},{"generated":{"line":1312,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":17}},{"name":"err","generated":{"line":1312,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":30}},{"generated":{"line":1312,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":17}},{"generated":{"line":1312,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1316,"column":10}},{"generated":{"line":1313,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1317,"column":9}},{"generated":{"line":1313,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1308,"column":13}},{"generated":{"line":1313,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1308,"column":6}},{"generated":{"line":1314,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1318,"column":5}},{"generated":{"line":1316,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":4}},{"name":"utils","generated":{"line":1316,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":11}},{"name":"resolve","generated":{"line":1316,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":17}},{"generated":{"line":1316,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":11}},{"name":"item","generated":{"line":1316,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":25}},{"generated":{"line":1316,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":11}},{"generated":{"line":1316,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1320,"column":4}},{"generated":{"line":1317,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1321,"column":3}},{"generated":{"line":1317,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1319,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1323,"column":2}},{"generated":{"line":1327,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1331,"column":2}},{"generated":{"line":1344,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1348,"column":2}},{"generated":{"line":1352,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1356,"column":2}},{"generated":{"line":1370,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1374,"column":2}},{"name":"findAll","generated":{"line":1402,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":2}},{"name":"name","generated":{"line":1402,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":11}},{"generated":{"line":1402,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":2}},{"name":"query","generated":{"line":1402,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":17}},{"generated":{"line":1402,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":2}},{"name":"opts","generated":{"line":1402,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":24}},{"generated":{"line":1402,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":2}},{"generated":{"line":1402,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1406,"column":30}},{"name":"opts","generated":{"line":1403,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1407,"column":4}},{"name":"opts","generated":{"line":1403,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1407,"column":13}},{"generated":{"line":1403,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1407,"column":20}},{"generated":{"line":1403,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1407,"column":4}},{"generated":{"line":1404,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":4}},{"name":"mapper","generated":{"line":1404,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":10}},{"generated":{"line":1404,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":19}},{"name":"getMapper","generated":{"line":1404,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":24}},{"generated":{"line":1404,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":19}},{"name":"name","generated":{"line":1404,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":34}},{"generated":{"line":1404,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":19}},{"generated":{"line":1404,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1408,"column":4}},{"generated":{"line":1405,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":4}},{"name":"hash","generated":{"line":1405,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":10}},{"generated":{"line":1405,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":17}},{"name":"hashQuery","generated":{"line":1405,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":22}},{"generated":{"line":1405,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":17}},{"name":"name","generated":{"line":1405,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":32}},{"generated":{"line":1405,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":17}},{"name":"query","generated":{"line":1405,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":38}},{"generated":{"line":1405,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":17}},{"name":"opts","generated":{"line":1405,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":45}},{"generated":{"line":1405,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":17}},{"generated":{"line":1405,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1409,"column":4}},{"generated":{"line":1406,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":4}},{"name":"pendingQuery","generated":{"line":1406,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":10}},{"generated":{"line":1406,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":25}},{"name":"_pendingQueries","generated":{"line":1406,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":30}},{"generated":{"line":1406,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":25}},{"name":"name","generated":{"line":1406,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":46}},{"generated":{"line":1406,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":25}},{"name":"hash","generated":{"line":1406,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":52}},{"generated":{"line":1406,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":25}},{"generated":{"line":1406,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1410,"column":4}},{"generated":{"line":1407,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":4}},{"name":"usePendingFindAll","generated":{"line":1407,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":10}},{"name":"opts","generated":{"line":1407,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":30}},{"name":"usePendingFindAll","generated":{"line":1407,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":35}},{"generated":{"line":1407,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":30}},{"name":"undefined","generated":{"line":1407,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":57}},{"generated":{"line":1407,"column":66},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":30}},{"generated":{"line":1407,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":69}},{"name":"usePendingFindAll","generated":{"line":1407,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":74}},{"generated":{"line":1407,"column":91},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":30}},{"name":"opts","generated":{"line":1407,"column":94},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":94}},{"name":"usePendingFindAll","generated":{"line":1407,"column":99},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":99}},{"generated":{"line":1407,"column":116},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1411,"column":4}},{"name":"utils","generated":{"line":1408,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":4}},{"name":"_","generated":{"line":1408,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":10}},{"generated":{"line":1408,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":4}},{"name":"opts","generated":{"line":1408,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":12}},{"generated":{"line":1408,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":4}},{"name":"mapper","generated":{"line":1408,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":18}},{"generated":{"line":1408,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1412,"column":4}},{"generated":{"line":1410,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":4}},{"name":"pendingQuery","generated":{"line":1410,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":8}},{"name":"utils","generated":{"line":1410,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":25}},{"name":"isFunction","generated":{"line":1410,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":31}},{"generated":{"line":1410,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":25}},{"name":"usePendingFindAll","generated":{"line":1410,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":42}},{"generated":{"line":1410,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":25}},{"name":"usePendingFindAll","generated":{"line":1410,"column":73},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":63}},{"name":"call","generated":{"line":1410,"column":91},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":81}},{"generated":{"line":1410,"column":95},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":63}},{"generated":{"line":1410,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":86}},{"generated":{"line":1410,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":63}},{"name":"name","generated":{"line":1410,"column":102},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":92}},{"generated":{"line":1410,"column":106},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":63}},{"name":"query","generated":{"line":1410,"column":108},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":98}},{"generated":{"line":1410,"column":113},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":63}},{"name":"opts","generated":{"line":1410,"column":115},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":105}},{"generated":{"line":1410,"column":119},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":63}},{"generated":{"line":1410,"column":120},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":25}},{"name":"usePendingFindAll","generated":{"line":1410,"column":123},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":113}},{"generated":{"line":1410,"column":140},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":8}},{"generated":{"line":1410,"column":141},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":4}},{"generated":{"line":1410,"column":143},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1414,"column":133}},{"generated":{"line":1411,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1415,"column":6}},{"name":"pendingQuery","generated":{"line":1411,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1415,"column":13}},{"generated":{"line":1411,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1415,"column":6}},{"generated":{"line":1412,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1416,"column":5}},{"generated":{"line":1414,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":4}},{"name":"items","generated":{"line":1414,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":10}},{"generated":{"line":1414,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":18}},{"name":"cachedFindAll","generated":{"line":1414,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":23}},{"generated":{"line":1414,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":18}},{"name":"name","generated":{"line":1414,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":37}},{"generated":{"line":1414,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":18}},{"name":"hash","generated":{"line":1414,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":43}},{"generated":{"line":1414,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":18}},{"name":"opts","generated":{"line":1414,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":49}},{"generated":{"line":1414,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":18}},{"generated":{"line":1414,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1418,"column":4}},{"generated":{"line":1416,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":4}},{"name":"opts","generated":{"line":1416,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":8}},{"name":"force","generated":{"line":1416,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":13}},{"generated":{"line":1416,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":8}},{"generated":{"line":1416,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":22}},{"name":"items","generated":{"line":1416,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":23}},{"generated":{"line":1416,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":4}},{"generated":{"line":1416,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1420,"column":30}},{"generated":{"line":1417,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":6}},{"name":"promise","generated":{"line":1417,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":12}},{"generated":{"line":1417,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":22}},{"name":"_pendingQueries","generated":{"line":1417,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":27}},{"generated":{"line":1417,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":22}},{"name":"name","generated":{"line":1417,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":43}},{"generated":{"line":1417,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":22}},{"name":"hash","generated":{"line":1417,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":49}},{"generated":{"line":1417,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":22}},{"name":"Container","generated":{"line":1417,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"name":"prototype","generated":{"line":1417,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":67}},{"generated":{"line":1417,"column":87},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"name":"findAll","generated":{"line":1417,"column":88},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":77}},{"generated":{"line":1417,"column":95},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"name":"call","generated":{"line":1417,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":85}},{"generated":{"line":1417,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"generated":{"line":1417,"column":101},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":90}},{"generated":{"line":1417,"column":105},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"name":"name","generated":{"line":1417,"column":107},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":96}},{"generated":{"line":1417,"column":111},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"name":"query","generated":{"line":1417,"column":113},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":102}},{"generated":{"line":1417,"column":118},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"name":"opts","generated":{"line":1417,"column":120},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":109}},{"generated":{"line":1417,"column":124},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":57}},{"generated":{"line":1417,"column":125},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1421,"column":6}},{"generated":{"line":1418,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1422,"column":6}},{"name":"promise","generated":{"line":1418,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1422,"column":13}},{"name":"then","generated":{"line":1418,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1423,"column":9}},{"generated":{"line":1418,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1422,"column":13}},{"name":"result","generated":{"line":1418,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1423,"column":15}},{"generated":{"line":1418,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1423,"column":14}},{"generated":{"line":1418,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1423,"column":26}},{"generated":{"line":1419,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":10}},{"generated":{"line":1419,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":17}},{"name":"_pendingQueries","generated":{"line":1419,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":22}},{"generated":{"line":1419,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":17}},{"name":"name","generated":{"line":1419,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":38}},{"generated":{"line":1419,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":17}},{"name":"hash","generated":{"line":1419,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":44}},{"generated":{"line":1419,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":17}},{"generated":{"line":1419,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1424,"column":10}},{"name":"result","generated":{"line":1420,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":10}},{"generated":{"line":1420,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":19}},{"name":"_end","generated":{"line":1420,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":24}},{"generated":{"line":1420,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":19}},{"name":"name","generated":{"line":1420,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":29}},{"generated":{"line":1420,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":19}},{"name":"result","generated":{"line":1420,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":35}},{"generated":{"line":1420,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":19}},{"name":"opts","generated":{"line":1420,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":43}},{"generated":{"line":1420,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":19}},{"generated":{"line":1420,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1425,"column":10}},{"generated":{"line":1421,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":10}},{"name":"cacheFindAll","generated":{"line":1421,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":15}},{"generated":{"line":1421,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":10}},{"name":"name","generated":{"line":1421,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":28}},{"generated":{"line":1421,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":10}},{"name":"result","generated":{"line":1421,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":34}},{"generated":{"line":1421,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":10}},{"name":"hash","generated":{"line":1421,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":42}},{"generated":{"line":1421,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":10}},{"name":"opts","generated":{"line":1421,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":48}},{"generated":{"line":1421,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1426,"column":10}},{"generated":{"line":1422,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1427,"column":10}},{"name":"result","generated":{"line":1422,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1427,"column":17}},{"generated":{"line":1422,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1427,"column":10}},{"generated":{"line":1423,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1428,"column":9}},{"generated":{"line":1423,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1422,"column":13}},{"name":"err","generated":{"line":1423,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1428,"column":12}},{"generated":{"line":1423,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1428,"column":11}},{"generated":{"line":1423,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1428,"column":20}},{"generated":{"line":1424,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":10}},{"generated":{"line":1424,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":17}},{"name":"_pendingQueries","generated":{"line":1424,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":22}},{"generated":{"line":1424,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":17}},{"name":"name","generated":{"line":1424,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":38}},{"generated":{"line":1424,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":17}},{"name":"hash","generated":{"line":1424,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":44}},{"generated":{"line":1424,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":17}},{"generated":{"line":1424,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1429,"column":10}},{"generated":{"line":1425,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":10}},{"name":"utils","generated":{"line":1425,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":17}},{"name":"reject","generated":{"line":1425,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":23}},{"generated":{"line":1425,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":17}},{"name":"err","generated":{"line":1425,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":30}},{"generated":{"line":1425,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":17}},{"generated":{"line":1425,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1430,"column":10}},{"generated":{"line":1426,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1431,"column":9}},{"generated":{"line":1426,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1422,"column":13}},{"generated":{"line":1426,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1422,"column":6}},{"generated":{"line":1427,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1432,"column":5}},{"generated":{"line":1429,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":4}},{"name":"utils","generated":{"line":1429,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":11}},{"name":"resolve","generated":{"line":1429,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":17}},{"generated":{"line":1429,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":11}},{"name":"items","generated":{"line":1429,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":25}},{"generated":{"line":1429,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":11}},{"generated":{"line":1429,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1434,"column":4}},{"generated":{"line":1430,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1435,"column":3}},{"generated":{"line":1430,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1432,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1437,"column":2}},{"name":"getCollection","generated":{"line":1443,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1448,"column":2}},{"name":"name","generated":{"line":1443,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1448,"column":17}},{"generated":{"line":1443,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1448,"column":2}},{"generated":{"line":1443,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1448,"column":23}},{"generated":{"line":1444,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":4}},{"name":"collection","generated":{"line":1444,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":10}},{"generated":{"line":1444,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":23}},{"name":"_collections","generated":{"line":1444,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":28}},{"generated":{"line":1444,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":23}},{"name":"name","generated":{"line":1444,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":41}},{"generated":{"line":1444,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":23}},{"generated":{"line":1444,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1449,"column":4}},{"generated":{"line":1445,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1450,"column":4}},{"generated":{"line":1445,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1450,"column":8}},{"name":"collection","generated":{"line":1445,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1450,"column":9}},{"generated":{"line":1445,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1450,"column":4}},{"generated":{"line":1445,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1450,"column":21}},{"generated":{"line":1446,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":6}},{"name":"utils","generated":{"line":1446,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":12}},{"name":"err","generated":{"line":1446,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":18}},{"generated":{"line":1446,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":12}},{"generated":{"line":1446,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":23}},{"name":"DOMAIN","generated":{"line":1446,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":25}},{"generated":{"line":1446,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":32}},{"generated":{"line":1446,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":12}},{"name":"name","generated":{"line":1446,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":49}},{"generated":{"line":1446,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":12}},{"generated":{"line":1446,"column":65},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":55}},{"generated":{"line":1446,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":12}},{"generated":{"line":1446,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":60}},{"generated":{"line":1446,"column":82},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":12}},{"generated":{"line":1446,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1451,"column":6}},{"generated":{"line":1447,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1452,"column":5}},{"generated":{"line":1448,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1453,"column":4}},{"name":"collection","generated":{"line":1448,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1453,"column":11}},{"generated":{"line":1448,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1453,"column":4}},{"generated":{"line":1449,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1454,"column":3}},{"generated":{"line":1449,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1451,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1456,"column":2}},{"name":"hashQuery","generated":{"line":1466,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":2}},{"name":"name","generated":{"line":1466,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":13}},{"generated":{"line":1466,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":2}},{"name":"query","generated":{"line":1466,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":19}},{"generated":{"line":1466,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":2}},{"name":"opts","generated":{"line":1466,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":26}},{"generated":{"line":1466,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":2}},{"generated":{"line":1466,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1471,"column":32}},{"generated":{"line":1467,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":4}},{"name":"utils","generated":{"line":1467,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":11}},{"name":"toJson","generated":{"line":1467,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":17}},{"generated":{"line":1467,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":11}},{"name":"query","generated":{"line":1467,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":24}},{"generated":{"line":1467,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":33}},{"generated":{"line":1467,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":11}},{"generated":{"line":1467,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1472,"column":4}},{"generated":{"line":1468,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1473,"column":3}},{"generated":{"line":1468,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"name":"inject","generated":{"line":1470,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":2}},{"name":"name","generated":{"line":1470,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":10}},{"generated":{"line":1470,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":2}},{"name":"records","generated":{"line":1470,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":16}},{"generated":{"line":1470,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":2}},{"name":"opts","generated":{"line":1470,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":25}},{"generated":{"line":1470,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":2}},{"generated":{"line":1470,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1475,"column":31}},{"name":"console","generated":{"line":1471,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1476,"column":4}},{"name":"warn","generated":{"line":1471,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1476,"column":12}},{"generated":{"line":1471,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1476,"column":4}},{"generated":{"line":1471,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1476,"column":17}},{"generated":{"line":1471,"column":72},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1476,"column":4}},{"generated":{"line":1472,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":4}},{"generated":{"line":1472,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":11}},{"name":"add","generated":{"line":1472,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":16}},{"generated":{"line":1472,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":11}},{"name":"name","generated":{"line":1472,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":20}},{"generated":{"line":1472,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":11}},{"name":"records","generated":{"line":1472,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":26}},{"generated":{"line":1472,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":11}},{"name":"opts","generated":{"line":1472,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":35}},{"generated":{"line":1472,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":11}},{"generated":{"line":1472,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1477,"column":4}},{"generated":{"line":1473,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1478,"column":3}},{"generated":{"line":1473,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1475,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1480,"column":2}},{"name":"remove","generated":{"line":1504,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":2}},{"name":"name","generated":{"line":1504,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":10}},{"generated":{"line":1504,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":2}},{"name":"id","generated":{"line":1504,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":16}},{"generated":{"line":1504,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":2}},{"name":"opts","generated":{"line":1504,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":20}},{"generated":{"line":1504,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":2}},{"generated":{"line":1504,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1509,"column":26}},{"generated":{"line":1505,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":4}},{"name":"record","generated":{"line":1505,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":10}},{"generated":{"line":1505,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":19}},{"name":"getCollection","generated":{"line":1505,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":24}},{"generated":{"line":1505,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":19}},{"name":"name","generated":{"line":1505,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":38}},{"generated":{"line":1505,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":19}},{"name":"remove","generated":{"line":1505,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":44}},{"generated":{"line":1505,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":19}},{"name":"id","generated":{"line":1505,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":51}},{"generated":{"line":1505,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":19}},{"name":"opts","generated":{"line":1505,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":55}},{"generated":{"line":1505,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":19}},{"generated":{"line":1505,"column":60},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1510,"column":4}},{"generated":{"line":1506,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1511,"column":4}},{"name":"record","generated":{"line":1506,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1511,"column":8}},{"generated":{"line":1506,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1511,"column":4}},{"generated":{"line":1506,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1511,"column":16}},{"generated":{"line":1507,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":6}},{"name":"removeRelated","generated":{"line":1507,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":11}},{"generated":{"line":1507,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":6}},{"name":"name","generated":{"line":1507,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":25}},{"generated":{"line":1507,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":6}},{"generated":{"line":1507,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":31}},{"name":"record","generated":{"line":1507,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":32}},{"generated":{"line":1507,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":31}},{"generated":{"line":1507,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":6}},{"name":"opts","generated":{"line":1507,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":41}},{"generated":{"line":1507,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1512,"column":6}},{"generated":{"line":1508,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1513,"column":5}},{"generated":{"line":1509,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1514,"column":4}},{"name":"record","generated":{"line":1509,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1514,"column":11}},{"generated":{"line":1509,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1514,"column":4}},{"generated":{"line":1510,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1515,"column":3}},{"generated":{"line":1510,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1512,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1517,"column":2}},{"name":"removeAll","generated":{"line":1545,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":2}},{"name":"name","generated":{"line":1545,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":13}},{"generated":{"line":1545,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":2}},{"name":"query","generated":{"line":1545,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":19}},{"generated":{"line":1545,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":2}},{"name":"opts","generated":{"line":1545,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":26}},{"generated":{"line":1545,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":2}},{"generated":{"line":1545,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1550,"column":32}},{"generated":{"line":1546,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":4}},{"generated":{"line":1546,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":8}},{"name":"query","generated":{"line":1546,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":9}},{"generated":{"line":1546,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":8}},{"generated":{"line":1546,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":18}},{"name":"Object","generated":{"line":1546,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":19}},{"name":"keys","generated":{"line":1546,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":26}},{"generated":{"line":1546,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":19}},{"name":"query","generated":{"line":1546,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":31}},{"generated":{"line":1546,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":19}},{"name":"length","generated":{"line":1546,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":38}},{"generated":{"line":1546,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":4}},{"generated":{"line":1546,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":46}},{"generated":{"line":1547,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":6}},{"name":"_completedQueries","generated":{"line":1547,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":11}},{"generated":{"line":1547,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":6}},{"name":"name","generated":{"line":1547,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":29}},{"generated":{"line":1547,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":6}},{"generated":{"line":1547,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":37}},{"generated":{"line":1547,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1552,"column":6}},{"generated":{"line":1548,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1553,"column":5}},{"generated":{"line":1548,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1551,"column":4}},{"generated":{"line":1548,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1553,"column":11}},{"generated":{"line":1549,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":6}},{"name":"_completedQueries","generated":{"line":1549,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":11}},{"generated":{"line":1549,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":6}},{"name":"name","generated":{"line":1549,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":29}},{"generated":{"line":1549,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":6}},{"generated":{"line":1549,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":35}},{"name":"hashQuery","generated":{"line":1549,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":40}},{"generated":{"line":1549,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":35}},{"name":"name","generated":{"line":1549,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":50}},{"generated":{"line":1549,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":35}},{"name":"query","generated":{"line":1549,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":56}},{"generated":{"line":1549,"column":61},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":35}},{"name":"opts","generated":{"line":1549,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":63}},{"generated":{"line":1549,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":35}},{"generated":{"line":1549,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":6}},{"name":"undefined","generated":{"line":1549,"column":72},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":72}},{"generated":{"line":1549,"column":81},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1554,"column":6}},{"generated":{"line":1550,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1555,"column":5}},{"generated":{"line":1551,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":4}},{"name":"records","generated":{"line":1551,"column":10},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":10}},{"generated":{"line":1551,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":20}},{"name":"getCollection","generated":{"line":1551,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":25}},{"generated":{"line":1551,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":20}},{"name":"name","generated":{"line":1551,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":39}},{"generated":{"line":1551,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":20}},{"name":"removeAll","generated":{"line":1551,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":45}},{"generated":{"line":1551,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":20}},{"name":"query","generated":{"line":1551,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":55}},{"generated":{"line":1551,"column":60},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":20}},{"name":"opts","generated":{"line":1551,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":62}},{"generated":{"line":1551,"column":66},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":20}},{"generated":{"line":1551,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1556,"column":4}},{"generated":{"line":1552,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1557,"column":4}},{"name":"records","generated":{"line":1552,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1557,"column":8}},{"name":"length","generated":{"line":1552,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1557,"column":16}},{"generated":{"line":1552,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1557,"column":4}},{"generated":{"line":1552,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1557,"column":24}},{"generated":{"line":1553,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":6}},{"name":"removeRelated","generated":{"line":1553,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":11}},{"generated":{"line":1553,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":6}},{"name":"name","generated":{"line":1553,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":25}},{"generated":{"line":1553,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":6}},{"name":"records","generated":{"line":1553,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":31}},{"generated":{"line":1553,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":6}},{"name":"opts","generated":{"line":1553,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":40}},{"generated":{"line":1553,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1558,"column":6}},{"generated":{"line":1554,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1559,"column":5}},{"generated":{"line":1555,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1560,"column":4}},{"name":"records","generated":{"line":1555,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1560,"column":11}},{"generated":{"line":1555,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1560,"column":4}},{"generated":{"line":1556,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1561,"column":3}},{"generated":{"line":1556,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1558,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1563,"column":2}},{"name":"removeRelated","generated":{"line":1572,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":2}},{"name":"name","generated":{"line":1572,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":17}},{"generated":{"line":1572,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":2}},{"name":"records","generated":{"line":1572,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":23}},{"generated":{"line":1572,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":2}},{"name":"opts","generated":{"line":1572,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":32}},{"generated":{"line":1572,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":2}},{"generated":{"line":1572,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1577,"column":38}},{"generated":{"line":1573,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":4}},{"generated":{"line":1573,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":8}},{"name":"utils","generated":{"line":1573,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":9}},{"name":"isArray","generated":{"line":1573,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":15}},{"generated":{"line":1573,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":9}},{"name":"records","generated":{"line":1573,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":23}},{"generated":{"line":1573,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":9}},{"generated":{"line":1573,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":4}},{"generated":{"line":1573,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1578,"column":33}},{"name":"records","generated":{"line":1574,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1579,"column":6}},{"generated":{"line":1574,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1579,"column":16}},{"name":"records","generated":{"line":1574,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1579,"column":17}},{"generated":{"line":1574,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1579,"column":16}},{"generated":{"line":1574,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1579,"column":6}},{"generated":{"line":1575,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1580,"column":5}},{"name":"utils","generated":{"line":1576,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":4}},{"name":"forEachRelation","generated":{"line":1576,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":10}},{"generated":{"line":1576,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":4}},{"generated":{"line":1576,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":26}},{"name":"getMapper","generated":{"line":1576,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":31}},{"generated":{"line":1576,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":26}},{"name":"name","generated":{"line":1576,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":41}},{"generated":{"line":1576,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":26}},{"generated":{"line":1576,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":4}},{"name":"opts","generated":{"line":1576,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":48}},{"generated":{"line":1576,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":4}},{"generated":{"line":1576,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":54}},{"name":"def","generated":{"line":1576,"column":65},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":55}},{"generated":{"line":1576,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":54}},{"name":"optsCopy","generated":{"line":1576,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":60}},{"generated":{"line":1576,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":54}},{"generated":{"line":1576,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":73}},{"name":"records","generated":{"line":1577,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":6}},{"name":"forEach","generated":{"line":1577,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":14}},{"generated":{"line":1577,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":6}},{"name":"record","generated":{"line":1577,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":23}},{"generated":{"line":1577,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":22}},{"generated":{"line":1577,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":34}},{"generated":{"line":1578,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1583,"column":8}},{"name":"relatedData","generated":{"line":1578,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1583,"column":12}},{"generated":{"line":1578,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1583,"column":8}},{"generated":{"line":1579,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1584,"column":8}},{"name":"query","generated":{"line":1579,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1584,"column":12}},{"generated":{"line":1579,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1584,"column":8}},{"generated":{"line":1580,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":8}},{"name":"def","generated":{"line":1580,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":12}},{"name":"foreignKey","generated":{"line":1580,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":16}},{"generated":{"line":1580,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":12}},{"name":"def","generated":{"line":1580,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":31}},{"name":"type","generated":{"line":1580,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":35}},{"generated":{"line":1580,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":31}},{"name":"hasOneType","generated":{"line":1580,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":44}},{"generated":{"line":1580,"column":66},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":31}},{"name":"def","generated":{"line":1580,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":58}},{"name":"type","generated":{"line":1580,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":62}},{"generated":{"line":1580,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":58}},{"name":"hasManyType","generated":{"line":1580,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":71}},{"generated":{"line":1580,"column":106},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":12}},{"generated":{"line":1580,"column":107},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":8}},{"generated":{"line":1580,"column":109},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":85}},{"name":"query","generated":{"line":1581,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":10}},{"generated":{"line":1581,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":18}},{"generated":{"line":1581,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":20}},{"name":"def","generated":{"line":1581,"column":21},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":21}},{"name":"foreignKey","generated":{"line":1581,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":25}},{"generated":{"line":1581,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":20}},{"name":"def","generated":{"line":1581,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":38}},{"name":"getForeignKey","generated":{"line":1581,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":42}},{"generated":{"line":1581,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":38}},{"name":"record","generated":{"line":1581,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":56}},{"generated":{"line":1581,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":38}},{"generated":{"line":1581,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":18}},{"generated":{"line":1581,"column":65},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1586,"column":10}},{"generated":{"line":1582,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":9}},{"generated":{"line":1582,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1585,"column":8}},{"generated":{"line":1582,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":15}},{"name":"def","generated":{"line":1582,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":19}},{"name":"type","generated":{"line":1582,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":23}},{"generated":{"line":1582,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":19}},{"name":"hasManyType","generated":{"line":1582,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":32}},{"generated":{"line":1582,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":19}},{"name":"def","generated":{"line":1582,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":47}},{"name":"localKeys","generated":{"line":1582,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":51}},{"generated":{"line":1582,"column":72},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":15}},{"generated":{"line":1582,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":62}},{"name":"query","generated":{"line":1583,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1588,"column":10}},{"generated":{"line":1583,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1588,"column":18}},{"name":"where","generated":{"line":1584,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1589,"column":12}},{"generated":{"line":1584,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1589,"column":19}},{"generated":{"line":1585,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":14}},{"name":"def","generated":{"line":1585,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":15}},{"name":"getRelation","generated":{"line":1585,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":19}},{"generated":{"line":1585,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":15}},{"name":"idAttribute","generated":{"line":1585,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":33}},{"generated":{"line":1585,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":14}},{"generated":{"line":1585,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":47}},{"generated":{"line":1586,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":16}},{"name":"utils","generated":{"line":1586,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":22}},{"name":"get","generated":{"line":1586,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":28}},{"generated":{"line":1586,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":22}},{"name":"record","generated":{"line":1586,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":32}},{"generated":{"line":1586,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":22}},{"name":"def","generated":{"line":1586,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":40}},{"name":"localKeys","generated":{"line":1586,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":44}},{"generated":{"line":1586,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1591,"column":22}},{"generated":{"line":1587,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1590,"column":47}},{"generated":{"line":1588,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1589,"column":19}},{"generated":{"line":1589,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1588,"column":18}},{"generated":{"line":1589,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1588,"column":10}},{"generated":{"line":1590,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":9}},{"generated":{"line":1590,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1587,"column":15}},{"generated":{"line":1590,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":15}},{"name":"def","generated":{"line":1590,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":19}},{"name":"type","generated":{"line":1590,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":23}},{"generated":{"line":1590,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":19}},{"name":"hasManyType","generated":{"line":1590,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":32}},{"generated":{"line":1590,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":19}},{"name":"def","generated":{"line":1590,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":47}},{"name":"foreignKeys","generated":{"line":1590,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":51}},{"generated":{"line":1590,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":15}},{"generated":{"line":1590,"column":76},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":64}},{"name":"query","generated":{"line":1591,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1596,"column":10}},{"generated":{"line":1591,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1596,"column":18}},{"name":"where","generated":{"line":1592,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1597,"column":12}},{"generated":{"line":1592,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1597,"column":19}},{"generated":{"line":1593,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1598,"column":14}},{"name":"def","generated":{"line":1593,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1598,"column":15}},{"name":"foreignKeys","generated":{"line":1593,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1598,"column":19}},{"generated":{"line":1593,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1598,"column":14}},{"generated":{"line":1593,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1598,"column":33}},{"generated":{"line":1594,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1599,"column":16}},{"name":"def","generated":{"line":1594,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1599,"column":28}},{"name":"getForeignKey","generated":{"line":1594,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1599,"column":32}},{"generated":{"line":1594,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1599,"column":28}},{"name":"record","generated":{"line":1594,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1599,"column":46}},{"generated":{"line":1594,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1599,"column":28}},{"generated":{"line":1595,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1598,"column":33}},{"generated":{"line":1596,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1597,"column":19}},{"generated":{"line":1597,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1596,"column":18}},{"generated":{"line":1597,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1596,"column":10}},{"generated":{"line":1598,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":9}},{"generated":{"line":1598,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1595,"column":15}},{"generated":{"line":1598,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":15}},{"name":"def","generated":{"line":1598,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":19}},{"name":"type","generated":{"line":1598,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":23}},{"generated":{"line":1598,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":19}},{"name":"belongsToType","generated":{"line":1598,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":32}},{"generated":{"line":1598,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":15}},{"generated":{"line":1598,"column":59},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1603,"column":47}},{"name":"relatedData","generated":{"line":1599,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":10}},{"generated":{"line":1599,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":24}},{"name":"remove","generated":{"line":1599,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":29}},{"generated":{"line":1599,"column":35},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":24}},{"name":"def","generated":{"line":1599,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":36}},{"name":"relation","generated":{"line":1599,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":40}},{"generated":{"line":1599,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":24}},{"name":"def","generated":{"line":1599,"column":50},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":50}},{"name":"getForeignKey","generated":{"line":1599,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":54}},{"generated":{"line":1599,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":50}},{"name":"record","generated":{"line":1599,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":68}},{"generated":{"line":1599,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":50}},{"generated":{"line":1599,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":24}},{"name":"optsCopy","generated":{"line":1599,"column":77},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":77}},{"generated":{"line":1599,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":24}},{"generated":{"line":1599,"column":86},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1604,"column":10}},{"generated":{"line":1600,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1605,"column":9}},{"generated":{"line":1601,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1606,"column":8}},{"name":"query","generated":{"line":1601,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1606,"column":12}},{"generated":{"line":1601,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1606,"column":8}},{"generated":{"line":1601,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1606,"column":19}},{"name":"relatedData","generated":{"line":1602,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":10}},{"generated":{"line":1602,"column":24},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":24}},{"name":"removeAll","generated":{"line":1602,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":29}},{"generated":{"line":1602,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":24}},{"name":"def","generated":{"line":1602,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":39}},{"name":"relation","generated":{"line":1602,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":43}},{"generated":{"line":1602,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":24}},{"name":"query","generated":{"line":1602,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":53}},{"generated":{"line":1602,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":24}},{"name":"optsCopy","generated":{"line":1602,"column":60},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":60}},{"generated":{"line":1602,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":24}},{"generated":{"line":1602,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1607,"column":10}},{"generated":{"line":1603,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1608,"column":9}},{"generated":{"line":1604,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1609,"column":8}},{"name":"relatedData","generated":{"line":1604,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1609,"column":12}},{"generated":{"line":1604,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1609,"column":8}},{"generated":{"line":1604,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1609,"column":25}},{"generated":{"line":1605,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":10}},{"name":"utils","generated":{"line":1605,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":14}},{"name":"isArray","generated":{"line":1605,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":20}},{"generated":{"line":1605,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":14}},{"name":"relatedData","generated":{"line":1605,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":28}},{"generated":{"line":1605,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":14}},{"generated":{"line":1605,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":44}},{"name":"relatedData","generated":{"line":1605,"column":55},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":45}},{"name":"length","generated":{"line":1605,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":57}},{"generated":{"line":1605,"column":73},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":10}},{"generated":{"line":1605,"column":75},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1610,"column":65}},{"generated":{"line":1606,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1611,"column":12}},{"generated":{"line":1607,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1612,"column":11}},{"generated":{"line":1608,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":10}},{"name":"def","generated":{"line":1608,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":14}},{"name":"type","generated":{"line":1608,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":18}},{"generated":{"line":1608,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":14}},{"name":"hasOneType","generated":{"line":1608,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":27}},{"generated":{"line":1608,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":10}},{"generated":{"line":1608,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1613,"column":39}},{"name":"relatedData","generated":{"line":1609,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1614,"column":12}},{"name":"relatedData","generated":{"line":1609,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1614,"column":26}},{"generated":{"line":1609,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1614,"column":38}},{"generated":{"line":1609,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1614,"column":26}},{"generated":{"line":1609,"column":40},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1614,"column":12}},{"generated":{"line":1610,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1615,"column":11}},{"name":"def","generated":{"line":1611,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":10}},{"name":"setLocalField","generated":{"line":1611,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":14}},{"generated":{"line":1611,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":10}},{"name":"record","generated":{"line":1611,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":28}},{"generated":{"line":1611,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":10}},{"name":"relatedData","generated":{"line":1611,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":36}},{"generated":{"line":1611,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1616,"column":10}},{"generated":{"line":1612,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1617,"column":9}},{"generated":{"line":1613,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1618,"column":7}},{"generated":{"line":1613,"column":7},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1582,"column":6}},{"generated":{"line":1614,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1619,"column":5}},{"generated":{"line":1614,"column":5},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1581,"column":4}},{"generated":{"line":1615,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1620,"column":3}},{"generated":{"line":1615,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1617,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1622,"column":2}},{"generated":{"line":1625,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1630,"column":2}},{"generated":{"line":1643,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1648,"column":2}},{"generated":{"line":1651,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1656,"column":2}},{"generated":{"line":1670,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1675,"column":2}},{"name":"update","generated":{"line":1703,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":2}},{"name":"name","generated":{"line":1703,"column":9},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":10}},{"generated":{"line":1703,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":2}},{"name":"id","generated":{"line":1703,"column":15},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":16}},{"generated":{"line":1703,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":2}},{"name":"record","generated":{"line":1703,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":20}},{"generated":{"line":1703,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":2}},{"name":"opts","generated":{"line":1703,"column":27},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":28}},{"generated":{"line":1703,"column":31},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":2}},{"generated":{"line":1703,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1708,"column":34}},{"name":"opts","generated":{"line":1704,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1709,"column":4}},{"name":"opts","generated":{"line":1704,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1709,"column":13}},{"generated":{"line":1704,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1709,"column":20}},{"generated":{"line":1704,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1709,"column":4}},{"generated":{"line":1705,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":4}},{"name":"Container","generated":{"line":1705,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"prototype","generated":{"line":1705,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":21}},{"generated":{"line":1705,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"update","generated":{"line":1705,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":31}},{"generated":{"line":1705,"column":48},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"call","generated":{"line":1705,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":38}},{"generated":{"line":1705,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"generated":{"line":1705,"column":54},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":43}},{"generated":{"line":1705,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"name","generated":{"line":1705,"column":60},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":49}},{"generated":{"line":1705,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"id","generated":{"line":1705,"column":66},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":55}},{"generated":{"line":1705,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"record","generated":{"line":1705,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":59}},{"generated":{"line":1705,"column":76},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"opts","generated":{"line":1705,"column":78},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":67}},{"generated":{"line":1705,"column":82},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"then","generated":{"line":1705,"column":84},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":7}},{"generated":{"line":1705,"column":88},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"name":"result","generated":{"line":1705,"column":89},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":13}},{"generated":{"line":1705,"column":95},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":12}},{"generated":{"line":1705,"column":99},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":24}},{"name":"_end","generated":{"line":1705,"column":104},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":29}},{"generated":{"line":1705,"column":108},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":24}},{"name":"name","generated":{"line":1705,"column":109},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":34}},{"generated":{"line":1705,"column":113},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":24}},{"name":"result","generated":{"line":1705,"column":115},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":40}},{"generated":{"line":1705,"column":121},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":24}},{"name":"opts","generated":{"line":1705,"column":123},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":48}},{"generated":{"line":1705,"column":127},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1711,"column":24}},{"generated":{"line":1705,"column":128},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":11}},{"generated":{"line":1705,"column":129},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1710,"column":4}},{"generated":{"line":1706,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1712,"column":3}},{"generated":{"line":1706,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1708,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1714,"column":2}},{"generated":{"line":1716,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1722,"column":2}},{"generated":{"line":1734,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1740,"column":2}},{"generated":{"line":1742,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1748,"column":2}},{"generated":{"line":1761,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1767,"column":2}},{"name":"updateAll","generated":{"line":1794,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":2}},{"name":"name","generated":{"line":1794,"column":12},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":13}},{"generated":{"line":1794,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":2}},{"name":"props","generated":{"line":1794,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":19}},{"generated":{"line":1794,"column":23},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":2}},{"name":"query","generated":{"line":1794,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":26}},{"generated":{"line":1794,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":2}},{"name":"opts","generated":{"line":1794,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":33}},{"generated":{"line":1794,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":2}},{"generated":{"line":1794,"column":38},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1800,"column":39}},{"name":"opts","generated":{"line":1795,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1801,"column":4}},{"name":"opts","generated":{"line":1795,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1801,"column":13}},{"generated":{"line":1795,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1801,"column":20}},{"generated":{"line":1795,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1801,"column":4}},{"generated":{"line":1796,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":4}},{"name":"Container","generated":{"line":1796,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"prototype","generated":{"line":1796,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":21}},{"generated":{"line":1796,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"updateAll","generated":{"line":1796,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":31}},{"generated":{"line":1796,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"call","generated":{"line":1796,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":41}},{"generated":{"line":1796,"column":56},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"generated":{"line":1796,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":46}},{"generated":{"line":1796,"column":61},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"name","generated":{"line":1796,"column":63},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":52}},{"generated":{"line":1796,"column":67},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"props","generated":{"line":1796,"column":69},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":58}},{"generated":{"line":1796,"column":74},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"query","generated":{"line":1796,"column":76},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":65}},{"generated":{"line":1796,"column":81},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"opts","generated":{"line":1796,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":72}},{"generated":{"line":1796,"column":87},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"then","generated":{"line":1796,"column":89},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":7}},{"generated":{"line":1796,"column":93},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"name":"result","generated":{"line":1796,"column":94},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":13}},{"generated":{"line":1796,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":12}},{"generated":{"line":1796,"column":104},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":24}},{"name":"_end","generated":{"line":1796,"column":109},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":29}},{"generated":{"line":1796,"column":113},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":24}},{"name":"name","generated":{"line":1796,"column":114},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":34}},{"generated":{"line":1796,"column":118},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":24}},{"name":"result","generated":{"line":1796,"column":120},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":40}},{"generated":{"line":1796,"column":126},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":24}},{"name":"opts","generated":{"line":1796,"column":128},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":48}},{"generated":{"line":1796,"column":132},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1803,"column":24}},{"generated":{"line":1796,"column":133},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":11}},{"generated":{"line":1796,"column":134},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1802,"column":4}},{"generated":{"line":1797,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1804,"column":3}},{"generated":{"line":1797,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1799,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1806,"column":2}},{"generated":{"line":1807,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1814,"column":2}},{"generated":{"line":1824,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1831,"column":2}},{"generated":{"line":1832,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1839,"column":2}},{"generated":{"line":1850,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1857,"column":2}},{"name":"updateMany","generated":{"line":1885,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":2}},{"name":"name","generated":{"line":1885,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":14}},{"generated":{"line":1885,"column":17},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":2}},{"name":"records","generated":{"line":1885,"column":19},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":20}},{"generated":{"line":1885,"column":26},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":2}},{"name":"opts","generated":{"line":1885,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":29}},{"generated":{"line":1885,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":2}},{"generated":{"line":1885,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1892,"column":35}},{"name":"opts","generated":{"line":1886,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1893,"column":4}},{"name":"opts","generated":{"line":1886,"column":13},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1893,"column":13}},{"generated":{"line":1886,"column":20},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1893,"column":20}},{"generated":{"line":1886,"column":22},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1893,"column":4}},{"generated":{"line":1887,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":4}},{"name":"Container","generated":{"line":1887,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"prototype","generated":{"line":1887,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":21}},{"generated":{"line":1887,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"updateMany","generated":{"line":1887,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":31}},{"generated":{"line":1887,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"call","generated":{"line":1887,"column":53},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":42}},{"generated":{"line":1887,"column":57},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"generated":{"line":1887,"column":58},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":47}},{"generated":{"line":1887,"column":62},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"name","generated":{"line":1887,"column":64},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":53}},{"generated":{"line":1887,"column":68},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"records","generated":{"line":1887,"column":70},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":59}},{"generated":{"line":1887,"column":77},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"opts","generated":{"line":1887,"column":79},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":68}},{"generated":{"line":1887,"column":83},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"then","generated":{"line":1887,"column":85},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":7}},{"generated":{"line":1887,"column":89},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"name":"result","generated":{"line":1887,"column":90},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":13}},{"generated":{"line":1887,"column":96},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":12}},{"generated":{"line":1887,"column":100},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":24}},{"name":"_end","generated":{"line":1887,"column":105},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":29}},{"generated":{"line":1887,"column":109},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":24}},{"name":"name","generated":{"line":1887,"column":110},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":34}},{"generated":{"line":1887,"column":114},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":24}},{"name":"result","generated":{"line":1887,"column":116},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":40}},{"generated":{"line":1887,"column":122},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":24}},{"name":"opts","generated":{"line":1887,"column":124},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":48}},{"generated":{"line":1887,"column":128},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1895,"column":24}},{"generated":{"line":1887,"column":129},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":11}},{"generated":{"line":1887,"column":130},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1894,"column":4}},{"generated":{"line":1888,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1896,"column":3}},{"generated":{"line":1889,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":14}},{"generated":{"line":1889,"column":1},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":364,"column":0}},{"name":"proxiedCollectionMethods","generated":{"line":1891,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":0}},{"name":"forEach","generated":{"line":1891,"column":25},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":25}},{"generated":{"line":1891,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":0}},{"generated":{"line":1891,"column":33},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":33}},{"name":"method","generated":{"line":1891,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":43}},{"generated":{"line":1891,"column":49},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":33}},{"generated":{"line":1891,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":51}},{"name":"props","generated":{"line":1892,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":2}},{"name":"method","generated":{"line":1892,"column":8},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":8}},{"generated":{"line":1892,"column":14},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":2}},{"generated":{"line":1892,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":18}},{"name":"name","generated":{"line":1892,"column":28},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":28}},{"generated":{"line":1892,"column":32},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":18}},{"generated":{"line":1892,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":34}},{"name":"args","generated":{"line":1892,"column":37},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":37}},{"generated":{"line":1892,"column":41},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":18}},{"generated":{"line":1892,"column":43},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":43}},{"generated":{"line":1893,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":4}},{"generated":{"line":1893,"column":11},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":11}},{"name":"getCollection","generated":{"line":1893,"column":16},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":16}},{"generated":{"line":1893,"column":29},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":11}},{"name":"name","generated":{"line":1893,"column":30},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":30}},{"generated":{"line":1893,"column":34},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":11}},{"name":"method","generated":{"line":1893,"column":36},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":36}},{"generated":{"line":1893,"column":42},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":11}},{"generated":{"line":1893,"column":44},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":44}},{"name":"args","generated":{"line":1893,"column":47},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":47}},{"generated":{"line":1893,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":11}},{"generated":{"line":1893,"column":52},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1901,"column":4}},{"generated":{"line":1894,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1902,"column":3}},{"generated":{"line":1894,"column":3},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1900,"column":2}},{"generated":{"line":1895,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1903,"column":1}},{"generated":{"line":1895,"column":1},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1899,"column":0}},{"name":"Container","generated":{"line":1897,"column":18},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1905,"column":15}},{"name":"extend","generated":{"line":1897,"column":39},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1905,"column":25}},{"generated":{"line":1897,"column":45},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1905,"column":15}},{"name":"props","generated":{"line":1897,"column":46},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1905,"column":32}},{"generated":{"line":1897,"column":51},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1905,"column":15}},{"generated":{"line":1899,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1907,"column":0}},{"generated":{"line":1907,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1915,"column":0}},{"generated":{"line":1924,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1932,"column":0}},{"generated":{"line":1941,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1949,"column":0}},{"generated":{"line":1965,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1973,"column":0}},{"generated":{"line":1979,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":1987,"column":0}},{"generated":{"line":2000,"column":0},"source":"node_modules/@therms/models/js-data/SimpleStore.js","original":{"line":2008,"column":0}}],"sources":{"node_modules/@therms/models/js-data/SimpleStore.js":"import utils from './utils'\n\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport {proxiedMapperMethods, Container} from './Container'\nimport Collection from './Collection'\n\nconst DOMAIN = 'SimpleStore'\nconst proxiedCollectionMethods = [\n  /**\n   * Wrapper for {@link Collection#add}.\n   *\n   * @example <caption>SimpleStore#add</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('book');\n   *\n   * // Add one book to the in-memory store:\n   * store.add('book', { id: 1, title: 'Respect your Data' });\n   * // Add multiple books to the in-memory store:\n   * store.add('book', [\n   *   { id: 2, title: 'Easy data recipes' },\n   *   { id: 3, title: 'Active Record 101' }\n   * ]);\n   *\n   * @fires SimpleStore#add\n   * @method SimpleStore#add\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {(Object|Object[]|Record|Record[])} data See {@link Collection#add}.\n   * @param {object} [opts] Configuration options. See {@link Collection#add}.\n   * @returns {(Object|Object[]|Record|Record[])} See {@link Collection#add}.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  'add',\n\n  /**\n   * Wrapper for {@link Collection#between}.\n   *\n   * @example\n   * // Get all users ages 18 to 30\n   * const users = store.between('user', 18, 30, { index: 'age' });\n   *\n   * @example\n   * // Same as above\n   * const users = store.between('user', [18], [30], { index: 'age' });\n   *\n   * @method SimpleStore#between\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {array} leftKeys See {@link Collection#between}.\n   * @param {array} rightKeys See {@link Collection#between}.\n   * @param {object} [opts] Configuration options. See {@link Collection#between}.\n   * @returns {Object[]|Record[]} See {@link Collection#between}.\n   * @see Collection#between\n   * @see Collection#between\n   * @since 3.0.0\n   */\n  'between',\n\n  /**\n   * Wrapper for {@link Collection#createIndex}.\n   *\n   * @example\n   * // Index users by age\n   * store.createIndex('user', 'age');\n   *\n   * @example\n   * // Index users by status and role\n   * store.createIndex('user', 'statusAndRole', ['status', 'role']);\n   *\n   * @method SimpleStore#createIndex\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {string} name See {@link Collection#createIndex}.\n   * @param {string[]} [fieldList] See {@link Collection#createIndex}.\n   * @see Collection#createIndex\n   * @see Collection#createIndex\n   * @since 3.0.0\n   */\n  'createIndex',\n\n  /**\n   * Wrapper for {@link Collection#filter}.\n   *\n   * @example <caption>SimpleStore#filter</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('post');\n   * store.add('post', [\n   *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n   * ]);\n   *\n   * // Get the draft posts created less than three months ago\n   * let posts = store.filter('post', {\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 \\* 60 \\* 60 \\* 24 \\* 30 \\* 3)) // 3 months ago\n   *     }\n   *   }\n   * });\n   * console.log(posts);\n   *\n   * // Use a custom filter function\n   * posts = store.filter('post', function (post) { return post.id % 2 === 0 });\n   *\n   * @method SimpleStore#filter\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {(Object|Function)} [queryOrFn={}] See {@link Collection#filter}.\n   * @param {object} [thisArg] See {@link Collection#filter}.\n   * @returns {Array} See {@link Collection#filter}.\n   * @see Collection#filter\n   * @see Collection#filter\n   * @since 3.0.0\n   */\n  'filter',\n\n  /**\n   * Wrapper for {@link Collection#get}.\n   *\n   * @example <caption>SimpleStore#get</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('post');\n   * store.add('post', [\n   *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n   * ]);\n   *\n   * console.log(store.get('post', 1)); // {...}\n   * console.log(store.get('post', 2)); // undefined\n   *\n   * @method SimpleStore#get\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Collection#get}.\n   * @returns {(Object|Record)} See {@link Collection#get}.\n   * @see Collection#get\n   * @see Collection#get\n   * @since 3.0.0\n   */\n  'get',\n\n  /**\n   * Wrapper for {@link Collection#getAll}.\n   *\n   * @example\n   * // Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * const posts = store.getAll('post', 'draft', 'inReview', { index: 'status' });\n   *\n   * @example\n   * // Same as above\n   * const posts = store.getAll('post', ['draft'], ['inReview'], { index: 'status' });\n   *\n   * @method SimpleStore#getAll\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {...Array} [keyList] See {@link Collection#getAll}.\n   * @param {object} [opts] See {@link Collection#getAll}.\n   * @returns {Array} See {@link Collection#getAll}.\n   * @see Collection#getAll\n   * @see Collection#getAll\n   * @since 3.0.0\n   */\n  'getAll',\n\n  /**\n   * Wrapper for {@link Collection#prune}.\n   *\n   * @method SimpleStore#prune\n   * @param {object} [opts] See {@link Collection#prune}.\n   * @returns {Array} See {@link Collection#prune}.\n   * @see Collection#prune\n   * @see Collection#prune\n   * @since 3.0.0\n   */\n  'prune',\n\n  /**\n   * Wrapper for {@link Collection#query}.\n   *\n   * @example\n   * // Grab page 2 of users between ages 18 and 30\n   * store.query('user')\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run();\n   *\n   * @method SimpleStore#query\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @returns {Query} See {@link Collection#query}.\n   * @see Collection#query\n   * @see Collection#query\n   * @since 3.0.0\n   */\n  'query',\n\n  /**\n   * Wrapper for {@link Collection#toJSON}.\n   *\n   * @example\n   * store.defineMapper('post', {\n   *   schema: {\n   *     properties: {\n   *       id: { type: 'number' },\n   *       title: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * store.add('post', [\n   *   { id: 1, status: 'published', title: 'Respect your Data' },\n   *   { id: 2, status: 'draft', title: 'Connecting to a data source' }\n   * ]);\n   * console.log(store.toJSON('post'));\n   * const draftsJSON = store.query('post')\n   *   .filter({ status: 'draft' })\n   *   .mapCall('toJSON')\n   *   .run();\n   *\n   * @method SimpleStore#toJSON\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {object} [opts] See {@link Collection#toJSON}.\n   * @returns {Array} See {@link Collection#toJSON}.\n   * @see Collection#toJSON\n   * @see Collection#toJSON\n   * @since 3.0.0\n   */\n  'toJSON',\n\n  /**\n   * Wrapper for {@link Collection#unsaved}.\n   *\n   * @method SimpleStore#unsaved\n   * @returns {Array} See {@link Collection#unsaved}.\n   * @see Collection#unsaved\n   * @see Collection#unsaved\n   * @since 3.0.0\n   */\n  'unsaved'\n]\nconst ownMethodsForScoping = [\n  'addToCache',\n  'cachedFind',\n  'cachedFindAll',\n  'cacheFind',\n  'cacheFindAll',\n  'hashQuery'\n]\n\nconst cachedFn = function (name, hashOrId, opts) {\n  const cached = this._completedQueries[name][hashOrId]\n  if (utils.isFunction(cached)) {\n    return cached(name, hashOrId, opts)\n  }\n  return cached\n}\n\nconst SIMPLESTORE_DEFAULTS = {\n  /**\n   * Whether to use the pending query if a `find` request for the specified\n   * record is currently underway. Can be set to `true`, `false`, or to a\n   * function that returns `true` or `false`.\n   *\n   * @default true\n   * @name SimpleStore#usePendingFind\n   * @since 3.0.0\n   * @type {boolean|Function}\n   */\n  usePendingFind: true,\n\n  /**\n   * Whether to use the pending query if a `findAll` request for the given query\n   * is currently underway. Can be set to `true`, `false`, or to a function that\n   * returns `true` or `false`.\n   *\n   * @default true\n   * @name SimpleStore#usePendingFindAll\n   * @since 3.0.0\n   * @type {boolean|Function}\n   */\n  usePendingFindAll: true\n}\n\n/**\n * The `SimpleStore` class is an extension of {@link Container}. Not only does\n * `SimpleStore` manage mappers, but also collections. `SimpleStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `SimpleStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `SimpleStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import { SimpleStore } from 'js-data';\n * ```\n *\n * @example\n * import { SimpleStore } from 'js-data';\n * import { HttpAdapter } from 'js-data-http';\n * const store = new SimpleStore();\n *\n * // SimpleStore#defineMapper returns a direct reference to the newly created\n * // Mapper.\n * const UserMapper = store.defineMapper('user');\n *\n * // SimpleStore#as returns the store scoped to a particular Mapper.\n * const UserStore = store.as('user');\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then((user) => {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" targeting \"user\" (Stateful SimpleStore)\n *   return store.find('user', 1); // same as \"UserStore.find(1)\"\n * }).then((user) => {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1);\n *   console.log(user === cachedUser); // true\n * });\n *\n * @class SimpleStore\n * @extends Container\n * @param {object} [opts] Configuration options. See {@link Container}.\n * @param {boolean} [opts.collectionClass={@link Collection}] See {@link SimpleStore#collectionClass}.\n * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n * @param {boolean|Function} [opts.usePendingFind=true] See {@link SimpleStore#usePendingFind}.\n * @param {boolean|Function} [opts.usePendingFindAll=true] See {@link SimpleStore#usePendingFindAll}.\n * @returns {SimpleStore}\n * @see Container\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#SimpleStore\",\"Components of JSData: SimpleStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/working-with-the-SimpleStore\",\"Working with the SimpleStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-the-browser\",\"Notes on using JSData in the Browser\"]\n */\nfunction SimpleStore (opts) {\n  utils.classCallCheck(this, SimpleStore)\n\n  opts || (opts = {})\n  // Fill in any missing options with the defaults\n  utils.fillIn(opts, SIMPLESTORE_DEFAULTS)\n  Container.call(this, opts)\n\n  this.collectionClass = this.collectionClass || Collection\n  this._collections = {}\n  this._pendingQueries = {}\n  this._completedQueries = {}\n}\n\nconst props = {\n  constructor: SimpleStore,\n\n  /**\n   * Internal method used to handle Mapper responses.\n   *\n   * @method SimpleStore#_end\n   * @private\n   * @param {string} name Name of the {@link Collection} to which to\n   * add the data.\n   * @param {object} result The result from a Mapper.\n   * @param {object} [opts] Configuration options.\n   * @returns {(Object|Array)} Result.\n   */\n  _end (name, result, opts) {\n    let data = opts.raw ? result.data : result\n    if (data && utils.isFunction(this.addToCache)) {\n      data = this.addToCache(name, data, opts)\n      if (opts.raw) {\n        result.data = data\n      } else {\n        result = data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Register a new event listener on this SimpleStore.\n   *\n   * Proxy for {@link Container#on}. If an event was emitted by a Mapper or\n   * Collection in the SimpleStore, then the name of the Mapper or Collection will\n   * be prepended to the arugments passed to the provided event handler.\n   *\n   * @example\n   * // Listen for all \"afterCreate\" events in a SimpleStore\n   * store.on('afterCreate', (mapperName, props, opts, result) => {\n   *   console.log(mapperName); // \"post\"\n   *   console.log(props.id); // undefined\n   *   console.log(result.id); // 1234\n   * });\n   * store.create('post', { title: 'Modeling your data' }).then((post) => {\n   *   console.log(post.id); // 1234\n   * });\n   *\n   * @example\n   * // Listen for the \"add\" event on a collection\n   * store.on('add', (mapperName, records) => {\n   *   console.log(records); // [...]\n   * });\n   *\n   * @example\n   * // Listen for \"change\" events on a record\n   * store.on('change', (mapperName, record, changes) => {\n   *   console.log(changes); // { changed: { title: 'Modeling your data' } }\n   * });\n   * post.title = 'Modeling your data';\n   *\n   * @method SimpleStore#on\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   */\n\n  /**\n   * Used to bind to events emitted by collections in this store.\n   *\n   * @method SimpleStore#_onCollectionEvent\n   * @private\n   * @param {string} name Name of the collection that emitted the event.\n   * @param {...*} [args] Args passed to {@link Collection#emit}.\n   */\n  _onCollectionEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * This method takes the data received from {@link SimpleStore#find},\n   * {@link SimpleStore#findAll}, {@link SimpleStore#update}, etc., and adds the\n   * data to the store. _You don't need to call this method directly._\n   *\n   * If you're using the http adapter and your response data is in an unexpected\n   * format, you may need to override this method so the right data gets added\n   * to the store.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   addToCache (mapperName, data, opts) {\n   *     // Let's say for a particular Resource, response data is in a weird format\n   *     if (name === 'comment') {\n   *       // Re-assign the variable to add the correct records into the stores\n   *       data = data.items;\n   *     }\n   *     // Now perform default behavior\n   *     return SimpleStore.prototype.addToCache.call(this, mapperName, data, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   addToCache (mapperName, data, opts) {\n   *     // Let's say for a particular Resource, response data is in a weird format\n   *     if (name === 'comment') {\n   *       // Re-assign the variable to add the correct records into the stores\n   *       data = data.items;\n   *     }\n   *     // Now perform default behavior\n   *     return super.addToCache(mapperName, data, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#addToCache\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {*} data Data from which data should be selected for add.\n   * @param {object} [opts] Configuration options.\n   */\n  addToCache (name, data, opts) {\n    return this.getCollection(name).add(data, opts)\n  },\n\n  /**\n   * Return the store scoped to a particular mapper/collection pair.\n   *\n   * @example <caption>SimpleStore.as</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * const UserMapper = store.defineMapper('user');\n   * const UserStore = store.as('user');\n   *\n   * const user1 = store.createRecord('user', { name: 'John' });\n   * const user2 = UserStore.createRecord({ name: 'John' });\n   * const user3 = UserMapper.createRecord({ name: 'John' });\n   * console.log(user1 === user2);\n   * console.log(user2 === user3);\n   * console.log(user1 === user3);\n   *\n   * @method SimpleStore#as\n   * @param {string} name Name of the {@link Mapper}.\n   * @returns {Object} The store, scoped to a particular Mapper/Collection pair.\n   * @since 3.0.0\n   */\n  as (name) {\n    const props = {}\n    const original = this\n    const methods = ownMethodsForScoping\n      .concat(proxiedMapperMethods)\n      .concat(proxiedCollectionMethods)\n\n    methods.forEach(function (method) {\n      props[method] = {\n        writable: true,\n        value (...args) {\n          return original[method](name, ...args)\n        }\n      }\n    })\n    props.getMapper = {\n      writable: true,\n      value () {\n        return original.getMapper(name)\n      }\n    }\n    props.getCollection = {\n      writable: true,\n      value () {\n        return original.getCollection(name)\n      }\n    }\n    return Object.create(this, props)\n  },\n\n  /**\n   * Retrieve a cached `find` result, if any. This method is called during\n   * {@link SimpleStore#find} to determine if {@link Mapper#find} needs to be\n   * called. If this method returns `undefined` then {@link Mapper#find} will\n   * be called. Otherwise {@link SimpleStore#find} will immediately resolve with\n   * the return value of this method.\n   *\n   * When using {@link SimpleStore} in the browser, you can override this method\n   * to implement your own cache-busting strategy.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFind (mapperName, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#find call\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cachedFind.call(this, mapperName, id, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFind (mapperName, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#find call\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cachedFind(mapperName, id, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cachedFind\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}.\n   * @param {(string|number)} id The `id` argument passed to {@link SimpleStore#find}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#find}.\n   * @since 3.0.0\n   */\n  cachedFind: cachedFn,\n\n  /**\n   * Retrieve a cached `findAll` result, if any. This method is called during\n   * {@link SimpleStore#findAll} to determine if {@link Mapper#findAll} needs to be\n   * called. If this method returns `undefined` then {@link Mapper#findAll} will\n   * be called. Otherwise {@link SimpleStore#findAll} will immediately resolve with\n   * the return value of this method.\n   *\n   * When using {@link SimpleStore} in the browser, you can override this method\n   * to implement your own cache-busting strategy.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFindAll (mapperName, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#findAll call\n   *       return undefined;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cachedFindAll.call(this, mapperName, hash, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFindAll (mapperName, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#findAll call\n   *       return undefined;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cachedFindAll(mapperName, hash, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cachedFindAll\n   * @param {string} name The `name` argument passed to {@link SimpleStore#findAll}.\n   * @param {string} hash The result of calling {@link SimpleStore#hashQuery} on\n   * the `query` argument passed to {@link SimpleStore#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#findAll}.\n   * @since 3.0.0\n   */\n  cachedFindAll: cachedFn,\n\n  /**\n   * Mark a {@link Mapper#find} result as cached by adding an entry to\n   * {@link SimpleStore#_completedQueries}. By default, once a `find` entry is\n   * added it means subsequent calls to the same Resource with the same `id`\n   * argument will immediately resolve with the result of calling\n   * {@link SimpleStore#get} instead of delegating to {@link Mapper#find}.\n   *\n   * As part of implementing your own caching strategy, you may choose to\n   * override this method.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cacheFind (mapperName, data, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cacheFind.call(this, mapperName, data, id, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cacheFind (mapperName, data, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cacheFind(mapperName, data, id, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cacheFind\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}.\n   * @param {*} data The result to cache.\n   * @param {(string|number)} id The `id` argument passed to {@link SimpleStore#find}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#find}.\n   * @since 3.0.0\n   */\n  cacheFind (name, data, id, opts) {\n    this._completedQueries[name][id] = (name, id, opts) => this.get(name, id)\n  },\n\n  /**\n   * Mark a {@link Mapper#findAll} result as cached by adding an entry to\n   * {@link SimpleStore#_completedQueries}. By default, once a `findAll` entry is\n   * added it means subsequent calls to the same Resource with the same `query`\n   * argument will immediately resolve with the result of calling\n   * {@link SimpleStore#filter} instead of delegating to {@link Mapper#findAll}.\n   *\n   * As part of implementing your own caching strategy, you may choose to\n   * override this method.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFindAll (mapperName, data, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior.\n   *     return SimpleStore.prototype.cachedFindAll.call(this, mapperName, data, hash, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFindAll (mapperName, data, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior.\n   *     return super.cachedFindAll(mapperName, data, hash, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cacheFindAll\n   * @param {string} name The `name` argument passed to {@link SimpleStore#findAll}.\n   * @param {*} data The result to cache.\n   * @param {string} hash The result of calling {@link SimpleStore#hashQuery} on\n   * the `query` argument passed to {@link SimpleStore#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#findAll}.\n   * @since 3.0.0\n   */\n  cacheFindAll (name, data, hash, opts) {\n    this._completedQueries[name][hash] = (name, hash, opts) => this.filter(name, utils.fromJson(hash))\n  },\n\n  /**\n   * Remove __all__ records from the in-memory store and reset\n   * {@link SimpleStore#_completedQueries}.\n   *\n   * @method SimpleStore#clear\n   * @returns {Object} Object containing all records that were in the store.\n   * @see SimpleStore#remove\n   * @see SimpleStore#removeAll\n   * @since 3.0.0\n   */\n  clear () {\n    const removed = {}\n    utils.forOwn(this._collections, (collection, name) => {\n      removed[name] = collection.removeAll()\n      this._completedQueries[name] = {}\n    })\n    return removed\n  },\n\n  /**\n   * Fired during {@link SimpleStore#create}. See\n   * {@link SimpleStore~beforeCreateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeCreate\n   * @see SimpleStore~beforeCreateListener\n   * @see SimpleStore#create\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeCreate} event.\n   *\n   * @example\n   * function onBeforeCreate (mapperName, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreate', onBeforeCreate);\n   *\n   * @callback SimpleStore~beforeCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreate}.\n   * @see SimpleStore#event:beforeCreate\n   * @see SimpleStore#create\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#create}. See\n   * {@link SimpleStore~afterCreateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterCreate\n   * @see SimpleStore~afterCreateListener\n   * @see SimpleStore#create\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterCreate} event.\n   *\n   * @example\n   * function onAfterCreate (mapperName, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreate', onAfterCreate);\n   *\n   * @callback SimpleStore~afterCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreate}.\n   * @see SimpleStore#event:afterCreate\n   * @see SimpleStore#create\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#create}. Adds the created record to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   POST /book {\"author_id\":1234,...}\n   * store.create('book', {\n   *   author_id: 1234,\n   *   edition: 'First Edition',\n   *   title: 'Respect your Data'\n   * }).then((book) => {\n   *   console.log(book.id); // 120392\n   *   console.log(book.title); // \"Respect your Data\"\n   * });\n   *\n   * @fires SimpleStore#beforeCreate\n   * @fires SimpleStore#afterCreate\n   * @fires SimpleStore#add\n   * @method SimpleStore#create\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} record Passed to {@link Mapper#create}.\n   * @param {object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @returns {Promise} Resolves with the result of the create.\n   * @since 3.0.0\n   */\n  create (name, record, opts) {\n    opts || (opts = {})\n    return Container.prototype.create.call(this, name, record, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  /**\n   * Fired during {@link SimpleStore#createMany}. See\n   * {@link SimpleStore~beforeCreateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeCreateMany\n   * @see SimpleStore~beforeCreateManyListener\n   * @see SimpleStore#createMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeCreateMany} event.\n   *\n   * @example\n   * function onBeforeCreateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreateMany', onBeforeCreateMany);\n   *\n   * @callback SimpleStore~beforeCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreateMany}.\n   * @see SimpleStore#event:beforeCreateMany\n   * @see SimpleStore#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#createMany}. See\n   * {@link SimpleStore~afterCreateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterCreateMany\n   * @see SimpleStore~afterCreateManyListener\n   * @see SimpleStore#createMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterCreateMany} event.\n   *\n   * @example\n   * function onAfterCreateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreateMany', onAfterCreateMany);\n   *\n   * @callback SimpleStore~afterCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreateMany}.\n   * @see SimpleStore#event:afterCreateMany\n   * @see SimpleStore#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#createMany}. Adds the created records to the\n   * store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   POST /book [{\"author_id\":1234,...},{...}]\n   * store.createMany('book', [{\n   *   author_id: 1234,\n   *   edition: 'First Edition',\n   *   title: 'Respect your Data'\n   * }, {\n   *   author_id: 1234,\n   *   edition: 'Second Edition',\n   *   title: 'Respect your Data'\n   * }]).then((books) => {\n   *   console.log(books[0].id); // 142394\n   *   console.log(books[0].title); // \"Respect your Data\"\n   * });\n   *\n   * @fires SimpleStore#beforeCreateMany\n   * @fires SimpleStore#afterCreateMany\n   * @fires SimpleStore#add\n   * @method SimpleStore#createMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {array} records Passed to {@link Mapper#createMany}.\n   * @param {object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @returns {Promise} Resolves with the result of the create.\n   * @since 3.0.0\n   */\n  createMany (name, records, opts) {\n    opts || (opts = {})\n    return Container.prototype.createMany.call(this, name, records, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  defineMapper (name, opts) {\n    const self = this\n    const mapper = Container.prototype.defineMapper.call(self, name, opts)\n    self._pendingQueries[name] = {}\n    self._completedQueries[name] = {}\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n\n    let collectionOpts = {\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this SimpleStore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    }\n\n    if (opts && ('onConflict' in opts)) {\n      collectionOpts.onConflict = opts.onConflict\n    }\n\n    // The SimpleStore uses a subclass of Collection that is \"SimpleStore-aware\"\n    const collection = self._collections[name] = new self.collectionClass(null, collectionOpts)  // eslint-disable-line\n\n    const schema = mapper.schema || {}\n    const properties = schema.properties || {}\n    // TODO: Make it possible index nested properties?\n    utils.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop)\n      }\n    })\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter (obj) {\n        return collection._added[collection.recordId(obj)]\n      }\n    })\n\n    collection.on('all', function (...args) {\n      self._onCollectionEvent(name, ...args)\n    })\n\n    return mapper\n  },\n\n  /**\n   * Fired during {@link SimpleStore#destroy}. See\n   * {@link SimpleStore~beforeDestroyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeDestroy\n   * @see SimpleStore~beforeDestroyListener\n   * @see SimpleStore#destroy\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeDestroy} event.\n   *\n   * @example\n   * function onBeforeDestroy (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroy', onBeforeDestroy);\n   *\n   * @callback SimpleStore~beforeDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroy}.\n   * @see SimpleStore#event:beforeDestroy\n   * @see SimpleStore#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#destroy}. See\n   * {@link SimpleStore~afterDestroyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterDestroy\n   * @see SimpleStore~afterDestroyListener\n   * @see SimpleStore#destroy\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterDestroy} event.\n   *\n   * @example\n   * function onAfterDestroy (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroy', onAfterDestroy);\n   *\n   * @callback SimpleStore~afterDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroy}.\n   * @see SimpleStore#event:afterDestroy\n   * @see SimpleStore#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroy}. Removes any destroyed record from the\n   * in-memory store. Clears out any {@link SimpleStore#_completedQueries} entries\n   * associated with the provided `id`.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * store.add('book', { id: 1234, title: 'Data Management is Hard' });\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   DELETE /book/1234\n   * store.destroy('book', 1234).then(() => {\n   *   // The book record is no longer in the in-memory store\n   *   console.log(store.get('book', 1234)); // undefined\n   *\n   *   return store.find('book', 1234);\n   * }).then((book) {\n   *   // The book was deleted from the database too\n   *   console.log(book); // undefined\n   * });\n   *\n   * @fires SimpleStore#beforeDestroy\n   * @fires SimpleStore#afterDestroy\n   * @fires SimpleStore#remove\n   * @method SimpleStore#destroy\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#destroy}.\n   * @param {object} [opts] Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @returns {Promise} Resolves when the destroy operation completes.\n   * @since 3.0.0\n   */\n  destroy (name, id, opts) {\n    opts || (opts = {})\n    return Container.prototype.destroy.call(this, name, id, opts).then((result) => {\n      const record = this.getCollection(name).remove(id, opts)\n\n      if (opts.raw) {\n        result.data = record\n      } else {\n        result = record\n      }\n      delete this._pendingQueries[name][id]\n      delete this._completedQueries[name][id]\n      return result\n    })\n  },\n\n  /**\n   * Fired during {@link SimpleStore#destroyAll}. See\n   * {@link SimpleStore~beforeDestroyAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeDestroyAll\n   * @see SimpleStore~beforeDestroyAllListener\n   * @see SimpleStore#destroyAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeDestroyAll} event.\n   *\n   * @example\n   * function onBeforeDestroyAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroyAll', onBeforeDestroyAll);\n   *\n   * @callback SimpleStore~beforeDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroyAll}.\n   * @see SimpleStore#event:beforeDestroyAll\n   * @see SimpleStore#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#destroyAll}. See\n   * {@link SimpleStore~afterDestroyAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterDestroyAll\n   * @see SimpleStore~afterDestroyAllListener\n   * @see SimpleStore#destroyAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterDestroyAll} event.\n   *\n   * @example\n   * function onAfterDestroyAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroyAll', onAfterDestroyAll);\n   *\n   * @callback SimpleStore~afterDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroyAll}.\n   * @see SimpleStore#event:afterDestroyAll\n   * @see SimpleStore#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroyAll}. Removes any destroyed records from\n   * the in-memory store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * store.add('book', { id: 1234, title: 'Data Management is Hard' });\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   DELETE /book/1234\n   * store.destroy('book', 1234).then(() => {\n   *   // The book record is gone from the in-memory store\n   *   console.log(store.get('book', 1234)); // undefined\n   *   return store.find('book', 1234);\n   * }).then((book) {\n   *   // The book was deleted from the database too\n   *   console.log(book); // undefined\n   * });\n   *\n   * @fires SimpleStore#beforeDestroyAll\n   * @fires SimpleStore#afterDestroyAll\n   * @fires SimpleStore#remove\n   * @method SimpleStore#destroyAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] Passed to {@link Mapper#destroyAll}.\n   * @param {object} [opts] Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @returns {Promise} Resolves when the delete completes.\n   * @since 3.0.0\n   */\n  destroyAll (name, query, opts) {\n    opts || (opts = {})\n    return Container.prototype.destroyAll.call(this, name, query, opts).then((result) => {\n      const records = this.getCollection(name).removeAll(query, opts)\n\n      if (opts.raw) {\n        result.data = records\n      } else {\n        result = records\n      }\n      const hash = this.hashQuery(name, query, opts)\n      delete this._pendingQueries[name][hash]\n      delete this._completedQueries[name][hash]\n      return result\n    })\n  },\n\n  eject (name, id, opts) {\n    console.warn('DEPRECATED: \"eject\" is deprecated, use \"remove\" instead')\n    return this.remove(name, id, opts)\n  },\n\n  ejectAll (name, query, opts) {\n    console.warn('DEPRECATED: \"ejectAll\" is deprecated, use \"removeAll\" instead')\n    return this.removeAll(name, query, opts)\n  },\n\n  /**\n   * Fired during {@link SimpleStore#find}. See\n   * {@link SimpleStore~beforeFindListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeFind\n   * @see SimpleStore~beforeFindListener\n   * @see SimpleStore#find\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeFind} event.\n   *\n   * @example\n   * function onBeforeFind (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFind', onBeforeFind);\n   *\n   * @callback SimpleStore~beforeFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFind}.\n   * @see SimpleStore#event:beforeFind\n   * @see SimpleStore#find\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#find}. See\n   * {@link SimpleStore~afterFindListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterFind\n   * @see SimpleStore~afterFindListener\n   * @see SimpleStore#find\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterFind} event.\n   *\n   * @example\n   * function onAfterFind (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFind', onAfterFind);\n   *\n   * @callback SimpleStore~afterFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFind}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFind}.\n   * @see SimpleStore#event:afterFind\n   * @see SimpleStore#find\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#find}. Adds any found record to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   GET /book/1234\n   * store.find('book', 1234).then((book) => {\n   *   // The book record is now in the in-memory store\n   *   console.log(store.get('book', 1234) === book); // true\n   * });\n   *\n   * @fires SimpleStore#beforeFind\n   * @fires SimpleStore#afterFind\n   * @fires SimpleStore#add\n   * @method SimpleStore#find\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#find}.\n   * @param {object} [opts] Passed to {@link Mapper#find}.\n   * @param {boolean} [opts.force] Bypass cacheFind\n   * @param {boolean|Function} [opts.usePendingFind] See {@link SimpleStore#usePendingFind}\n   * @returns {Promise} Resolves with the result, if any.\n   * @since 3.0.0\n   */\n  find (name, id, opts) {\n    opts || (opts = {})\n    const mapper = this.getMapper(name)\n    const pendingQuery = this._pendingQueries[name][id]\n    const usePendingFind = opts.usePendingFind === undefined ? this.usePendingFind : opts.usePendingFind\n    utils._(opts, mapper)\n\n    if (pendingQuery && (utils.isFunction(usePendingFind) ? usePendingFind.call(this, name, id, opts) : usePendingFind)) {\n      return pendingQuery\n    }\n    const item = this.cachedFind(name, id, opts)\n\n    if (opts.force || !item) {\n      const promise = this._pendingQueries[name][id] = Container.prototype.find.call(this, name, id, opts)\n      return promise\n        .then((result) => {\n          delete this._pendingQueries[name][id]\n          result = this._end(name, result, opts)\n          this.cacheFind(name, result, id, opts)\n          return result\n        }, (err) => {\n          delete this._pendingQueries[name][id]\n          return utils.reject(err)\n        })\n    }\n\n    return utils.resolve(item)\n  },\n\n  /**\n   * Fired during {@link SimpleStore#findAll}. See\n   * {@link SimpleStore~beforeFindAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeFindAll\n   * @see SimpleStore~beforeFindAllListener\n   * @see SimpleStore#findAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeFindAll} event.\n   *\n   * @example\n   * function onBeforeFindAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFindAll', onBeforeFindAll);\n   *\n   * @callback SimpleStore~beforeFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFindAll}.\n   * @see SimpleStore#event:beforeFindAll\n   * @see SimpleStore#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#findAll}. See\n   * {@link SimpleStore~afterFindAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterFindAll\n   * @see SimpleStore~afterFindAllListener\n   * @see SimpleStore#findAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterFindAll} event.\n   *\n   * @example\n   * function onAfterFindAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFindAll', onAfterFindAll);\n   *\n   * @callback SimpleStore~afterFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFindAll}.\n   * @see SimpleStore#event:afterFindAll\n   * @see SimpleStore#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#findAll}. Adds any found records to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('movie');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   GET /movie?rating=PG\n   * store.find('movie', { rating: 'PG' }).then((movies) => {\n   *   // The movie records are now in the in-memory store\n   *   console.log(store.filter('movie'));\n   * });\n   *\n   * @fires SimpleStore#beforeFindAll\n   * @fires SimpleStore#afterFindAll\n   * @fires SimpleStore#add\n   * @method SimpleStore#findAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] Passed to {@link Mapper.findAll}.\n   * @param {object} [opts] Passed to {@link Mapper.findAll}.\n   * @param {boolean} [opts.force] Bypass cacheFindAll\n   * @param {boolean|Function} [opts.usePendingFindAll] See {@link SimpleStore#usePendingFindAll}\n   * @returns {Promise} Resolves with the result, if any.\n   * @since 3.0.0\n   */\n  findAll (name, query, opts) {\n    opts || (opts = {})\n    const mapper = this.getMapper(name)\n    const hash = this.hashQuery(name, query, opts)\n    const pendingQuery = this._pendingQueries[name][hash]\n    const usePendingFindAll = opts.usePendingFindAll === undefined ? this.usePendingFindAll : opts.usePendingFindAll\n    utils._(opts, mapper)\n\n    if (pendingQuery && (utils.isFunction(usePendingFindAll) ? usePendingFindAll.call(this, name, query, opts) : usePendingFindAll)) {\n      return pendingQuery\n    }\n\n    const items = this.cachedFindAll(name, hash, opts)\n\n    if (opts.force || !items) {\n      const promise = this._pendingQueries[name][hash] = Container.prototype.findAll.call(this, name, query, opts)\n      return promise\n        .then((result) => {\n          delete this._pendingQueries[name][hash]\n          result = this._end(name, result, opts)\n          this.cacheFindAll(name, result, hash, opts)\n          return result\n        }, (err) => {\n          delete this._pendingQueries[name][hash]\n          return utils.reject(err)\n        })\n    }\n\n    return utils.resolve(items)\n  },\n\n  /**\n   * Return the {@link Collection} with the given name, if for some\n   * reason you need a direct reference to the collection.\n   *\n   * @method SimpleStore#getCollection\n   * @param {string} name Name of the {@link Collection} to retrieve.\n   * @returns {Collection}\n   * @since 3.0.0\n   * @throws {Error} Thrown if the specified {@link Collection} does not\n   * exist.\n   */\n  getCollection (name) {\n    const collection = this._collections[name]\n    if (!collection) {\n      throw utils.err(`${DOMAIN}#getCollection`, name)(404, 'collection')\n    }\n    return collection\n  },\n\n  /**\n   * Hashing function used to cache {@link SimpleStore#find} and\n   * {@link SimpleStore#findAll} requests. This method simply JSONifies the\n   * `query` argument passed to {@link SimpleStore#find} or\n   * {@link SimpleStore#findAll}.\n   *\n   * Override this method for custom hashing behavior.\n   * @method SimpleStore#hashQuery\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}\n   * or {@link SimpleStore#findAll}.\n   * @param {object} query The `query` argument passed to {@link SimpleStore#find}\n   * or {@link SimpleStore#findAll}.\n   * @returns {string} The JSONified `query`.\n   * @since 3.0.0\n   */\n  hashQuery (name, query, opts) {\n    return utils.toJson(query || {})\n  },\n\n  inject (name, records, opts) {\n    console.warn('DEPRECATED: \"inject\" is deprecated, use \"add\" instead')\n    return this.add(name, records, opts)\n  },\n\n  /**\n   * Wrapper for {@link Collection#remove}. Removes the specified\n   * {@link Record} from the store.\n   *\n   * @example <caption>SimpleStore#remove</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('book');\n   * console.log(store.getAll('book').length);\n   * store.add('book', { id: 1234 });\n   * console.log(store.getAll('book').length);\n   * store.remove('book', 1234);\n   * console.log(store.getAll('book').length);\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#remove\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {string|number} id The primary key of the {@link Record} to remove.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record} to also\n   * remove from the store.\n   * @returns {Record} The removed {@link Record}, if any.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  remove (name, id, opts) {\n    const record = this.getCollection(name).remove(id, opts)\n    if (record) {\n      this.removeRelated(name, [record], opts)\n    }\n    return record\n  },\n\n  /**\n   * Wrapper for {@link Collection#removeAll}. Removes the selected\n   * {@link Record}s from the store.\n   *\n   * @example <caption>SimpleStore#removeAll</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('movie');\n   * console.log(store.getAll('movie').length);\n   * store.add('movie', [{ id: 3, rating: 'R' }, { id: 4, rating: 'PG-13' });\n   * console.log(store.getAll('movie').length);\n   * store.removeAll('movie', { rating: 'R' });\n   * console.log(store.getAll('movie').length);\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#removeAll\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record} to also\n   * remove from the store.\n   * @returns {Record} The removed {@link Record}s, if any.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  removeAll (name, query, opts) {\n    if (!query || !Object.keys(query).length) {\n      this._completedQueries[name] = {}\n    } else {\n      this._completedQueries[name][this.hashQuery(name, query, opts)] = undefined\n    }\n    const records = this.getCollection(name).removeAll(query, opts)\n    if (records.length) {\n      this.removeRelated(name, records, opts)\n    }\n    return records\n  },\n\n  /**\n   * Remove from the store {@link Record}s that are related to the provided\n   * {@link Record}(s).\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#removeRelated\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {Record|Record[]} records {@link Record}s whose relations are to be\n   * removed.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record}(s) to remove\n   * from the store.\n   * @since 3.0.0\n   */\n  removeRelated (name, records, opts) {\n    if (!utils.isArray(records)) {\n      records = [records]\n    }\n    utils.forEachRelation(this.getMapper(name), opts, (def, optsCopy) => {\n      records.forEach((record) => {\n        let relatedData\n        let query\n        if (def.foreignKey && (def.type === hasOneType || def.type === hasManyType)) {\n          query = { [def.foreignKey]: def.getForeignKey(record) }\n        } else if (def.type === hasManyType && def.localKeys) {\n          query = {\n            where: {\n              [def.getRelation().idAttribute]: {\n                'in': utils.get(record, def.localKeys)\n              }\n            }\n          }\n        } else if (def.type === hasManyType && def.foreignKeys) {\n          query = {\n            where: {\n              [def.foreignKeys]: {\n                'contains': def.getForeignKey(record)\n              }\n            }\n          }\n        } else if (def.type === belongsToType) {\n          relatedData = this.remove(def.relation, def.getForeignKey(record), optsCopy)\n        }\n        if (query) {\n          relatedData = this.removeAll(def.relation, query, optsCopy)\n        }\n        if (relatedData) {\n          if (utils.isArray(relatedData) && !relatedData.length) {\n            return\n          }\n          if (def.type === hasOneType) {\n            relatedData = relatedData[0]\n          }\n          def.setLocalField(record, relatedData)\n        }\n      })\n    })\n  },\n\n  /**\n   * Fired during {@link SimpleStore#update}. See\n   * {@link SimpleStore~beforeUpdateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdate\n   * @see SimpleStore~beforeUpdateListener\n   * @see SimpleStore#update\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdate} event.\n   *\n   * @example\n   * function onBeforeUpdate (mapperName, id, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdate', onBeforeUpdate);\n   *\n   * @callback SimpleStore~beforeUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdate}.\n   * @see SimpleStore#event:beforeUpdate\n   * @see SimpleStore#update\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#update}. See\n   * {@link SimpleStore~afterUpdateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdate\n   * @see SimpleStore~afterUpdateListener\n   * @see SimpleStore#update\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdate} event.\n   *\n   * @example\n   * function onAfterUpdate (mapperName, id, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdate', onAfterUpdate);\n   *\n   * @callback SimpleStore~afterUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdate}.\n   * @see SimpleStore#event:afterUpdate\n   * @see SimpleStore#update\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#update}. Adds the updated {@link Record} to the\n   * store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post/1234 {\"status\":\"published\"}\n   * store.update('post', 1, { status: 'published' }).then((post) => {\n   *   // The post record has also been updated in the in-memory store\n   *   console.log(store.get('post', 1234));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdate\n   * @fires SimpleStore#afterUpdate\n   * @fires SimpleStore#add\n   * @method SimpleStore#update\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#update}.\n   * @param {object} record Passed to {@link Mapper#update}.\n   * @param {object} [opts] Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  update (name, id, record, opts) {\n    opts || (opts = {})\n    return Container.prototype.update.call(this, name, id, record, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  /**\n   * Fired during {@link SimpleStore#updateAll}. See\n   * {@link SimpleStore~beforeUpdateAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdateAll\n   * @see SimpleStore~beforeUpdateAllListener\n   * @see SimpleStore#updateAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdateAll} event.\n   *\n   * @example\n   * function onBeforeUpdateAll (mapperName, props, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateAll', onBeforeUpdateAll);\n   *\n   * @callback SimpleStore~beforeUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateAll}.\n   * @see SimpleStore#event:beforeUpdateAll\n   * @see SimpleStore#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#updateAll}. See\n   * {@link SimpleStore~afterUpdateAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdateAll\n   * @see SimpleStore~afterUpdateAllListener\n   * @see SimpleStore#updateAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdateAll} event.\n   *\n   * @example\n   * function onAfterUpdateAll (mapperName, props, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateAll', onAfterUpdateAll);\n   *\n   * @callback SimpleStore~afterUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateAll}.\n   * @see SimpleStore#event:afterUpdateAll\n   * @see SimpleStore#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateAll}. Adds the updated {@link Record}s to\n   * the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post?author_id=1234 {\"status\":\"published\"}\n   * store.updateAll('post', { author_id: 1234 }, { status: 'published' }).then((posts) => {\n   *   // The post records have also been updated in the in-memory store\n   *   console.log(store.filter('posts', { author_id: 1234 }));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdateAll\n   * @fires SimpleStore#afterUpdateAll\n   * @fires SimpleStore#add\n   * @method SimpleStore#updateAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} props Passed to {@link Mapper#updateAll}.\n   * @param {object} [query] Passed to {@link Mapper#updateAll}.\n   * @param {object} [opts] Passed to {@link Mapper#updateAll}. See\n   * {@link Mapper#updateAll} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  updateAll (name, props, query, opts) {\n    opts || (opts = {})\n    return Container.prototype.updateAll.call(this, name, props, query, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  /**\n   * Fired during {@link SimpleStore#updateMany}. See\n   * {@link SimpleStore~beforeUpdateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdateMany\n   * @see SimpleStore~beforeUpdateManyListener\n   * @see SimpleStore#updateMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdateMany} event.\n   *\n   * @example\n   * function onBeforeUpdateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateMany', onBeforeUpdateMany);\n   *\n   * @callback SimpleStore~beforeUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateMany}.\n   * @see SimpleStore#event:beforeUpdateMany\n   * @see SimpleStore#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#updateMany}. See\n   * {@link SimpleStore~afterUpdateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdateMany\n   * @see SimpleStore~afterUpdateManyListener\n   * @see SimpleStore#updateMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdateMany} event.\n   *\n   * @example\n   * function onAfterUpdateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateMany', onAfterUpdateMany);\n   *\n   * @callback SimpleStore~afterUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateMany}.\n   * @see SimpleStore#event:afterUpdateMany\n   * @see SimpleStore#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateMany}. Adds the updated {@link Record}s to\n   * the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post [{\"id\":3,status\":\"published\"},{\"id\":4,status\":\"published\"}]\n   * store.updateMany('post', [\n   *   { id: 3, status: 'published' },\n   *   { id: 4, status: 'published' }\n   * ]).then((posts) => {\n   *   // The post records have also been updated in the in-memory store\n   *   console.log(store.getAll('post', 3, 4));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdateMany\n   * @fires SimpleStore#afterUpdateMany\n   * @fires SimpleStore#add\n   * @method SimpleStore#updateMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  updateMany (name, records, opts) {\n    opts || (opts = {})\n    return Container.prototype.updateMany.call(this, name, records, opts)\n      .then((result) => this._end(name, result, opts))\n  }\n}\n\nproxiedCollectionMethods.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args)\n  }\n})\n\nexport default Container.extend(props)\n\n/**\n * Fired when a record changes. Only works for records that have tracked fields.\n * See {@link SimpleStore~changeListener} on how to listen for this event.\n *\n * @event SimpleStore#change\n * @see SimpleStore~changeListener\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:change} event.\n *\n * @example\n * function onChange (mapperName, record, changes) {\n *   // do something\n * }\n * store.on('change', onChange);\n *\n * @callback SimpleStore~changeListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record} record The Record that changed.\n * @param {object} changes The changes.\n * @see SimpleStore#event:change\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are added to the in-memory store. See\n * {@link SimpleStore~addListener} on how to listen for this event.\n *\n * @event SimpleStore#add\n * @see SimpleStore~addListener\n * @see SimpleStore#event:add\n * @see SimpleStore#add\n * @see SimpleStore#create\n * @see SimpleStore#createMany\n * @see SimpleStore#find\n * @see SimpleStore#findAll\n * @see SimpleStore#update\n * @see SimpleStore#updateAll\n * @see SimpleStore#updateMany\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:add} event.\n *\n * @example\n * function onAdd (mapperName, recordOrRecords) {\n *   // do something\n * }\n * store.on('add', onAdd);\n *\n * @callback SimpleStore~addListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record|Record[]} The Record or Records that were added.\n * @see SimpleStore#event:add\n * @see SimpleStore#add\n * @see SimpleStore#create\n * @see SimpleStore#createMany\n * @see SimpleStore#find\n * @see SimpleStore#findAll\n * @see SimpleStore#update\n * @see SimpleStore#updateAll\n * @see SimpleStore#updateMany\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are removed from the in-memory store. See\n * {@link SimpleStore~removeListener} for how to listen for this event.\n *\n * @event SimpleStore#remove\n * @see SimpleStore~removeListener\n * @see SimpleStore#event:remove\n * @see SimpleStore#clear\n * @see SimpleStore#destroy\n * @see SimpleStore#destroyAll\n * @see SimpleStore#remove\n * @see SimpleStore#removeAll\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:remove} event.\n *\n * @example\n * function onRemove (mapperName, recordsOrRecords) {\n *   // do something\n * }\n * store.on('remove', onRemove);\n *\n * @callback SimpleStore~removeListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record|Record[]} Record or Records that were removed.\n * @see SimpleStore#event:remove\n * @see SimpleStore#clear\n * @see SimpleStore#destroy\n * @see SimpleStore#destroyAll\n * @see SimpleStore#remove\n * @see SimpleStore#removeAll\n * @since 3.0.0\n */\n\n/**\n * Create a subclass of this SimpleStore:\n * @example <caption>SimpleStore.extend</caption>\n * const JSData = require('js-data');\n * const { SimpleStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomSimpleStoreClass extends SimpleStore {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customSimpleStore = new CustomSimpleStoreClass();\n * console.log(customSimpleStore.foo());\n * console.log(CustomSimpleStoreClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherSimpleStoreClass = SimpleStore.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const otherSimpleStore = new OtherSimpleStoreClass();\n * console.log(otherSimpleStore.foo());\n * console.log(OtherSimpleStoreClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherSimpleStoreClass () {\n *   SimpleStore.call(this)\n *   this.created_at = new Date().getTime()\n * }\n * SimpleStore.extend({\n *   constructor: AnotherSimpleStoreClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherSimpleStore = new AnotherSimpleStoreClass();\n * console.log(anotherSimpleStore.created_at);\n * console.log(anotherSimpleStore.foo());\n * console.log(AnotherSimpleStoreClass.beep());\n *\n * @method SimpleStore.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this SimpleStore class.\n * @since 3.0.0\n */\n"},"lineCount":null}},"hash":"228c7117a61859635f43229588839878","cacheData":{"env":{}}}