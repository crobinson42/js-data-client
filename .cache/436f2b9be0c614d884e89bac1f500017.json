{"id":"node_modules/@therms/models/utils/index.js","dependencies":[{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/package.json","includedInParent":true,"mtime":1540155986754},{"name":"/Users/coryrobinson/projects/js-data-client/package.json","includedInParent":true,"mtime":1538419449751},{"name":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/.babelrc","includedInParent":true,"mtime":1538423057578},{"name":"debug","loc":{"line":1,"column":22},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/utils/index.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/node_modules/debug/src/browser.js"},{"name":"../mappers","loc":{"line":2,"column":24},"parent":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/utils/index.js","resolved":"/Users/coryrobinson/projects/js-data-client/node_modules/@therms/models/mappers/index.js"}],"generated":{"js":"const debug = require('debug')('models:store')\nconst mappers = require('../mappers')\n\n/**\n * Returns a list of methods from the first param that are not in the second param\n *\n * @param object\n * @param compareObject\n * @returns {Array}\n */\nmodule.exports.getPrototypeMethodsNotIn = (object, compareObject) =>{\n  const array = []\n\n  function hasMethod (obj, name) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name)\n    return !!desc && typeof desc.value === 'function'\n  }\n\n  const props = Object.getOwnPropertyNames(object.prototype) || []\n  props\n    .forEach(name => {\n      if (name !== 'constructor') {\n        if (!hasMethod(compareObject, name)) {\n          array.push(name)\n        }\n      }\n    })\n\n  return array\n}\n\n/**\n * Load all mappers and extend based on env\n * @param {Object} store\n * @param isBrowser\n * @param isServer\n */\nmodule.exports.retroFitStore = function retroFitStore(store, { isBrowser = false, isServer = false }) {\n  // Load all mappers in store\n  if (mappers && store && store.defineMapper) {\n    Object.keys(mappers).forEach(model => {\n      debug(`store.defineMapper for ${model}`)\n      try {\n        const modelDef = mappers[model]\n        // get environment specific config to merge on model/mapper\n        let modelEnv = {}\n        if (modelDef.env) {\n          // eslint-disable-next-line no-nested-ternary\n          modelEnv = isBrowser\n            ? modelDef.env.browser\n            : isServer\n              ? modelDef.env.server\n              : {}\n\n          delete modelDef.env\n        }\n\n        store.defineMapper(model, Object.assign({}, modelDef, modelEnv))\n        // add the model to the store object capitalizing the first letter\n        // eslint-disable-next-line no-param-reassign\n        store[`${model[0].toLocaleUpperCase()}${model.substr(1)}`] = store.as(\n          model,\n        )\n      } catch (e) {\n        console.log(`   Failed to define mapper \"${model}\"`) // eslint-disable-line no-console\n        throw e\n      }\n    })\n  }\n}\n","map":{"mappings":[{"source":"node_modules/@therms/models/utils/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@therms/models/utils/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/@therms/models/utils/index.js":"const debug = require('debug')('models:store')\nconst mappers = require('../mappers')\n\n/**\n * Returns a list of methods from the first param that are not in the second param\n *\n * @param object\n * @param compareObject\n * @returns {Array}\n */\nmodule.exports.getPrototypeMethodsNotIn = (object, compareObject) =>{\n  const array = []\n\n  function hasMethod (obj, name) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name)\n    return !!desc && typeof desc.value === 'function'\n  }\n\n  const props = Object.getOwnPropertyNames(object.prototype) || []\n  props\n    .forEach(name => {\n      if (name !== 'constructor') {\n        if (!hasMethod(compareObject, name)) {\n          array.push(name)\n        }\n      }\n    })\n\n  return array\n}\n\n/**\n * Load all mappers and extend based on env\n * @param {Object} store\n * @param isBrowser\n * @param isServer\n */\nmodule.exports.retroFitStore = function retroFitStore(store, { isBrowser = false, isServer = false }) {\n  // Load all mappers in store\n  if (mappers && store && store.defineMapper) {\n    Object.keys(mappers).forEach(model => {\n      debug(`store.defineMapper for ${model}`)\n      try {\n        const modelDef = mappers[model]\n        // get environment specific config to merge on model/mapper\n        let modelEnv = {}\n        if (modelDef.env) {\n          // eslint-disable-next-line no-nested-ternary\n          modelEnv = isBrowser\n            ? modelDef.env.browser\n            : isServer\n              ? modelDef.env.server\n              : {}\n\n          delete modelDef.env\n        }\n\n        store.defineMapper(model, Object.assign({}, modelDef, modelEnv))\n        // add the model to the store object capitalizing the first letter\n        // eslint-disable-next-line no-param-reassign\n        store[`${model[0].toLocaleUpperCase()}${model.substr(1)}`] = store.as(\n          model,\n        )\n      } catch (e) {\n        console.log(`   Failed to define mapper \"${model}\"`) // eslint-disable-line no-console\n        throw e\n      }\n    })\n  }\n}\n"},"lineCount":71}},"hash":"ae69043d892ce09cc2949d468bebf582","cacheData":{"env":{}}}